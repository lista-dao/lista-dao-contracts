/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CeToken,
  CeTokenInterface,
} from "../../../contracts/ceros/CeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "VaultChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "changeVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611244806100206000396000f3fe608060405234801561001057600080fd5b50600436106101115760003560e01c806365cacaa4116100ad5780639dc29fac116100715780639dc29fac14610248578063a457c2d71461025b578063a9059cbb1461026e578063dd62ed3e14610281578063f2fde38b1461029457600080fd5b806365cacaa4146101d957806370a08231146101fe578063715018a6146102275780638da5cb5b1461022f57806395d89b411461024057600080fd5b806306fdde0314610116578063095ea7b31461013457806318160ddd1461015757806323b872dd14610169578063313ce5671461017c578063395093511461018b57806340c10f191461019e5780634cd88b76146101b357806360e232a9146101c6575b600080fd5b61011e6102a7565b60405161012b9190610e97565b60405180910390f35b610147610142366004610f03565b610339565b604051901515815260200161012b565b6067545b60405190815260200161012b565b610147610177366004610f2d565b610351565b6040516012815260200161012b565b610147610199366004610f03565b610375565b6101b16101ac366004610f03565b610397565b005b6101b16101c1366004610fb2565b6103d8565b6101b16101d436600461101e565b6104c4565b6097546001600160a01b03165b6040516001600160a01b03909116815260200161012b565b61015b61020c36600461101e565b6001600160a01b031660009081526065602052604090205490565b6101b1610542565b6033546001600160a01b03166101e6565b61011e610578565b6101b1610256366004610f03565b610587565b610147610269366004610f03565b6105bb565b61014761027c366004610f03565b610636565b61015b61028f366004611040565b610644565b6101b16102a236600461101e565b61066f565b6060606880546102b690611073565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290611073565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b60003361034781858561070a565b5060019392505050565b60003361035f85828561082e565b61036a8585856108a8565b506001949350505050565b6000336103478185856103888383610644565b61039291906110c4565b61070a565b6097546001600160a01b031633146103ca5760405162461bcd60e51b81526004016103c1906110dc565b60405180910390fd5b6103d48282610a64565b5050565b60006103e46001610b31565b905080156103fc576000805461ff0019166101001790555b610404610bbe565b61047785858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f89018190048102820181019092528781529250879150869081908401838280828437600092019190915250610bed92505050565b80156104bd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b031633146104ee5760405162461bcd60e51b81526004016103c190611109565b609780546001600160a01b0319166001600160a01b0383169081179091556040519081527fa49691f0dd6477ccef49962612a236d252e3a31c3be8b61fa6abeff3e74a75729060200160405180910390a150565b6033546001600160a01b0316331461056c5760405162461bcd60e51b81526004016103c190611109565b6105766000610c40565b565b6060606980546102b690611073565b6097546001600160a01b031633146105b15760405162461bcd60e51b81526004016103c1906110dc565b6103d48282610c92565b600033816105c98286610644565b9050838110156106295760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103c1565b61036a828686840361070a565b6000336103478185856108a8565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6033546001600160a01b031633146106995760405162461bcd60e51b81526004016103c190611109565b6001600160a01b0381166106fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c1565b61070781610c40565b50565b6001600160a01b03831661076c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c1565b6001600160a01b0382166107cd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c1565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061083a8484610644565b905060001981146108a257818110156108955760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c1565b6108a2848484840361070a565b50505050565b6001600160a01b03831661090c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c1565b6001600160a01b03821661096e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c1565b6001600160a01b038316600090815260656020526040902054818110156109e65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c1565b6001600160a01b03808516600090815260656020526040808220858503905591851681529081208054849290610a1d9084906110c4565b92505081905550826001600160a01b0316846001600160a01b03166000805160206111ef83398151915284604051610a5791815260200190565b60405180910390a36108a2565b6001600160a01b038216610aba5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c1565b8060676000828254610acc91906110c4565b90915550506001600160a01b03821660009081526065602052604081208054839290610af99084906110c4565b90915550506040518181526001600160a01b038316906000906000805160206111ef8339815191529060200160405180910390a35050565b60008054610100900460ff1615610b78578160ff166001148015610b545750303b155b610b705760405162461bcd60e51b81526004016103c19061113e565b506000919050565b60005460ff808416911610610b9f5760405162461bcd60e51b81526004016103c19061113e565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610be55760405162461bcd60e51b81526004016103c19061118c565b610576610dce565b600054610100900460ff16610c145760405162461bcd60e51b81526004016103c19061118c565b8151610c27906068906020850190610dfe565b508051610c3b906069906020840190610dfe565b505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610cf25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c1565b6001600160a01b03821660009081526065602052604090205481811015610d665760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c1565b6001600160a01b0383166000908152606560205260408120838303905560678054849290610d959084906111d7565b90915550506040518281526000906001600160a01b038516906000805160206111ef8339815191529060200160405180910390a3505050565b600054610100900460ff16610df55760405162461bcd60e51b81526004016103c19061118c565b61057633610c40565b828054610e0a90611073565b90600052602060002090601f016020900481019282610e2c5760008555610e72565b82601f10610e4557805160ff1916838001178555610e72565b82800160010185558215610e72579182015b82811115610e72578251825591602001919060010190610e57565b50610e7e929150610e82565b5090565b5b80821115610e7e5760008155600101610e83565b600060208083528351808285015260005b81811015610ec457858101830151858201604001528201610ea8565b81811115610ed6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bb957600080fd5b60008060408385031215610f1657600080fd5b610f1f83610eec565b946020939093013593505050565b600080600060608486031215610f4257600080fd5b610f4b84610eec565b9250610f5960208501610eec565b9150604084013590509250925092565b60008083601f840112610f7b57600080fd5b50813567ffffffffffffffff811115610f9357600080fd5b602083019150836020828501011115610fab57600080fd5b9250929050565b60008060008060408587031215610fc857600080fd5b843567ffffffffffffffff80821115610fe057600080fd5b610fec88838901610f69565b9096509450602087013591508082111561100557600080fd5b5061101287828801610f69565b95989497509550505050565b60006020828403121561103057600080fd5b61103982610eec565b9392505050565b6000806040838503121561105357600080fd5b61105c83610eec565b915061106a60208401610eec565b90509250929050565b600181811c9082168061108757607f821691505b602082108114156110a857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110d7576110d76110ae565b500190565b602080825260139082015272135a5b9d195c8e881b9bdd08185b1b1bddd959606a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000828210156111e9576111e96110ae565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220bbac458d836eaa222ec484f619795ea1c6c253cdfbe519d0f65c86b03da40b4f64736f6c634300080a0033";

type CeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CeToken__factory extends ContractFactory {
  constructor(...args: CeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CeToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CeToken__factory {
    return super.connect(runner) as CeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CeTokenInterface {
    return new Interface(_abi) as CeTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CeToken {
    return new Contract(address, _abi, runner) as unknown as CeToken;
  }
}
