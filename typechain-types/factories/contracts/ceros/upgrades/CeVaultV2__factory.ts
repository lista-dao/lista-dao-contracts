/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CeVaultV2,
  CeVaultV2Interface,
} from "../../../../contracts/ceros/upgrades/CeVaultV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "CeTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentRatio",
        type: "uint256",
      },
    ],
    name: "RatioUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "RouterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ceTokenAddress",
        type: "address",
      },
    ],
    name: "changeCeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "changeRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claimYields",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claimYieldsFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAbnbcAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCeTokenBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getClaimedOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPrincipalOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAmountInVault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getYieldFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "ceTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "aBNBcAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611932806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063b4bf36b21161007c578063b4bf36b2146102ce578063b6b55f25146102df578063c96f0e01146102f2578063f2fde38b1461031b578063f3fef3a31461032e578063fad834841461034157600080fd5b8063715018a6146102745780638da5cb5b1461027c5780639f1d926714610284578063aba317a914610297578063b0f479a1146102aa578063b36684ac146102bb57600080fd5b8063340ac20f11610115578063340ac20f146101d15780633fd44f17146101e65780634226626a146101f9578063463fd1af146102225780635c975abb146102355780635d602c001461024b57600080fd5b80630c632bbe146101525780631101596c1461017557806317d7de7c14610196578063223888c1146101ab5780632f4f21e2146101be575b600080fd5b60ca546001600160a01b03165b60405161016c9190611480565b60405180910390f35b6101886101833660046114ab565b610349565b60405190815260200161016c565b61019e6103bd565b60405161016c91906114de565b6101886101b9366004611533565b61044f565b6101886101cc36600461154e565b61055e565b6101e46101df366004611533565b6105bc565b005b6101e46101f4366004611533565b610641565b610188610207366004611533565b6001600160a01b0316600090815260cd602052604090205490565b6101e461023036600461158e565b6106d0565b60655460ff16604051901515815260200161016c565b610188610259366004611533565b6001600160a01b0316600090815260ce602052604090205490565b6101e461079c565b61015f6107d7565b610188610292366004611660565b6107e6565b6101886102a5366004611533565b610852565b60cc546001600160a01b031661015f565b6101886102c9366004611533565b61090e565b60cb546001600160a01b031661015f565b6101886102ed36600461169c565b61094d565b610188610300366004611533565b6001600160a01b0316600090815260cf602052604090205490565b6101e4610329366004611533565b610981565b61018861033c36600461154e565b610a21565b610188610a56565b60cc546000906001600160a01b0316331461037f5760405162461bcd60e51b8152600401610376906116b5565b60405180910390fd5b600260975414156103a25760405162461bcd60e51b8152600401610376906116e2565b60026097556103b18383610acd565b60016097559392505050565b606060c980546103cc90611719565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890611719565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60405163aba317a960e01b81526000908190309063aba317a990610477908690600401611480565b602060405180830381865afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b89190611754565b6001600160a01b038416600090815260ce602052604090205490915081106104e35750600092915050565b6001600160a01b038316600090815260ce6020526040812054610507908390611783565b6001600160a01b038516600090815260cd60205260409020549091508111610533575060009392505050565b6001600160a01b038416600090815260cd60205260409020546105569082611783565b949350505050565b6000600260975414156105835760405162461bcd60e51b8152600401610376906116e2565b600260975560cc546001600160a01b031633146105b25760405162461bcd60e51b8152600401610376906116b5565b6103b18383610c7f565b336105c56107d7565b6001600160a01b0316146105eb5760405162461bcd60e51b81526004016103769061179a565b60cc80546001600160a01b0319166001600160a01b0383161790556040517f1085cec9a5108943412475d298086ae4d0abf09cfad47b05436b89fe887a820c90610636908390611480565b60405180910390a150565b3361064a6107d7565b6001600160a01b0316146106705760405162461bcd60e51b81526004016103769061179a565b60ca80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527e51bf61fc8420b1c603da31d1959ed30f4ca655d7fbd40109fe822fb963dc75910160405180910390a15050565b60006106dc6001610ea0565b905080156106f4576000805461ff0019166101001790555b6106fc610f2d565b610704610f5c565b61070c610f8b565b835161071f9060c99060208701906113e7565b5060ca80546001600160a01b038086166001600160a01b03199283161790925560cb8054928516929091169190911790558015610796576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b336107a56107d7565b6001600160a01b0316146107cb5760405162461bcd60e51b81526004016103769061179a565b6107d56000610fba565b565b6033546001600160a01b031690565b60006002609754141561080b5760405162461bcd60e51b8152600401610376906116e2565b600260975560cc546001600160a01b0316331461083a5760405162461bcd60e51b8152600401610376906116b5565b61084584848461100c565b6001609755949350505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190611754565b6001600160a01b038416600090815260cf6020526040902054909150670de0b6b3a7640000906108fd9083906117cf565b61090791906117ee565b9392505050565b6000600260975414156109335760405162461bcd60e51b8152600401610376906116e2565b60026097556109423383610acd565b600160975592915050565b6000600260975414156109725760405162461bcd60e51b8152600401610376906116e2565b60026097556109423383610c7f565b3361098a6107d7565b6001600160a01b0316146109b05760405162461bcd60e51b81526004016103769061179a565b6001600160a01b038116610a155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610376565b610a1e81610fba565b50565b600060026097541415610a465760405162461bcd60e51b8152600401610376906116e2565b60026097556103b133848461100c565b60cb546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a87903090600401611480565b602060405180830381865afa158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac89190611754565b905090565b60405163223888c160e01b81526000908190309063223888c190610af5908790600401611480565b602060405180830381865afa158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b369190611754565b905060008111610b885760405162461bcd60e51b815260206004820152601b60248201527f686173206e6f7420676f74207969656c647320746f20636c61696d00000000006044820152606401610376565b6001600160a01b038416600090815260cd602052604081208054839290610bb0908490611810565b909155505060cb5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610be79086908590600401611828565b6020604051808303816000875af1158015610c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2a9190611841565b50826001600160a01b0316846001600160a01b03167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd399268383604051610c7091815260200190565b60405180910390a39392505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf99190611754565b60cb546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190611841565b50600081610d8b85670de0b6b3a76400006117cf565b610d9591906117ee565b6001600160a01b038616600090815260ce6020526040812080549293508692909190610dc2908490611810565b90915550506001600160a01b038516600090815260cf602052604081208054839290610def908490611810565b909155505060ca546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990610e269088908590600401611828565b600060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b50506040518381526001600160a01b03881692503391507f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a79060200160405180910390a3949350505050565b60008054610100900460ff1615610ee7578160ff166001148015610ec35750303b155b610edf5760405162461bcd60e51b815260040161037690611863565b506000919050565b60005460ff808416911610610f0e5760405162461bcd60e51b815260040161037690611863565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610f545760405162461bcd60e51b8152600401610376906118b1565b6107d5611356565b600054610100900460ff16610f835760405162461bcd60e51b8152600401610376906118b1565b6107d5611386565b600054610100900460ff16610fb25760405162461bcd60e51b8152600401610376906118b1565b6107d56113b9565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110869190611754565b90506000670de0b6b3a764000061109d83866117cf565b6110a791906117ee565b60cb546040516370a0823160e01b815291925082916001600160a01b03909116906370a08231906110dc903090600401611480565b602060405180830381865afa1580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111d9190611754565b101561116b5760405162461bcd60e51b815260206004820152601c60248201527f6e6f74207375636820616d6f756e7420696e20746865207661756c74000000006044820152606401610376565b6001600160a01b038616600090815260cf6020526040902054848110156111cb5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610376565b6001600160a01b038716600090815260cf6020526040812080548792906111f3908490611783565b909155505060ca54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061122a908a908990600401611828565b600060405180830381600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506001600160a01b038716600090815260ce602052604081208054849290611284908490611783565b909155505060cb5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906112bb9089908690600401611828565b6020604051808303816000875af11580156112da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fe9190611841565b50856001600160a01b0316876001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb8460405161134491815260200190565b60405180910390a35095945050505050565b600054610100900460ff1661137d5760405162461bcd60e51b8152600401610376906118b1565b6107d533610fba565b600054610100900460ff166113ad5760405162461bcd60e51b8152600401610376906118b1565b6065805460ff19169055565b600054610100900460ff166113e05760405162461bcd60e51b8152600401610376906118b1565b6001609755565b8280546113f390611719565b90600052602060002090601f016020900481019282611415576000855561145b565b82601f1061142e57805160ff191683800117855561145b565b8280016001018555821561145b579182015b8281111561145b578251825591602001919060010190611440565b5061146792915061146b565b5090565b5b80821115611467576000815560010161146c565b6001600160a01b0391909116815260200190565b80356001600160a01b0381168114610f2857600080fd5b600080604083850312156114be57600080fd5b6114c783611494565b91506114d560208401611494565b90509250929050565b600060208083528351808285015260005b8181101561150b578581018301518582016040015282016114ef565b8181111561151d576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561154557600080fd5b61090782611494565b6000806040838503121561156157600080fd5b61156a83611494565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156115a357600080fd5b833567ffffffffffffffff808211156115bb57600080fd5b818601915086601f8301126115cf57600080fd5b8135818111156115e1576115e1611578565b604051601f8201601f19908116603f0116810190838211818310171561160957611609611578565b8160405282815289602084870101111561162257600080fd5b82602086016020830137600060208483010152809750505050505061164960208501611494565b915061165760408501611494565b90509250925092565b60008060006060848603121561167557600080fd5b61167e84611494565b925061168c60208501611494565b9150604084013590509250925092565b6000602082840312156116ae57600080fd5b5035919050565b602080825260139082015272149bdd5d195c8e881b9bdd08185b1b1bddd959606a1b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600181811c9082168061172d57607f821691505b6020821081141561174e57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561176657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156117955761179561176d565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008160001904831182151516156117e9576117e961176d565b500290565b60008261180b57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156118235761182361176d565b500190565b6001600160a01b03929092168252602082015260400190565b60006020828403121561185357600080fd5b8151801515811461090757600080fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122055a2542b4bf224ef6ca394d779ab9a1a659ad361b3430491456a3e18bda7c7a964736f6c634300080a0033";

type CeVaultV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CeVaultV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CeVaultV2__factory extends ContractFactory {
  constructor(...args: CeVaultV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CeVaultV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CeVaultV2__factory {
    return super.connect(runner) as CeVaultV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CeVaultV2Interface {
    return new Interface(_abi) as CeVaultV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): CeVaultV2 {
    return new Contract(address, _abi, runner) as unknown as CeVaultV2;
  }
}
