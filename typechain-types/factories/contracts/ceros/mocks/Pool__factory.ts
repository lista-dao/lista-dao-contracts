/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Pool,
  PoolInterface,
} from "../../../../contracts/ceros/mocks/Pool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_certToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "certToken",
    outputs: [
      {
        internalType: "contract ICertToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayerFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "pendingUnstakesOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumStake",
        type: "uint256",
      },
    ],
    name: "setMinimumStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "setRelayerFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeAndClaimCerts",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "unstakeCertsFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161067c38038061067c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6105e9806100936000396000f3fe60806040526004361061006f5760003560e01c80630872e9ff1461007b578063233e9903146100b85780633f9dac52146100da57806381782dff1461010957806383302a6f14610129578063c2117d8214610149578063d9bbd2781461015e578063ff0a42de1461017357600080fd5b3661007657005b600080fd5b34801561008757600080fd5b5060005461009b906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100c457600080fd5b506100d86100d33660046104ab565b600155565b005b3480156100e657600080fd5b506100fb6100f53660046104e0565b50600090565b6040519081526020016100af565b34801561011557600080fd5b506100d8610124366004610502565b61017b565b34801561013557600080fd5b506100d86101443660046104ab565b600255565b34801561015557600080fd5b506002546100fb565b34801561016a57600080fd5b506001546100fb565b6100d861027d565b600054604051632770a7eb60e21b8152336004820152602481018390526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b1580156101c757600080fd5b505af11580156101db573d6000803e3d6000fd5b505050506102798260008054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610234573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610258919061052c565b61026a84670de0b6b3a764000061055b565b610274919061057a565b6103e9565b5050565b6001543410158015610290575060025434115b6102da5760405162461bcd60e51b81526020600482015260166024820152753ab73837b9b9b4b13632903a3930b739b0b1ba34b7b760511b60448201526064015b60405180910390fd5b6000600254346102ea919061059c565b90506000670de0b6b3a764000060008054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c919061052c565b610376908461055b565b610380919061057a565b6000546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156103cd57600080fd5b505af11580156103e1573d6000803e3d6000fd5b505050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610436576040519150601f19603f3d011682016040523d82523d6000602084013e61043b565b606091505b50509050806104a65760405162461bcd60e51b815260206004820152603160248201527f756e61626c6520746f2073656e642076616c75652c20726563697069656e74206044820152701b585e481a185d99481c995d995c9d1959607a1b60648201526084016102d1565b505050565b6000602082840312156104bd57600080fd5b5035919050565b80356001600160a01b03811681146104db57600080fd5b919050565b6000602082840312156104f257600080fd5b6104fb826104c4565b9392505050565b6000806040838503121561051557600080fd5b61051e836104c4565b946020939093013593505050565b60006020828403121561053e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561057557610575610545565b500290565b60008261059757634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156105ae576105ae610545565b50039056fea2646970667358221220b39126ae5748fb94caddc70ed8723564b4c061fe334ecde311879e26eee3da6464736f6c634300080a0033";

type PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pool__factory extends ContractFactory {
  constructor(...args: PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _certToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_certToken, overrides || {});
  }
  override deploy(
    _certToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_certToken, overrides || {}) as Promise<
      Pool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Pool__factory {
    return super.connect(runner) as Pool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolInterface {
    return new Interface(_abi) as PoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Pool {
    return new Contract(address, _abi, runner) as unknown as Pool;
  }
}
