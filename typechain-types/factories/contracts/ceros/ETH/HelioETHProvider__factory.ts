/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  HelioETHProvider,
  HelioETHProviderInterface,
} from "../../../../contracts/ceros/ETH/HelioETHProvider";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ceToken",
        type: "address",
      },
    ],
    name: "ChangeCeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ChangeCertToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
    ],
    name: "ChangeCollateralToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dao",
        type: "address",
      },
    ],
    name: "ChangeDao",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ChangeOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "auctionProxy",
        type: "address",
      },
    ],
    name: "ChangeProxy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChangeWithdrwalAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "_ceETHRouter",
    outputs: [
      {
        internalType: "contract ICerosETHRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ceToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_certToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_collateralToken",
    outputs: [
      {
        internalType: "contract ICertToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_dao",
    outputs: [
      {
        internalType: "contract IDao",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_proxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ceToken",
        type: "address",
      },
    ],
    name: "changeCeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "changeCertToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
    ],
    name: "changeCollateralToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
    ],
    name: "changeDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "changeMinWithdrwalAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "auctionProxy",
        type: "address",
      },
    ],
    name: "changeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "yields",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "daoBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "daoMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "certToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "ceToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "ceRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "liquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "provideInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "releaseInBETH",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "releaseInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c87806100206000396000f3fe608060405234801561001057600080fd5b50600436106101845760003560e01c8063715018a6116100d9578063c403184111610087578063c40318411461031c578063cc2effdc1461032f578063d8826fec14610342578063df3d23ae14610355578063e068372614610368578063f2fde38b1461037b578063f7b188a51461038e57600080fd5b8063715018a6146102b85780638456cb59146102c05780638aea00ac146102c85780638da5cb5b146102db5780639479cfa2146102e357806395b6ef0c146102f6578063b7f5e8a11461030957600080fd5b80633fd44f17116101365780633fd44f17146102305780635c975abb146102435780636c134b15146102595780636e8d9a181461026c5780636f2bb86a1461027f57806370b0a843146102925780637110e76c146102a557600080fd5b806306394c9b1461018957806314866aef1461019e57806314febe94146101b15780631e83409a146101c4578063232da7fe146101ea578063358b2b1a146101fd57806339ce843d1461021d575b600080fd5b61019c6101973660046118e6565b610396565b005b61019c6101ac366004611901565b610424565b61019c6101bf36600461192b565b610506565b6101d76101d23660046118e6565b61056a565b6040519081526020015b60405180910390f35b61019c6101f83660046118e6565b6106cb565b60cc54610210906001600160a01b031681565b6040516101e19190611944565b6101d761022b366004611901565b610745565b61019c61023e3660046118e6565b610893565b60655460ff1660405190151581526020016101e1565b6101d7610267366004611901565b61093e565b60cb54610210906001600160a01b031681565b61019c61028d366004611901565b6109ef565b60c954610210906001600160a01b031681565b61019c6102b33660046118e6565b610a96565b61019c610b41565b61019c610b7c565b6101d76102d636600461192b565b610bb3565b610210610ccb565b60ca54610210906001600160a01b031681565b61019c610304366004611958565b610cda565b60cd54610210906001600160a01b031681565b61019c61032a3660046118e6565b610df5565b60cf54610210906001600160a01b031681565b61019c6103503660046118e6565b610e6f565b61019c610363366004611901565b610f1b565b60ce54610210906001600160a01b031681565b61019c6103893660046118e6565b610fc2565b61019c611062565b3361039f610ccb565b6001600160a01b0316146103ce5760405162461bcd60e51b81526004016103c5906119c5565b60405180910390fd5b60c980546001600160a01b0319166001600160a01b0383161790556040517f8eb831fe42156caaf4721a87ad40c6e662b893dbeee76d7a3ed2564a318b091c90610419908390611944565b60405180910390a150565b61042c610ccb565b6001600160a01b0316336001600160a01b03161480610455575060cf546001600160a01b031633145b6104715760405162461bcd60e51b81526004016103c5906119fa565b600260975414156104945760405162461bcd60e51b81526004016103c590611a2d565b600260975560cc546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906104cb9085908590600401611a64565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b5050600160975550505050565b3361050f610ccb565b6001600160a01b0316146105355760405162461bcd60e51b81526004016103c5906119c5565b60d08190556040518181527f2ccf9b018be36b1d502f5e8a2dec19db7120fdbfb90e0c656123e406d05d6a0690602001610419565b60006002609754141561058f5760405162461bcd60e51b81526004016103c590611a2d565b600260975561059c610ccb565b6001600160a01b0316336001600160a01b031614806105c5575060c9546001600160a01b031633145b6106095760405162461bcd60e51b815260206004820152601560248201527413dc195c985d1bdc8e881b9bdd08185b1b1bddd959605a1b60448201526064016103c5565b60cd54604051630f41a04d60e11b81526001600160a01b0390911690631e83409a90610639908590600401611944565b6020604051808303816000875af1158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190611a7d565b9050816001600160a01b03167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4826040516106b991815260200190565b60405180910390a26001609755919050565b336106d4610ccb565b6001600160a01b0316146106fa5760405162461bcd60e51b81526004016103c5906119c5565b60cc80546001600160a01b0319166001600160a01b0383161790556040517f5ab190ac1b858818c30b831d9bd74e6bef6f75de987d59f1beb4aab85d06483290610419908390611944565b600061075360655460ff1690565b156107705760405162461bcd60e51b81526004016103c590611a96565b600260975414156107935760405162461bcd60e51b81526004016103c590611a2d565b600260975560d0548210156107ba5760405162461bcd60e51b81526004016103c590611ac0565b6107c43383611099565b60cd546040516315b37d4160e31b81526001600160a01b039091169063ad9bea08906107f69086908690600401611a64565b6020604051808303816000875af1158015610815573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108399190611a7d565b9050826001600160a01b0316336001600160a01b03167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988360405161088091815260200190565b60405180910390a3600160975592915050565b3361089c610ccb565b6001600160a01b0316146108c25760405162461bcd60e51b81526004016103c5906119c5565b60ce5460cb546108e0916001600160a01b039182169116600061117e565b60cb80546001600160a01b0319166001600160a01b0383811691821790925560ce5461090f921660001961117e565b7f1c51d83fbf878c22f78dd72bd5f93a9adfa124683a91b2ad431f10c9ff731db4816040516104199190611944565b600061094c60655460ff1690565b156109695760405162461bcd60e51b81526004016103c590611a96565b6002609754141561098c5760405162461bcd60e51b81526004016103c590611a2d565b600260975560d0548210156109b35760405162461bcd60e51b81526004016103c590611ac0565b6109bd3383611099565b60cd54604051634782f77960e01b81526001600160a01b0390911690634782f779906107f69086908690600401611a64565b6109f7610ccb565b6001600160a01b0316336001600160a01b03161480610a20575060cf546001600160a01b031633145b610a3c5760405162461bcd60e51b81526004016103c5906119fa565b60026097541415610a5f5760405162461bcd60e51b81526004016103c590611a2d565b600260975560cd54604051633795dc3560e11b81526001600160a01b0390911690636f2bb86a906104cb9085908590600401611a64565b33610a9f610ccb565b6001600160a01b031614610ac55760405162461bcd60e51b81526004016103c5906119c5565b60cd5460ca54610ae3916001600160a01b039182169116600061117e565b60ca80546001600160a01b0319166001600160a01b0383811691821790925560cd54610b12921660001961117e565b7f2c0797a32dfa101d94ff2021f209d0e440f979fe0e2ad10338d4586927c18cc3816040516104199190611944565b33610b4a610ccb565b6001600160a01b031614610b705760405162461bcd60e51b81526004016103c5906119c5565b610b7a60006112be565b565b33610b85610ccb565b6001600160a01b031614610bab5760405162461bcd60e51b81526004016103c5906119c5565b610b7a611310565b6000610bc160655460ff1690565b15610bde5760405162461bcd60e51b81526004016103c590611a96565b60026097541415610c015760405162461bcd60e51b81526004016103c590611a2d565b600260975560ca54610c1e906001600160a01b031633308561137f565b60cd5460405163b6b55f2560e01b8152600481018490526001600160a01b039091169063b6b55f25906024016020604051808303816000875af1158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d9190611a7d565b9050610c9933826113a6565b60405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020016106b9565b6033546001600160a01b031690565b6000610ce66001611455565b90508015610cfe576000805461ff0019166101001790555b610d066114e2565b610d0e611511565b610d16611540565b60c98054336001600160a01b03199182161790915560cc805482166001600160a01b038a81169190911790915560ca8054831689831617905560cb8054831688831690811790915560cd8054841688841617905560ce80549093169186169190911790915560d0839055610d8d908460001961117e565b60ca54610da6906001600160a01b03168560001961117e565b8015610dec576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610dfe610ccb565b6001600160a01b031614610e245760405162461bcd60e51b81526004016103c5906119c5565b60cf80546001600160a01b0319166001600160a01b0383161790556040517fcf16493c33f7a5001593c6b3158b6613c39a56bed7e2fe27f83a7ee297b6e32a90610419908390611944565b33610e78610ccb565b6001600160a01b031614610e9e5760405162461bcd60e51b81526004016103c5906119c5565b60ce5460cb54610ebc916001600160a01b039182169116600061117e565b60ce80546001600160a01b0319166001600160a01b0383811691821790925560cb54610eec92169060001961117e565b7f31a1aa5f369c073ebb0b9d07b962961a2fcaf8ae160e6485f220450f9d7f8c53816040516104199190611944565b610f23610ccb565b6001600160a01b0316336001600160a01b03161480610f4c575060cf546001600160a01b031633145b610f685760405162461bcd60e51b81526004016103c5906119fa565b60026097541415610f8b5760405162461bcd60e51b81526004016103c590611a2d565b600260975560cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906104cb9085908590600401611a64565b33610fcb610ccb565b6001600160a01b031614610ff15760405162461bcd60e51b81526004016103c5906119c5565b6001600160a01b0381166110565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c5565b61105f816112be565b50565b3361106b610ccb565b6001600160a01b0316146110915760405162461bcd60e51b81526004016103c5906119c5565b610b7a61156f565b60ce5460cb54604051636ce5768960e11b81526001600160a01b039283169263d9caed12926110d2928792909116908690600401611af7565b6020604051808303816000875af11580156110f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111159190611a7d565b5060cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906111489085908590600401611a64565b600060405180830381600087803b15801561116257600080fd5b505af1158015611176573d6000803e3d6000fd5b505050505050565b8015806111f85750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156111d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f69190611a7d565b155b6112635760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016103c5565b6112b98363095ea7b360e01b8484604051602401611282929190611a64565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526115e9565b505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60655460ff16156113335760405162461bcd60e51b81526004016103c590611a96565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113683390565b6040516113759190611944565b60405180910390a1565b6113a0846323b872dd60e01b85858560405160240161128293929190611af7565b50505050565b60ce5460cb54604051638340f54960e01b81526001600160a01b0392831692638340f549926113df928792909116908690600401611af7565b6020604051808303816000875af11580156113fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114229190611a7d565b5060cc546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906111489085908590600401611a64565b60008054610100900460ff161561149c578160ff1660011480156114785750303b155b6114945760405162461bcd60e51b81526004016103c590611b1b565b506000919050565b60005460ff8084169116106114c35760405162461bcd60e51b81526004016103c590611b1b565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166115095760405162461bcd60e51b81526004016103c590611b69565b610b7a6116bb565b600054610100900460ff166115385760405162461bcd60e51b81526004016103c590611b69565b610b7a6116eb565b600054610100900460ff166115675760405162461bcd60e51b81526004016103c590611b69565b610b7a61171e565b60655460ff166115b85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103c5565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611368565b600061163e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661174c9092919063ffffffff16565b8051909150156112b9578080602001905181019061165c9190611bb4565b6112b95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103c5565b600054610100900460ff166116e25760405162461bcd60e51b81526004016103c590611b69565b610b7a336112be565b600054610100900460ff166117125760405162461bcd60e51b81526004016103c590611b69565b6065805460ff19169055565b600054610100900460ff166117455760405162461bcd60e51b81526004016103c590611b69565b6001609755565b606061175b8484600085611765565b90505b9392505050565b6060824710156117c65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103c5565b6001600160a01b0385163b61181d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c5565b600080866001600160a01b031685876040516118399190611c02565b60006040518083038185875af1925050503d8060008114611876576040519150601f19603f3d011682016040523d82523d6000602084013e61187b565b606091505b509150915061188b828286611896565b979650505050505050565b606083156118a557508161175e565b8251156118b55782518084602001fd5b8160405162461bcd60e51b81526004016103c59190611c1e565b80356001600160a01b03811681146114dd57600080fd5b6000602082840312156118f857600080fd5b61175e826118cf565b6000806040838503121561191457600080fd5b61191d836118cf565b946020939093013593505050565b60006020828403121561193d57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b60008060008060008060c0878903121561197157600080fd5b61197a876118cf565b9550611988602088016118cf565b9450611996604088016118cf565b93506119a4606088016118cf565b92506119b2608088016118cf565b915060a087013590509295509295509295565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260199082015278105d58dd1a5bdb941c9bde1e4e881b9bdd08185b1b1bddd959603a1b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060208284031215611a8f57600080fd5b5051919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601b908201527f546f6f20736d616c6c207769746864726177616c20616d6f756e740000000000604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611bc657600080fd5b8151801515811461175e57600080fd5b60005b83811015611bf1578181015183820152602001611bd9565b838111156113a05750506000910152565b60008251611c14818460208701611bd6565b9190910192915050565b6020815260008251806020840152611c3d816040850160208701611bd6565b601f01601f1916919091016040019291505056fea2646970667358221220046952584eda330644b5e93ef1e3ba538ada2a463bd617d19b1b3b2bd18d6fee64736f6c634300080a0033";

type HelioETHProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelioETHProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelioETHProvider__factory extends ContractFactory {
  constructor(...args: HelioETHProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HelioETHProvider & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HelioETHProvider__factory {
    return super.connect(runner) as HelioETHProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelioETHProviderInterface {
    return new Interface(_abi) as HelioETHProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HelioETHProvider {
    return new Contract(address, _abi, runner) as unknown as HelioETHProvider;
  }
}
