/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  DogLike,
  DogLikeInterface,
} from "../../../contracts/interfaces/DogLike";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "urn",
        type: "address",
      },
      {
        internalType: "address",
        name: "kpr",
        type: "address",
      },
    ],
    name: "bark",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class DogLike__factory {
  static readonly abi = _abi;
  static createInterface(): DogLikeInterface {
    return new Interface(_abi) as DogLikeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DogLike {
    return new Contract(address, _abi, runner) as unknown as DogLike;
  }
}
