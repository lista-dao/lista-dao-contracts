/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAuctionProxy,
  IAuctionProxyInterface,
} from "../../../contracts/interfaces/IAuctionProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leftover",
        type: "uint256",
      },
    ],
    name: "Liquidation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiverAddress",
        type: "address",
      },
    ],
    name: "buyFromAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getAllActiveAuctionsForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pos",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tab",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lot",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "usr",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "tic",
            type: "uint96",
          },
          {
            internalType: "uint256",
            name: "top",
            type: "uint256",
          },
        ],
        internalType: "struct Sale[]",
        name: "sales",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "startAuction",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAuctionProxy__factory {
  static readonly abi = _abi;
  static createInterface(): IAuctionProxyInterface {
    return new Interface(_abi) as IAuctionProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAuctionProxy {
    return new Contract(address, _abi, runner) as unknown as IAuctionProxy;
  }
}
