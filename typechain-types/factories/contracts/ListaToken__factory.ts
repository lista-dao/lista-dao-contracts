/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ListaToken,
  ListaTokenInterface,
} from "../../contracts/ListaToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "EIP712_DOMAIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EIP712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200114838038062001148833981016040819052620000349162000335565b60408051808201825260098152684c697374612044414f60b81b6020808301918252835180850190945260058452644c4953544160d81b90840152815191929162000082916003916200028f565b508051620000989060049060208401906200028f565b505060408051808201825260098152684c697374612044414f60b81b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f9da62b2f4e24dff8f3cf35e59818cdd4c74a7da613c8153cb5cd273dbb561a3a9181018290527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082018190524660808301523060a083015291925060c00160408051808303601f1901815291905280516020909101206080526200019e8360126200018890600a6200047c565b6200019890633b9aca006200048d565b620001a7565b50505062000507565b6001600160a01b038216620002025760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620002169190620004af565b90915550506001600160a01b0382166000908152602081905260408120805483929062000245908490620004af565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200029d90620004ca565b90600052602060002090601f016020900481019282620002c157600085556200030c565b82601f10620002dc57805160ff19168380011785556200030c565b828001600101855582156200030c579182015b828111156200030c578251825591602001919060010190620002ef565b506200031a9291506200031e565b5090565b5b808211156200031a57600081556001016200031f565b6000602082840312156200034857600080fd5b81516001600160a01b03811681146200036057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003be578160001904821115620003a257620003a262000367565b80851615620003b057918102915b93841c939080029062000382565b509250929050565b600082620003d75750600162000476565b81620003e65750600062000476565b8160018114620003ff57600281146200040a576200042a565b600191505062000476565b60ff8411156200041e576200041e62000367565b50506001821b62000476565b5060208310610133831016604e8410600b84101617156200044f575081810a62000476565b6200045b83836200037d565b806000190482111562000472576200047262000367565b0290505b92915050565b60006200036060ff841683620003c6565b6000816000190483118215151615620004aa57620004aa62000367565b500290565b60008219821115620004c557620004c562000367565b500190565b600181811c90821680620004df57607f821691505b602082108114156200050157634e487b7160e01b600052602260045260246000fd5b50919050565b608051610c2562000523600039600061047c0152610c256000f3fe608060405234801561001057600080fd5b50600436106100e05760003560e01c80637ecebe00116100875780637ecebe00146101bd57806395d89b41146101e6578063a457c2d7146101ee578063a9059cbb14610201578063d505accf14610214578063dd62ed3e14610229578063e1b11da41461023c578063eccec5a81461026357600080fd5b806306fdde03146100e5578063095ea7b31461010357806318160ddd1461012657806323b872dd1461013857806330adf81f1461014b578063313ce56714610172578063395093511461018157806370a0823114610194575b600080fd5b6100ed610283565b6040516100fa91906109cc565b60405180910390f35b610116610111366004610a3d565b610315565b60405190151581526020016100fa565b6002545b6040519081526020016100fa565b610116610146366004610a67565b61032d565b61012a7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b604051601281526020016100fa565b61011661018f366004610a3d565b610351565b61012a6101a2366004610aa3565b6001600160a01b031660009081526020819052604090205490565b61012a6101cb366004610aa3565b6001600160a01b031660009081526005602052604090205490565b6100ed610373565b6101166101fc366004610a3d565b610382565b61011661020f366004610a3d565b610402565b610227610222366004610ac5565b610410565b005b61012a610237366004610b38565b610635565b61012a7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6100ed604051806040016040528060018152602001603160f81b81525081565b60606003805461029290610b6b565b80601f01602080910402602001604051908101604052809291908181526020018280546102be90610b6b565b801561030b5780601f106102e05761010080835404028352916020019161030b565b820191906000526020600020905b8154815290600101906020018083116102ee57829003601f168201915b5050505050905090565b600033610323818585610660565b5060019392505050565b60003361033b858285610784565b6103468585856107fe565b506001949350505050565b6000336103238185856103648383610635565b61036e9190610bbc565b610660565b60606004805461029290610b6b565b600033816103908286610635565b9050838110156103f55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103468286868403610660565b6000336103238185856107fe565b834211156104605760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103ec565b6001600160a01b038716600090815260056020526040812080547f0000000000000000000000000000000000000000000000000000000000000000917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91876104ce83610bd4565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161054792919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156105b2573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b03161461061f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103ec565b61062a898989610660565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106c25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ec565b6001600160a01b0382166107235760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107908484610635565b905060001981146107f857818110156107eb5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103ec565b6107f88484848403610660565b50505050565b6001600160a01b0383166108625760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ec565b6001600160a01b0382166108c45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ec565b6001600160a01b0383166000908152602081905260409020548181101561093c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ec565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610973908490610bbc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109bf91815260200190565b60405180910390a36107f8565b600060208083528351808285015260005b818110156109f9578581018301518582016040015282016109dd565b81811115610a0b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a3857600080fd5b919050565b60008060408385031215610a5057600080fd5b610a5983610a21565b946020939093013593505050565b600080600060608486031215610a7c57600080fd5b610a8584610a21565b9250610a9360208501610a21565b9150604084013590509250925092565b600060208284031215610ab557600080fd5b610abe82610a21565b9392505050565b600080600080600080600060e0888a031215610ae057600080fd5b610ae988610a21565b9650610af760208901610a21565b95506040880135945060608801359350608088013560ff81168114610b1b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610b4b57600080fd5b610b5483610a21565b9150610b6260208401610a21565b90509250929050565b600181811c90821680610b7f57607f821691505b60208210811415610ba057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bcf57610bcf610ba6565b500190565b6000600019821415610be857610be8610ba6565b506001019056fea2646970667358221220245c086a682da74ad26aab9923f465467b7d82de3ceac4b76e58d608003d7a7664736f6c634300080a0033";

type ListaTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListaTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ListaToken__factory extends ContractFactory {
  constructor(...args: ListaTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      ListaToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ListaToken__factory {
    return super.connect(runner) as ListaToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListaTokenInterface {
    return new Interface(_abi) as ListaTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ListaToken {
    return new Contract(address, _abi, runner) as unknown as ListaToken;
  }
}
