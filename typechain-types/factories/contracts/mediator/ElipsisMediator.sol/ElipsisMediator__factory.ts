/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ElipsisMediator,
  ElipsisMediatorInterface,
} from "../../../../contracts/mediator/ElipsisMediator.sol/ElipsisMediator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
    ],
    name: "changeTargetContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "denyOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "live",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "operators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "relyOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "contract Elipsis",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d10806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639c52a7f1116100715780639c52a7f114610143578063ab86de6c14610156578063b66503cf14610169578063bf353dbb1461017c578063c4d66de81461019c578063d4b83992146101af57600080fd5b806313e7c9d8146100b95780631b62636c146100ec5780632378bea61461010157806365fae35e14610114578063957aa58c14610127578063962a36bd14610130575b600080fd5b6100d96100c7366004610ac2565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ff6100fa366004610ac2565b6101da565b005b6100ff61010f366004610add565b61024f565b6100ff610122366004610ac2565b610323565b6100d960045481565b6100ff61013e366004610ac2565b610392565b6100ff610151366004610ac2565b610401565b6100ff610164366004610ac2565b61046d565b6100ff610177366004610add565b6104e1565b6100d961018a366004610ac2565b60016020526000908152604090205481565b6100ff6101aa366004610ac2565b6105ae565b6003546101c2906001600160a01b031681565b6040516001600160a01b0390911681526020016100e3565b33600090815260016020819052604090912054146102135760405162461bcd60e51b815260040161020a90610b07565b60405180910390fd5b6004546001146102355760405162461bcd60e51b815260040161020a90610b38565b6001600160a01b0316600090815260026020526040812055565b33600090815260016020819052604090912054148061027d5750336000908152600260205260409020546001145b6102995760405162461bcd60e51b815260040161020a90610b63565b6004546001146102bb5760405162461bcd60e51b815260040161020a90610b92565b6003546040516311bc5f5360e11b81526001600160a01b0390911690632378bea6906102ed9085908590600401610bbd565b600060405180830381600087803b15801561030757600080fd5b505af115801561031b573d6000803e3d6000fd5b505050505050565b33600090815260016020819052604090912054146103535760405162461bcd60e51b815260040161020a90610b07565b6004546001146103755760405162461bcd60e51b815260040161020a90610b38565b6001600160a01b0316600090815260016020819052604090912055565b33600090815260016020819052604090912054146103c25760405162461bcd60e51b815260040161020a90610b07565b6004546001146103e45760405162461bcd60e51b815260040161020a90610b38565b6001600160a01b0316600090815260026020526040902060019055565b33600090815260016020819052604090912054146104315760405162461bcd60e51b815260040161020a90610b07565b6004546001146104535760405162461bcd60e51b815260040161020a90610b38565b6001600160a01b0316600090815260016020526040812055565b336000908152600160208190526040909120541461049d5760405162461bcd60e51b815260040161020a90610b07565b6004546001146104bf5760405162461bcd60e51b815260040161020a90610b92565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260016020819052604090912054148061050f5750336000908152600260205260409020546001145b61052b5760405162461bcd60e51b815260040161020a90610b63565b60045460011461054d5760405162461bcd60e51b815260040161020a90610b92565b6105626001600160a01b03831633308461064f565b60035461057c906001600160a01b038481169116836106c0565b60035460405163b66503cf60e01b81526001600160a01b039091169063b66503cf906102ed9085908590600401610bbd565b60006105ba60016107c9565b905080156105d2576000805461ff0019166101001790555b336000908152600160208190526040909120819055600380546001600160a01b0319166001600160a01b038516179055600455801561064b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6040516001600160a01b03808516602483015283166044820152606481018290526106ba9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610856565b50505050565b80158061073a5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190610bd6565b155b6107a55760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161020a565b6107c48363095ea7b360e01b8484604051602401610683929190610bbd565b505050565b60008054610100900460ff1615610810578160ff1660011480156107ec5750303b155b6108085760405162461bcd60e51b815260040161020a90610bef565b506000919050565b60005460ff8084169116106108375760405162461bcd60e51b815260040161020a90610bef565b506000805460ff191660ff92909216919091179055600190565b919050565b60006108ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109289092919063ffffffff16565b8051909150156107c457808060200190518101906108c99190610c3d565b6107c45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161020a565b60606109378484600085610941565b90505b9392505050565b6060824710156109a25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161020a565b6001600160a01b0385163b6109f95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161020a565b600080866001600160a01b03168587604051610a159190610c8b565b60006040518083038185875af1925050503d8060008114610a52576040519150601f19603f3d011682016040523d82523d6000602084013e610a57565b606091505b5091509150610a67828286610a72565b979650505050505050565b60608315610a8157508161093a565b825115610a915782518084602001fd5b8160405162461bcd60e51b815260040161020a9190610ca7565b80356001600160a01b038116811461085157600080fd5b600060208284031215610ad457600080fd5b61093a82610aab565b60008060408385031215610af057600080fd5b610af983610aab565b946020939093013593505050565b6020808252601790820152761359591a585d1bdc8bdb9bdd0b585d5d1a1bdc9a5e9959604a1b604082015260600190565b6020808252601190820152704d65646961746f722f6e6f742d6c69766560781b604082015260600190565b60208082526015908201527426b2b234b0ba37b917b737ba16b7b832b930ba37b960591b604082015260600190565b6020808252601190820152706d65646961746f722f6e6f742d6c69766560781b604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060208284031215610be857600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215610c4f57600080fd5b8151801515811461093a57600080fd5b60005b83811015610c7a578181015183820152602001610c62565b838111156106ba5750506000910152565b60008251610c9d818460208701610c5f565b9190910192915050565b6020815260008251806020840152610cc6816040850160208701610c5f565b601f01601f1916919091016040019291505056fea2646970667358221220af34d28024b5308437d80a9059d041d023b0245ff069afaadd6228f073e6301764736f6c634300080a0033";

type ElipsisMediatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElipsisMediatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ElipsisMediator__factory extends ContractFactory {
  constructor(...args: ElipsisMediatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ElipsisMediator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ElipsisMediator__factory {
    return super.connect(runner) as ElipsisMediator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElipsisMediatorInterface {
    return new Interface(_abi) as ElipsisMediatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ElipsisMediator {
    return new Contract(address, _abi, runner) as unknown as ElipsisMediator;
  }
}
