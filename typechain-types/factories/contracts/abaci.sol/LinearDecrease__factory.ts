/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LinearDecrease,
  LinearDecreaseInterface,
} from "../../../contracts/abaci.sol/LinearDecrease";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Deny",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "File",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Rely",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "file",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "top",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dur",
        type: "uint256",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tau",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610627806100206000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c806329ae811414610072578063487a23951461008757806365fae35e146100ac5780638129fc1c146100bf5780639c52a7f1146100c7578063bf353dbb146100da578063cfc4af55146100fa575b600080fd5b6100856100803660046104bd565b610103565b005b61009a6100953660046104bd565b6101e9565b60405190815260200160405180910390f35b6100856100ba3660046104df565b61023c565b6100856102b3565b6100856100d53660046104df565b61035b565b61009a6100e83660046104df565b60016020526000908152604090205481565b61009a60025481565b336000908152600160208190526040909120541461013c5760405162461bcd60e51b81526004016101339061050f565b60405180910390fd5b816274617560e81b14156101545760028190556101ab565b60405162461bcd60e51b815260206004820152602660248201527f4c696e65617244656372656173652f66696c652d756e7265636f676e697a65646044820152652d706172616d60d01b6064820152608401610133565b817fe986e40cc8c151830d4f61050f4fb2e4add8567caad2d5f5496f9158e91fe4c7826040516101dd91815260200190565b60405180910390a25050565b600060025482106101fc57506000610236565b6002546102339084906102246102128683610546565b6b033b2e3c9fd0803ce80000006103cf565b61022e9190610581565b6103f9565b90505b92915050565b336000908152600160208190526040909120541461026c5760405162461bcd60e51b81526004016101339061050f565b6001600160a01b038116600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b60006102bf6001610435565b905080156102d7576000805461ff0019166101001790555b33600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a28015610358576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b336000908152600160208190526040909120541461038b5760405162461bcd60e51b81526004016101339061050f565b6001600160a01b038116600081815260016020526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b60008115806103f0575050808202828282816103ed576103ed61056b565b04145b61023657600080fd5b8181028115806104175750828282816104145761041461056b565b04145b61042057600080fd5b6b033b2e3c9fd0803ce8000000900492915050565b60008054610100900460ff161561047c578160ff1660011480156104585750303b155b6104745760405162461bcd60e51b8152600401610133906105a3565b506000919050565b60005460ff8084169116106104a35760405162461bcd60e51b8152600401610133906105a3565b506000805460ff191660ff92909216919091179055600190565b600080604083850312156104d057600080fd5b50508035926020909101359150565b6000602082840312156104f157600080fd5b81356001600160a01b038116811461050857600080fd5b9392505050565b6020808252601d908201527f4c696e65617244656372656173652f6e6f742d617574686f72697a6564000000604082015260600190565b60008282101561056657634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052601260045260246000fd5b60008261059e57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea26469706673582212207b8fcc2f6eff4fece649d5576956a933300f6a8fb251cb302348d3a2beedab9464736f6c634300080a0033";

type LinearDecreaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LinearDecreaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LinearDecrease__factory extends ContractFactory {
  constructor(...args: LinearDecreaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LinearDecrease & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LinearDecrease__factory {
    return super.connect(runner) as LinearDecrease__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinearDecreaseInterface {
    return new Interface(_abi) as LinearDecreaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LinearDecrease {
    return new Contract(address, _abi, runner) as unknown as LinearDecrease;
  }
}
