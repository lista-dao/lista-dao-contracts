/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PriceOracleTestnet,
  PriceOracleTestnetInterface,
} from "../../../contracts/oracle/PriceOracleTestnet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "USD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBNB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "contract IMovingWindowOracle",
        name: "_pancakeOracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_useBNBPath",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pancakeOracle",
    outputs: [
      {
        internalType: "contract IMovingWindowOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peek",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIn",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenInDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useBNBPath",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161149f61004c600039600081816102ff01528181610348015281816103d101528181610411015261048d015261149f6000f3fe6080604052600436106100c85760003560e01c8063715018a61161007a578063715018a6146101e757806371c12d6b146101fc5780638da5cb5b1461021d5780638dd950021461023b578063afa7fd7e14610263578063bc75111d14610283578063e4bbb5a8146102b4578063f2fde38b146102d457600080fd5b80631bf6c21b146100cd5780633659cfe6146101125780634f1ef2861461013457806352d1902d1461014757806359e02dd71461016a57806366a4b6c0146101945780636daf390b146101c7575b600080fd5b3480156100d957600080fd5b506100f57378867bbeef44f2326bf8ddd1941a4439382ef2a781565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011e57600080fd5b5061013261012d366004610f51565b6102f4565b005b610132610142366004610f84565b6103c6565b34801561015357600080fd5b5061015c610480565b604051908152602001610109565b34801561017657600080fd5b5061017f61052e565b60408051928352901515602083015201610109565b3480156101a057600080fd5b5060c9546101b590600160b01b900460ff1681565b60405160ff9091168152602001610109565b3480156101d357600080fd5b5060c9546100f5906001600160a01b031681565b3480156101f357600080fd5b50610132610775565b34801561020857600080fd5b5060c9546101b590600160a81b900460ff1681565b34801561022957600080fd5b506097546001600160a01b03166100f5565b34801561024757600080fd5b506100f573ae13d989dac2f0debff460ac112a837c89baa7cd81565b34801561026f57600080fd5b5060ca546100f5906001600160a01b031681565b34801561028f57600080fd5b5060c9546102a490600160a01b900460ff1681565b6040519015158152602001610109565b3480156102c057600080fd5b506101326102cf366004611048565b6107ab565b3480156102e057600080fd5b506101326102ef366004610f51565b61097e565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103465760405162461bcd60e51b815260040161033d90611098565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610378610a16565b6001600160a01b03161461039e5760405162461bcd60e51b815260040161033d906110e4565b6103a781610a32565b604080516000808252602082019092526103c391839190610a5c565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561040f5760405162461bcd60e51b815260040161033d90611098565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610441610a16565b6001600160a01b0316146104675760405162461bcd60e51b815260040161033d906110e4565b61047082610a32565b61047c82826001610a5c565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461051b5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b606482015260840161033d565b5060008051602061142383398151915290565b60c9546000908190819061054d90600160a81b900460ff16600a61122a565b60c95490915060009061056b90600160b01b900460ff16600a61122a565b60c954909150600090600160a01b900460ff16156106ba5760ca5460c954604051632321bc7960e21b81526000926001600160a01b0390811692638c86f1e4926105d39290911690889073ae13d989dac2f0debff460ac112a837c89baa7cd90600401611239565b602060405180830381865afa1580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610614919061125c565b60ca54604051632321bc7960e21b81529192506001600160a01b031690638c86f1e4906106719073ae13d989dac2f0debff460ac112a837c89baa7cd9085907378867bbeef44f2326bf8ddd1941a4439382ef2a790600401611239565b602060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b2919061125c565b91505061074a565b60ca5460c954604051632321bc7960e21b81526001600160a01b0392831692638c86f1e4926107069291169087907378867bbeef44f2326bf8ddd1941a4439382ef2a790600401611239565b602060405180830381865afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610747919061125c565b90505b60006107568284611275565b61076890670de0b6b3a7640000611297565b9660019650945050505050565b6097546001600160a01b0316331461079f5760405162461bcd60e51b815260040161033d906112b6565b6107a96000610bcc565b565b60006107b76001610c1e565b905080156107cf576000805461ff0019166101001790555b6107d7610ca6565b60c980546001600160a01b0319166001600160a01b0386169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015610830573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085491906112eb565b60c960156101000a81548160ff021916908360ff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a76001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e491906112eb565b60c9805460ca80546001600160a01b0319166001600160a01b03881617905562ff00ff60a01b1916600160b01b60ff939093169290920260ff60a01b191691909117600160a01b841515021790558015610978576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6097546001600160a01b031633146109a85760405162461bcd60e51b815260040161033d906112b6565b6001600160a01b038116610a0d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161033d565b6103c381610bcc565b600080516020611423833981519152546001600160a01b031690565b6097546001600160a01b031633146103c35760405162461bcd60e51b815260040161033d906112b6565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610a9457610a8f83610cd5565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610aee575060408051601f3d908101601f19168201909252610aeb9181019061125c565b60015b610b515760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161033d565b6000805160206114238339815191528114610bc05760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161033d565b50610a8f838383610d71565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610c65578160ff166001148015610c415750303b155b610c5d5760405162461bcd60e51b815260040161033d9061130e565b506000919050565b60005460ff808416911610610c8c5760405162461bcd60e51b815260040161033d9061130e565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610ccd5760405162461bcd60e51b815260040161033d9061135c565b6107a9610d96565b6001600160a01b0381163b610d425760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161033d565b60008051602061142383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610d7a83610dc6565b600082511180610d875750805b15610a8f576109788383610e06565b600054610100900460ff16610dbd5760405162461bcd60e51b815260040161033d9061135c565b6107a933610bcc565b610dcf81610cd5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610e6e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161033d565b600080846001600160a01b031684604051610e8991906113d3565b600060405180830381855af49150503d8060008114610ec4576040519150601f19603f3d011682016040523d82523d6000602084013e610ec9565b606091505b5091509150610ef1828260405180606001604052806027815260200161144360279139610efc565b925050505b92915050565b60608315610f0b575081610f35565b825115610f1b5782518084602001fd5b8160405162461bcd60e51b815260040161033d91906113ef565b9392505050565b6001600160a01b03811681146103c357600080fd5b600060208284031215610f6357600080fd5b8135610f3581610f3c565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610f9757600080fd5b8235610fa281610f3c565b9150602083013567ffffffffffffffff80821115610fbf57600080fd5b818501915085601f830112610fd357600080fd5b813581811115610fe557610fe5610f6e565b604051601f8201601f19908116603f0116810190838211818310171561100d5761100d610f6e565b8160405282815288602084870101111561102657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060006060848603121561105d57600080fd5b833561106881610f3c565b9250602084013561107881610f3c565b91506040840135801515811461108d57600080fd5b809150509250925092565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561118157816000190482111561116757611167611130565b8085161561117457918102915b93841c939080029061114b565b509250929050565b60008261119857506001610ef6565b816111a557506000610ef6565b81600181146111bb57600281146111c5576111e1565b6001915050610ef6565b60ff8411156111d6576111d6611130565b50506001821b610ef6565b5060208310610133831016604e8410600b8410161715611204575081810a610ef6565b61120e8383611146565b806000190482111561122257611222611130565b029392505050565b6000610f3560ff841683611189565b6001600160a01b0393841681526020810192909252909116604082015260600190565b60006020828403121561126e57600080fd5b5051919050565b60008261129257634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156112b1576112b1611130565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156112fd57600080fd5b815160ff81168114610f3557600080fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b838110156113c25781810151838201526020016113aa565b838111156109785750506000910152565b600082516113e58184602087016113a7565b9190910192915050565b602081526000825180602084015261140e8160408501602087016113a7565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122002f6a46edfe065a384349852fd8b75a1050f50b602b879db49cb3d2d9e72efc764736f6c634300080a0033";

type PriceOracleTestnetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleTestnetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracleTestnet__factory extends ContractFactory {
  constructor(...args: PriceOracleTestnetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PriceOracleTestnet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PriceOracleTestnet__factory {
    return super.connect(runner) as PriceOracleTestnet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleTestnetInterface {
    return new Interface(_abi) as PriceOracleTestnetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PriceOracleTestnet {
    return new Contract(address, _abi, runner) as unknown as PriceOracleTestnet;
  }
}
