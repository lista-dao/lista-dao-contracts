/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SlidingWindowOracle,
  SlidingWindowOracleInterface,
} from "../../../contracts/oracle/SlidingWindowOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "consult",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "granularity",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "windowSize_",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "granularity_",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "observationIndexOf",
    outputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairObservations",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price0Cumulative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price1Cumulative",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "windowSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611cc761004c600039600081816102cf01528181610318015281816103a1015281816103e1015261045d0152611cc76000f3fe6080604052600436106100c85760003560e01c80638da5cb5b1161007a5780638da5cb5b146101a1578063b49dc741146101d3578063bfcc8e42146101f3578063c45a01551461022e578063c640752d1461024e578063dbaad32f1461026e578063e4463eb21461028e578063f2fde38b146102a457600080fd5b80633659cfe6146100cd5780634f1ef286146100ef57806352d1902d14610102578063556f0dc71461012a578063715018a6146101565780638a14117a1461016b5780638c86f1e414610181575b600080fd5b3480156100d957600080fd5b506100ed6100e8366004611708565b6102c4565b005b6100ed6100fd36600461173b565b610396565b34801561010e57600080fd5b50610117610450565b6040519081526020015b60405180910390f35b34801561013657600080fd5b5060cb546101449060ff1681565b60405160ff9091168152602001610121565b34801561016257600080fd5b506100ed6104fe565b34801561017757600080fd5b5061011760ca5481565b34801561018d57600080fd5b5061011761019c3660046117ff565b610534565b3480156101ad57600080fd5b506097546001600160a01b03165b6040516001600160a01b039091168152602001610121565b3480156101df57600080fd5b506100ed6101ee366004611841565b61070d565b3480156101ff57600080fd5b5061021361020e36600461187e565b61088b565b60408051938452602084019290925290820152606001610121565b34801561023a57600080fd5b5060c9546101bb906001600160a01b031681565b34801561025a57600080fd5b506100ed6102693660046118aa565b6108cd565b34801561027a57600080fd5b506101446102893660046118e3565b610a2c565b34801561029a57600080fd5b5061011760cc5481565b3480156102b057600080fd5b506100ed6102bf366004611708565b610a50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103165760405162461bcd60e51b815260040161030d906118fc565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610348610ae8565b6001600160a01b03161461036e5760405162461bcd60e51b815260040161030d90611948565b61037781610b04565b6040805160008082526020820190925261039391839190610b2e565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103df5760405162461bcd60e51b815260040161030d906118fc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610411610ae8565b6001600160a01b0316146104375760405162461bcd60e51b815260040161030d90611948565b61044082610b04565b61044c82826001610b2e565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104eb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b606482015260840161030d565b50600080516020611c4b83398151915290565b6097546001600160a01b031633146105285760405162461bcd60e51b815260040161030d90611994565b6105326000610c9e565b565b60c95460405163e6a4390560e01b81526001600160a01b0385811660048301528381166024830152600092839291169063e6a4390590604401602060405180830381865afa15801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae91906119c9565b905060006105bb82610cf0565b805460ca549192504203908111156106315760405162461bcd60e51b815260206004820152603360248201527f536c6964696e6757696e646f774f7261636c653a204d495353494e475f4849536044820152722a27a924a1a0a62fa7a129a2a92b20aa24a7a760691b606482015260840161030d565b60cc5460020260ca540381101561069f5760405162461bcd60e51b815260206004820152602c60248201527f536c6964696e6757696e646f774f7261636c653a20554e45585045435445445f60448201526b1512535157d153105414d15160a21b606482015260840161030d565b6000806106ab85610d70565b509150915060006106bc8a89610f38565b509050896001600160a01b0316816001600160a01b031614156106f6576106e9856001015484868c611030565b9650505050505050610706565b6106e9856002015483868c611030565b9392505050565b60006107196001611084565b90508015610731576000805461ff0019166101001790555b610739611111565b60018260ff161161078c5760405162461bcd60e51b815260206004820181905260248201527f536c6964696e6757696e646f774f7261636c653a204752414e554c4152495459604482015260640161030d565b8260ff831661079b8183611a12565b60cc8190556107aa9190611a26565b146108105760405162461bcd60e51b815260206004820152603060248201527f536c6964696e6757696e646f774f7261636c653a2057494e444f575f4e4f545f60448201526f4556454e4c595f444956495349424c4560801b606482015260840161030d565b60c980546001600160a01b0319166001600160a01b03861617905560ca83905560cb805460ff191660ff84161790558015610885576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60cd60205281600052604060002081815481106108a757600080fd5b600091825260209091206003909102018054600182015460029092015490935090915083565b60c95460405163e6a4390560e01b81526001600160a01b0384811660048301528381166024830152600092169063e6a4390590604401602060405180830381865afa158015610920573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094491906119c9565b6001600160a01b038116600090815260cd60205260409020549091505b60cb5460ff168110156109a1576001600160a01b038216600090815260cd602052604081208054600101815590528061099981611a45565b915050610961565b5060006109ad42610a2c565b6001600160a01b038316600090815260cd602052604081208054929350909160ff84169081106109df576109df611a60565b90600052602060002090600302019050600081600001544203905060cc54811115610a2457600080610a1086610d70565b504286556001860191909155600285015550505b505050505050565b60008060cc5483610a3d9190611a12565b60cb549091506107069060ff1682611a76565b6097546001600160a01b03163314610a7a5760405162461bcd60e51b815260040161030d90611994565b6001600160a01b038116610adf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161030d565b61039381610c9e565b600080516020611c4b833981519152546001600160a01b031690565b6097546001600160a01b031633146103935760405162461bcd60e51b815260040161030d90611994565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b6657610b6183611140565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610bc0575060408051601f3d908101601f19168201909252610bbd91810190611a8a565b60015b610c235760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161030d565b600080516020611c4b8339815191528114610c925760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161030d565b50610b618383836111dc565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080610cfc42610a2c565b60cb5490915060009060ff90811690600184011681610d1d57610d1d6119e6565b06905060cd6000856001600160a01b03166001600160a01b031681526020019081526020016000208160ff1681548110610d5957610d59611a60565b906000526020600020906003020192505050919050565b6000806000610d7d611201565b9050836001600160a01b0316635909c0d56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de19190611a8a565b9250836001600160a01b0316635a3d54936040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e459190611a8a565b91506000806000866001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae9190611aba565b9250925092508363ffffffff168163ffffffff1614610f2e5780840363ffffffff8116610ee76001600160701b03808616908716611217565b600001516001600160e01b031602870196508063ffffffff16610f1c856001600160701b0316856001600160701b0316611217565b516001600160e01b0316029590950194505b5050509193909250565b600080826001600160a01b0316846001600160a01b03161415610fab5760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b606482015260840161030d565b826001600160a01b0316846001600160a01b031610610fcb578284610fce565b83835b90925090506001600160a01b0382166110295760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015260640161030d565b9250929050565b6000806040518060200160405280858888038161104f5761104f6119e6565b046001600160e01b03169052905061107161106a828561134c565b5160701c90565b6001600160901b03169695505050505050565b60008054610100900460ff16156110cb578160ff1660011480156110a75750303b155b6110c35760405162461bcd60e51b815260040161030d90611aff565b506000919050565b60005460ff8084169116106110f25760405162461bcd60e51b815260040161030d90611aff565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166111385760405162461bcd60e51b815260040161030d90611b4d565b6105326113e4565b6001600160a01b0381163b6111ad5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161030d565b600080516020611c4b83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6111e583611414565b6000825111806111f25750805b15610b61576108858383611454565b600061121264010000000042611a76565b905090565b604080516020810190915260008152600082116112855760405162461bcd60e51b815260206004820152602660248201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260448201526579207a65726f60d01b606482015260840161030d565b8261129f5750604080516020810190915260008152611346565b6001600160901b03831161130c57600082607085901b816112c2576112c26119e6565b0490506001600160e01b038111156112ec5760405162461bcd60e51b815260040161030d90611b98565b6040518060200160405280826001600160e01b0316815250915050611346565b600061131d84600160701b85611548565b90506001600160e01b038111156112ec5760405162461bcd60e51b815260040161030d90611b98565b92915050565b604080516020810190915260008152600082158061138757505082516001600160e01b031682810290838281611384576113846119e6565b04145b6113cf5760405162461bcd60e51b81526020600482015260196024820152784669786564506f696e743a3a6d756c3a206f766572666c6f7760381b604482015260640161030d565b60408051602081019091529081529392505050565b600054610100900460ff1661140b5760405162461bcd60e51b815260040161030d90611b4d565b61053233610c9e565b61141d81611140565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6114bc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161030d565b600080846001600160a01b0316846040516114d79190611bfb565b600060405180830381855af49150503d8060008114611512576040519150601f19603f3d011682016040523d82523d6000602084013e611517565b606091505b509150915061153f8282604051806060016040528060278152602001611c6b60279139611608565b95945050505050565b60008060006115578686611641565b915091506000848061156b5761156b6119e6565b86880990508281111561157f576001820391505b9182900391816115a357848381611598576115986119e6565b049350505050610706565b8482106115f25760405162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a2046554c4c4449565f4f564552464c4f57000000000000604482015260640161030d565b6115fd83838761166e565b979650505050505050565b60608315611617575081610706565b8251156116275782518084602001fd5b8160405162461bcd60e51b815260040161030d9190611c17565b6000808060001984860990508385029250828103915082811015611666576001820391505b509250929050565b600060018219018216808381611686576116866119e6565b049250808581611698576116986119e6565b049450808119600101816116ae576116ae6119e6565b60028581038087028203028087028203028087028203028087028203028087028203028087028203029586029003909402930460010193909302939093010292915050565b6001600160a01b038116811461039357600080fd5b60006020828403121561171a57600080fd5b8135610706816116f3565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561174e57600080fd5b8235611759816116f3565b9150602083013567ffffffffffffffff8082111561177657600080fd5b818501915085601f83011261178a57600080fd5b81358181111561179c5761179c611725565b604051601f8201601f19908116603f011681019083821181831017156117c4576117c4611725565b816040528281528860208487010111156117dd57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060006060848603121561181457600080fd5b833561181f816116f3565b9250602084013591506040840135611836816116f3565b809150509250925092565b60008060006060848603121561185657600080fd5b8335611861816116f3565b925060208401359150604084013560ff8116811461183657600080fd5b6000806040838503121561189157600080fd5b823561189c816116f3565b946020939093013593505050565b600080604083850312156118bd57600080fd5b82356118c8816116f3565b915060208301356118d8816116f3565b809150509250929050565b6000602082840312156118f557600080fd5b5035919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156119db57600080fd5b8151610706816116f3565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082611a2157611a216119e6565b500490565b6000816000190483118215151615611a4057611a406119fc565b500290565b6000600019821415611a5957611a596119fc565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600082611a8557611a856119e6565b500690565b600060208284031215611a9c57600080fd5b5051919050565b80516001600160701b038116811461110c57600080fd5b600080600060608486031215611acf57600080fd5b611ad884611aa3565b9250611ae660208501611aa3565b9150604084015163ffffffff8116811461183657600080fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252601e908201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f770000604082015260600190565b60005b83811015611bea578181015183820152602001611bd2565b838111156108855750506000910152565b60008251611c0d818460208701611bcf565b9190910192915050565b6020815260008251806020840152611c36816040850160208701611bcf565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122015be687728026ad823812cf4929a649ccda9ddee3f46f6f2cfdc9a56a48f602e64736f6c634300080a0033";

type SlidingWindowOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SlidingWindowOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SlidingWindowOracle__factory extends ContractFactory {
  constructor(...args: SlidingWindowOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SlidingWindowOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SlidingWindowOracle__factory {
    return super.connect(runner) as SlidingWindowOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SlidingWindowOracleInterface {
    return new Interface(_abi) as SlidingWindowOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SlidingWindowOracle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SlidingWindowOracle;
  }
}
