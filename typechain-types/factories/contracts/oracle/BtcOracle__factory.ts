/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BtcOracle,
  BtcOracleInterface,
} from "../../../contracts/oracle/BtcOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregatorAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "peek",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061040b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806359e02dd71461003b578063c4d66de81461005c575b600080fd5b610043610071565b6040805192835290151560208301520160405180910390f35b61006f61006a3660046102a1565b610184565b005b600080600080600060029054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ee91906102eb565b5093505092505061012c81426101049190610351565b106101565760405162461bcd60e51b815260206004820152601b60248201527f4274634f7261636c652f74696d657374616d702d746f6f2d6f6c64000000000060448201526064015b60405180910390fd5b6000821361016a5750600093849350915050565b610179826402540be400610368565b946001945092505050565b60006101906001610214565b905080156101a8576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015610210576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60008054610100900460ff161561025b578160ff1660011480156102375750303b155b6102535760405162461bcd60e51b815260040161014d90610387565b506000919050565b60005460ff8084169116106102825760405162461bcd60e51b815260040161014d90610387565b506000805460ff191660ff92909216919091179055600190565b919050565b6000602082840312156102b357600080fd5b81356001600160a01b03811681146102ca57600080fd5b9392505050565b805169ffffffffffffffffffff8116811461029c57600080fd5b600080600080600060a0868803121561030357600080fd5b61030c866102d1565b945060208601519350604086015192506060860151915061032f608087016102d1565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b6000828210156103635761036361033b565b500390565b60008160001904831182151516156103825761038261033b565b500290565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea264697066735822122016720b4b60e18954106e55cc03a65b01055e8133e3ee57fb5dbe346f1fb37bc564736f6c634300080a0033";

type BtcOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BtcOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BtcOracle__factory extends ContractFactory {
  constructor(...args: BtcOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BtcOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BtcOracle__factory {
    return super.connect(runner) as BtcOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BtcOracleInterface {
    return new Interface(_abi) as BtcOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BtcOracle {
    return new Contract(address, _abi, runner) as unknown as BtcOracle;
  }
}
