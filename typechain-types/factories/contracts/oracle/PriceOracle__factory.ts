/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PriceOracle,
  PriceOracleInterface,
} from "../../../contracts/oracle/PriceOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "contract IMovingWindowOracle",
        name: "_pancakeOracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_useBNBPath",
        type: "bool",
      },
      {
        internalType: "address",
        name: "_wbnb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usd",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pancakeOracle",
    outputs: [
      {
        internalType: "contract IMovingWindowOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peek",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIn",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenInDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "usd",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useBNBPath",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wbnb",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161148b61004c600039600081816104cd015281816105160152818161059f015281816105df015261065b015261148b6000f3fe6080604052600436106100c85760003560e01c8063715018a61161007a578063715018a6146101df57806371c12d6b146101f45780638d72647e146102155780638da5cb5b14610235578063afa7fd7e14610253578063bc75111d14610273578063d63a6ccd146102a4578063f2fde38b146102c457600080fd5b806321c84cba146100cd5780633659cfe6146100ef5780634f1ef2861461010f57806352d1902d1461012257806359e02dd71461014a57806366a4b6c0146101745780636daf390b146101a7575b600080fd5b3480156100d957600080fd5b506100ed6100e8366004610f17565b6102e4565b005b3480156100fb57600080fd5b506100ed61010a366004610f8d565b6104c2565b6100ed61011d366004610fc0565b610594565b34801561012e57600080fd5b5061013761064e565b6040519081526020015b60405180910390f35b34801561015657600080fd5b5061015f6106fc565b60408051928352901515602083015201610141565b34801561018057600080fd5b5060cb5461019590600160b01b900460ff1681565b60405160ff9091168152602001610141565b3480156101b357600080fd5b5060cb546101c7906001600160a01b031681565b6040516001600160a01b039091168152602001610141565b3480156101eb57600080fd5b506100ed610908565b34801561020057600080fd5b5060cb5461019590600160a81b900460ff1681565b34801561022157600080fd5b5060c9546101c7906001600160a01b031681565b34801561024157600080fd5b506097546001600160a01b03166101c7565b34801561025f57600080fd5b5060cc546101c7906001600160a01b031681565b34801561027f57600080fd5b5060cb5461029490600160a01b900460ff1681565b6040519015158152602001610141565b3480156102b057600080fd5b5060ca546101c7906001600160a01b031681565b3480156102d057600080fd5b506100ed6102df366004610f8d565b61093e565b60006102f060016109d6565b90508015610308576000805461ff0019166101001790555b610310610a5e565b60cb80546001600160a01b038089166001600160a01b0319928316811790935560c9805487831690841617905560ca8054918616919092161790556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190611084565b60cb60156101000a81548160ff021916908360ff160217905550816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104269190611084565b60cb805460cc80546001600160a01b0319166001600160a01b038a1617905562ff00ff60a01b1916600160b01b60ff939093169290920260ff60a01b191691909117600160a01b8615150217905580156104ba576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105145760405162461bcd60e51b815260040161050b906110a7565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610546610a8d565b6001600160a01b03161461056c5760405162461bcd60e51b815260040161050b906110f3565b61057581610aa9565b6040805160008082526020820190925261059191839190610ad3565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105dd5760405162461bcd60e51b815260040161050b906110a7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661060f610a8d565b6001600160a01b0316146106355760405162461bcd60e51b815260040161050b906110f3565b61063e82610aa9565b61064a82826001610ad3565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106e95760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b606482015260840161050b565b5060008051602061140f83398151915290565b60cb546000908190819061071b90600160a81b900460ff16600a611239565b60cb5490915060009061073990600160b01b900460ff16600a611239565b60cb54909150600090600160a01b900460ff161561085a5760cc5460cb5460c954604051632321bc7960e21b81526000936001600160a01b0390811693638c86f1e49361079193918316928a92911690600401611248565b602060405180830381865afa1580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d2919061126b565b60cc5460c95460ca54604051632321bc7960e21b81529394506001600160a01b0392831693638c86f1e493610811938116928792911690600401611248565b602060405180830381865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610852919061126b565b9150506108dc565b60cc5460cb5460ca54604051632321bc7960e21b81526001600160a01b0393841693638c86f1e4936108989390821692899290911690600401611248565b602060405180830381865afa1580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d9919061126b565b90505b6000826108f183670de0b6b3a7640000611284565b6108fb91906112a3565b9660019650945050505050565b6097546001600160a01b031633146109325760405162461bcd60e51b815260040161050b906112c5565b61093c6000610c43565b565b6097546001600160a01b031633146109685760405162461bcd60e51b815260040161050b906112c5565b6001600160a01b0381166109cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050b565b61059181610c43565b60008054610100900460ff1615610a1d578160ff1660011480156109f95750303b155b610a155760405162461bcd60e51b815260040161050b906112fa565b506000919050565b60005460ff808416911610610a445760405162461bcd60e51b815260040161050b906112fa565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610a855760405162461bcd60e51b815260040161050b90611348565b61093c610c95565b60008051602061140f833981519152546001600160a01b031690565b6097546001600160a01b031633146105915760405162461bcd60e51b815260040161050b906112c5565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b0b57610b0683610cc5565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b65575060408051601f3d908101601f19168201909252610b629181019061126b565b60015b610bc85760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161050b565b60008051602061140f8339815191528114610c375760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161050b565b50610b06838383610d61565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610cbc5760405162461bcd60e51b815260040161050b90611348565b61093c33610c43565b6001600160a01b0381163b610d325760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161050b565b60008051602061140f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610d6a83610d8c565b600082511180610d775750805b15610b0657610d868383610dcc565b50505050565b610d9581610cc5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610e345760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161050b565b600080846001600160a01b031684604051610e4f91906113bf565b600060405180830381855af49150503d8060008114610e8a576040519150601f19603f3d011682016040523d82523d6000602084013e610e8f565b606091505b5091509150610eb7828260405180606001604052806027815260200161142f60279139610ec2565b925050505b92915050565b60608315610ed1575081610efb565b825115610ee15782518084602001fd5b8160405162461bcd60e51b815260040161050b91906113db565b9392505050565b6001600160a01b038116811461059157600080fd5b600080600080600060a08688031215610f2f57600080fd5b8535610f3a81610f02565b94506020860135610f4a81610f02565b935060408601358015158114610f5f57600080fd5b92506060860135610f6f81610f02565b91506080860135610f7f81610f02565b809150509295509295909350565b600060208284031215610f9f57600080fd5b8135610efb81610f02565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610fd357600080fd5b8235610fde81610f02565b9150602083013567ffffffffffffffff80821115610ffb57600080fd5b818501915085601f83011261100f57600080fd5b81358181111561102157611021610faa565b604051601f8201601f19908116603f0116810190838211818310171561104957611049610faa565b8160405282815288602084870101111561106257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561109657600080fd5b815160ff81168114610efb57600080fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156111905781600019048211156111765761117661113f565b8085161561118357918102915b93841c939080029061115a565b509250929050565b6000826111a757506001610ebc565b816111b457506000610ebc565b81600181146111ca57600281146111d4576111f0565b6001915050610ebc565b60ff8411156111e5576111e561113f565b50506001821b610ebc565b5060208310610133831016604e8410600b8410161715611213575081810a610ebc565b61121d8383611155565b80600019048211156112315761123161113f565b029392505050565b6000610efb60ff841683611198565b6001600160a01b0393841681526020810192909252909116604082015260600190565b60006020828403121561127d57600080fd5b5051919050565b600081600019048311821515161561129e5761129e61113f565b500290565b6000826112c057634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b838110156113ae578181015183820152602001611396565b83811115610d865750506000910152565b600082516113d1818460208701611393565b9190910192915050565b60208152600082518060208401526113fa816040850160208701611393565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208b0650d049e1a60838ca752f8c29468d49c26ca6e7fe26f47d00ebc12be4bb4664736f6c634300080a0033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PriceOracle__factory {
    return super.connect(runner) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new Interface(_abi) as PriceOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PriceOracle {
    return new Contract(address, _abi, runner) as unknown as PriceOracle;
  }
}
