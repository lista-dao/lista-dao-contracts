/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockStkBnbStrategy,
  MockStkBnbStrategyInterface,
} from "../../../../contracts/strategy/mocks/MockStkBnbStrategy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addressStore",
        type: "address",
      },
    ],
    name: "AddressStoreChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DepositPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DepositUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "TokenReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewards",
        type: "address",
      },
    ],
    name: "UpdatedRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "UpdatedStrategist",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "assessDepositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateYield",
    outputs: [
      {
        internalType: "uint256",
        name: "yieldStkBNB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressStore",
        type: "address",
      },
    ],
    name: "changeAddressStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAndDistribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destination",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "distributeManual",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "estimateInToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewards",
        type: "address",
      },
      {
        internalType: "address",
        name: "masterVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "addressStore",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "manualWithdrawAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setInterfaceImplementer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRewardsAddr",
        type: "address",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StkBnbStrategy.WithdrawRequest[]",
        name: "_withdrawReqs",
        type: "tuple[]",
      },
    ],
    name: "setupDistribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setupDistributeManual",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "startIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IMasterVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawInToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawReqs",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613190806100206000396000f3fe6080604052600436106102485760003560e01c80638456cb5911610139578063d0e30db0116100b6578063dfb8de451161007a578063dfb8de4514610731578063ec38a8621461075f578063f2fde38b1461077f578063f3fef3a31461079f578063f8c8765e146107bf578063fbfa77cf146107df57600080fd5b8063d0e30db0146106ca578063d1058e59146106d2578063dde37b32146106e7578063de5f626814610707578063dfb89c371461071c57600080fd5b8063b269681d116100fd578063b269681d14610637578063be19b9c514610657578063bf3ac82214610677578063c1a3d44c14610697578063c7b9d530146106aa57600080fd5b80638456cb59146105a05780638da5cb5b146105b55780638e2e2a1a146105ca57806391c05b0b146105f75780639ec5a8941461061757600080fd5b80633f4ba83a116101c75780635ac293c91161018b5780635ac293c91461052c5780636b0f1c8114610541578063715018a614610556578063722713f71461056b5780637bb7c1561461058057600080fd5b80633f4ba83a146104c557806342bf1901146104da5780634357cdc6146104ef5780634641257d146105025780634700d3051461051757600080fd5b80631fe4a6861161020e5780631fe4a6861461042e5780632ebbde361461045b578063379607f51461047057806339443b8e146104905780633e0e828b146104b057600080fd5b806223de29146103365780624bad431461035657806302befd24146103895780630ba8fbd8146103ba578063115880861461041957600080fd5b3661033157609b60009054906101000a90046001600160a01b03166001600160a01b0316637d5e7c326040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c49190612a1c565b6001600160a01b0316336001600160a01b031614806102ed57506097546001600160a01b031633145b61032f5760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b2b73232b960911b60448201526064015b60405180910390fd5b005b600080fd5b34801561034257600080fd5b5061032f610351366004612a82565b6107ff565b34801561036257600080fd5b50610376610371366004612b33565b610866565b6040519081526020015b60405180910390f35b34801561039557600080fd5b506099546103aa90600160a01b900460ff1681565b6040519015158152602001610380565b3480156103c657600080fd5b506103fa6103d5366004612b33565b609e60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610380565b34801561042557600080fd5b50609c54610376565b34801561043a57600080fd5b5060975461044e906001600160a01b031681565b6040516103809190612b4c565b34801561046757600080fd5b5061032f610959565b34801561047c57600080fd5b5061032f61048b366004612b33565b610a17565b34801561049c57600080fd5b506103aa6104ab366004612b33565b610b36565b3480156104bc57600080fd5b50609f54610376565b3480156104d157600080fd5b5061032f610c21565b3480156104e657600080fd5b50610376610c70565b61032f6104fd366004612b60565b610e5f565b34801561050e57600080fd5b5061032f610ed5565b34801561052357600080fd5b5061037661104b565b34801561053857600080fd5b5060a054610376565b34801561054d57600080fd5b506103766110f9565b34801561056257600080fd5b5061032f6111e3565b34801561057757600080fd5b5061037661121e565b34801561058c57600080fd5b5061037661059b366004612b33565b611238565b3480156105ac57600080fd5b5061032f611345565b3480156105c157600080fd5b5061044e61139a565b3480156105d657600080fd5b506103766105e5366004612bd5565b60a16020526000908152604090205481565b34801561060357600080fd5b5061032f610612366004612b33565b6113a9565b34801561062357600080fd5b5060995461044e906001600160a01b031681565b34801561064357600080fd5b5060985461044e906001600160a01b031681565b34801561066357600080fd5b50610376610672366004612bf2565b6115e6565b34801561068357600080fd5b5061032f610692366004612bd5565b6118ed565b3480156106a357600080fd5b5047610376565b3480156106b657600080fd5b5061032f6106c5366004612bd5565b611985565b610376611a12565b3480156106de57600080fd5b5061032f611a48565b3480156106f357600080fd5b5061032f610702366004612bd5565b611b59565b34801561071357600080fd5b5061032f611c7c565b34801561072857600080fd5b5061032f611cac565b61032f61073f366004612bf2565b34609d556001600160a01b03909116600090815260a16020526040902055565b34801561076b57600080fd5b5061032f61077a366004612bd5565b611cbf565b34801561078b57600080fd5b5061032f61079a366004612bd5565b611d4c565b3480156107ab57600080fd5b506103766107ba366004612bf2565b611de9565b3480156107cb57600080fd5b5061032f6107da366004612c1e565b611e54565b3480156107eb57600080fd5b50609a5461044e906001600160a01b031681565b856001600160a01b0316876001600160a01b0316896001600160a01b03167ff7ad0180d908ac00a58ca7a7c020ac7340ed61a167cfbe1f57716544db0e4ace8888888888604051610854959493929190612ca3565b60405180910390a45050505050505050565b600080609b60009054906101000a90046001600160a01b03166001600160a01b0316637d5e7c326040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190612a1c565b90506000816001600160a01b0316633ba0b9a96040518163ffffffff1660e01b81526004016040805180830381865afa158015610921573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109459190612d44565b90506109518185611f78565b949350505050565b3361096261139a565b6001600160a01b0316146109885760405162461bcd60e51b815260040161032690612da1565b6040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d906109e39030907fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b908290600401612dd6565b600060405180830381600087803b1580156109fd57600080fd5b505af1158015610a11573d6000803e3d6000fd5b50505050565b60026065541415610a3a5760405162461bcd60e51b815260040161032690612df9565b6002606555609b5460408051633eaf3e1960e11b8152905147926001600160a01b031691637d5e7c329160048083019260209291908290030181865afa158015610a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aac9190612a1c565b6001600160a01b031663379607f5836040518263ffffffff1660e01b8152600401610ad991815260200190565b600060405180830381600087803b158015610af357600080fd5b505af1158015610b07573d6000803e3d6000fd5b505050508047610b179190612e46565b609d6000828254610b289190612e5d565b909155505060016065555050565b609b5460408051633eaf3e1960e11b815290516000926001600160a01b031691637d5e7c329160048083019260209291908290030181865afa158015610b80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba49190612a1c565b6001600160a01b03166379502c556040518163ffffffff1660e01b815260040161012060405180830381865afa158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190612e75565b60600151821015610c1957506000919050565b506001919050565b6097546001600160a01b03163314610c3857600080fd5b6099805460ff60a01b191690556040517f8c357fe0f696f2972294914e16a16c64a121f9a529a92b9d87fc7a79ec170f2c90600090a1565b600080609b60009054906101000a90046001600160a01b03166001600160a01b031663e016dedc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cea9190612a1c565b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610d1a9190612b4c565b602060405180830381865afa158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b9190612f19565b90506000609b60009054906101000a90046001600160a01b03166001600160a01b0316637d5e7c326040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd69190612a1c565b6001600160a01b0316633ba0b9a96040518163ffffffff1660e01b81526004016040805180830381865afa158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e369190612d44565b9050610e4d609c5482611f7890919063ffffffff16565b610e579083612e46565b935050505090565b34609d5560005b81811015610ed057828282818110610e8057610e80612f32565b905060400201609e600060a06000815480929190610e9d90612f48565b9190505581526020019081526020016000208181610ebb9190612f63565b50819050610ec881612f48565b915050610e66565b505050565b60026065541415610ef85760405162461bcd60e51b815260040161032690612df9565b60026065556097546001600160a01b03163314610f1457600080fd5b6000610f1e610c70565b9050609b60009054906101000a90046001600160a01b03166001600160a01b031663e016dedc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f979190612a1c565b609954604051634decdde360e11b81526001600160a01b0392831692639bd9bbc692610fca929116908590600401612f99565b600060405180830381600087803b158015610fe457600080fd5b505af1158015610ff8573d6000803e3d6000fd5b5050609954604080516001600160a01b039092168252602082018590527f121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf935001905060405180910390a1506001606555565b6097546000906001600160a01b0316331461106557600080fd5b609a5460405163c4c2d9b960e01b81526000916001600160a01b03169063c4c2d9b990611096903090600401612b4c565b606060405180830381865afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d79190612fc1565b609a549093506110f392506001600160a01b0316905082611fb9565b91505090565b600080609b60009054906101000a90046001600160a01b03166001600160a01b031663e016dedc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561114f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111739190612a1c565b6040516370a0823160e01b81529091506001600160a01b038216906370a08231906111a2903090600401612b4c565b602060405180830381865afa1580156111bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f39190612f19565b336111ec61139a565b6001600160a01b0316146112125760405162461bcd60e51b815260040161032690612da1565b61121c600061255c565b565b6000611229609c5490565b6112339047612e5d565b905090565b600064174876e800609b60009054906101000a90046001600160a01b03166001600160a01b0316637d5e7c326040518163ffffffff1660e01b8152600401602060405180830381865afa158015611293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b79190612a1c565b6001600160a01b03166379502c556040518163ffffffff1660e01b815260040161012060405180830381865afa1580156112f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113199190612e75565b60c001516020015161132b9084612ffd565b6113359190613032565b61133f9083612e46565b92915050565b6097546001600160a01b0316331461135c57600080fd5b6099805460ff60a01b1916600160a01b1790556040517f35edea304410d4256c657d14535db2c0a3e9c75dcc42c5c9781c4e8171dad7e090600090a1565b6033546001600160a01b031690565b600260655414156113cc5760405162461bcd60e51b815260040161032690612df9565b600260655560a0548111156114195760405162461bcd60e51b8152602060048201526013602482015272195b9912591e081bdd5d081bd988189bdd5b99606a1b6044820152606401610326565b6000609d5411801561142c575080609f54105b156115de57609f546000908152609e602052604081208054600190910154609d546001600160a01b0390921692909182111561146a575050609d5460015b6000836001600160a01b03168360405160006040518083038185875af1925050503d80600081146114b7576040519150601f19603f3d011682016040523d82523d6000602084013e6114bc565b606091505b5050905080156115565781156114fb57609f546000908152609e6020526040812060010180548592906114f0908490612e46565b909155506115399050565b609f8054609e91600091908261151083612f48565b9091555081526020810191909152604001600090812080546001600160a01b0319168155600101555b82609d600082825461154b9190612e46565b909155506115d59050565b609f546000908152609e60209081526040808320600101546001600160a01b038816845260a19092528220805491929091611592908490612e5d565b9091555050609f8054609e9160009190826115ac83612f48565b9091555081526020810191909152604001600090812080546001600160a01b0319168155600101555b50505050611419565b506001606555565b60006002606554141561160b5760405162461bcd60e51b815260040161032690612df9565b6002606555609a546001600160a01b0316331461163a5760405162461bcd60e51b815260040161032690613046565b609b5460408051633eaf3e1960e11b815290516000926001600160a01b031691637d5e7c329160048083019260209291908290030181865afa158015611684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a89190612a1c565b90506000609b60009054906101000a90046001600160a01b03166001600160a01b031663e016dedc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117239190612a1c565b90506000826001600160a01b0316633ba0b9a96040518163ffffffff1660e01b81526004016040805180830381865afa158015611764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117889190612d44565b905060006117968287611f78565b9050600081116117b85760405162461bcd60e51b815260040161032690613066565b6040516370a0823160e01b815281906001600160a01b038516906370a08231906117e6903090600401612b4c565b602060405180830381865afa158015611803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118279190612f19565b10156118675760405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081cdd58da08185b5bdd5b9d608a1b6044820152606401610326565b604051634decdde360e11b81526001600160a01b03841690639bd9bbc690611895908a908590600401612f99565b600060405180830381600087803b1580156118af57600080fd5b505af11580156118c3573d6000803e3d6000fd5b5050505085609c60008282546118d99190612e46565b909155505060016065559695505050505050565b336118f661139a565b6001600160a01b03161461191c5760405162461bcd60e51b815260040161032690612da1565b6001600160a01b03811661192f57600080fd5b609b80546001600160a01b0319166001600160a01b0383161790556040517f3aac9d5a1610a94daafd0530ff9ee18cfd7ba2404547263e631bf7c47aeb34f39061197a908390612b4c565b60405180910390a150565b3361198e61139a565b6001600160a01b0316146119b45760405162461bcd60e51b815260040161032690612da1565b6001600160a01b0381166119c757600080fd5b609780546001600160a01b0319166001600160a01b0383161790556040517f352ececae6d7d1e6d26bcf2c549dfd55be1637e9b22dc0cf3b71ddb36097a6b49061197a908390612b4c565b609a546000906001600160a01b03163314611a3f5760405162461bcd60e51b815260040161032690613046565b611233346125ae565b60026065541415611a6b5760405162461bcd60e51b815260040161032690612df9565b6002606555609b5460408051633eaf3e1960e11b8152905147926001600160a01b031691637d5e7c329160048083019260209291908290030181865afa158015611ab9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611add9190612a1c565b6001600160a01b031663d1058e596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611b1757600080fd5b505af1158015611b2b573d6000803e3d6000fd5b505050508047611b3b9190612e46565b609d6000828254611b4c9190612e5d565b9091555050600160655550565b60026065541415611b7c5760405162461bcd60e51b815260040161032690612df9565b60026065556001600160a01b038116600090815260a1602052604090205480611bdb5760405162461bcd60e51b815260206004820152601160248201527008591a5cdd1c9a589d5d1953585b9d585b607a1b6044820152606401610326565b80609d6000828254611bed9190612e46565b90915550506001600160a01b038216600081815260a160205260408082208290555190919083908381818185875af1925050503d8060008114611c4c576040519150601f19603f3d011682016040523d82523d6000602084013e611c51565b606091505b5050905080611c725760405162461bcd60e51b81526004016103269061308e565b5050600160655550565b6097546001600160a01b03163314611c9357600080fd5b611ca9609d5447611ca49190612e46565b6125ae565b50565b611cb4611a48565b61121c60a0546113a9565b33611cc861139a565b6001600160a01b031614611cee5760405162461bcd60e51b815260040161032690612da1565b6001600160a01b038116611d0157600080fd5b609980546001600160a01b0319166001600160a01b0383161790556040517fafbb66abf8f3b719799940473a4052a3717cdd8e40fb6c8a3faadab316b1a0699061197a908390612b4c565b33611d5561139a565b6001600160a01b031614611d7b5760405162461bcd60e51b815260040161032690612da1565b6001600160a01b038116611de05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610326565b611ca98161255c565b609a546000906001600160a01b03163314611e165760405162461bcd60e51b815260040161032690613046565b60026065541415611e395760405162461bcd60e51b815260040161032690612df9565b6002606555611e488383611fb9565b60016065559392505050565b6000611e6060016127fa565b90508015611e78576000805461ff0019166101001790555b611e83858585612882565b609b80546001600160a01b0319166001600160a01b0384161790556040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90611ef99030907fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b908290600401612dd6565b600060405180830381600087803b158015611f1357600080fd5b505af1158015611f27573d6000803e3d6000fd5b505050508015611f71576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b81516000901580611f8b57506020830151155b15611f9757508061133f565b82516020840151611fa89084612ffd565b611fb29190613032565b9392505050565b6000808211611fda5760405162461bcd60e51b815260040161032690613066565b6000609d5447611fea9190612e46565b9050808311612070576000846001600160a01b03168460405160006040518083038185875af1925050503d8060008114612040576040519150601f19603f3d011682016040523d82523d6000602084013e612045565b606091505b50509050806120665760405162461bcd60e51b81526004016103269061308e565b839250505061133f565b6000846001600160a01b03168260405160006040518083038185875af1925050503d80600081146120bd576040519150601f19603f3d011682016040523d82523d6000602084013e6120c2565b606091505b50509050806120e35760405162461bcd60e51b81526004016103269061308e565b6120ed8285612e46565b93506000609b60009054906101000a90046001600160a01b03166001600160a01b0316637d5e7c326040518163ffffffff1660e01b8152600401602060405180830381865afa158015612144573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121689190612a1c565b90506000609b60009054906101000a90046001600160a01b03166001600160a01b031663e016dedc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e39190612a1c565b90506000826001600160a01b0316633ba0b9a96040518163ffffffff1660e01b81526004016040805180830381865afa158015612224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122489190612d44565b905060006122568289611f78565b90506000846001600160a01b03166379502c556040518163ffffffff1660e01b815260040161012060405180830381865afa158015612299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122bd9190612e75565b60c00151604001516122d49064174876e800612e46565b6122e38364174876e800612ffd565b6122ed9190613032565b9050846001600160a01b03166379502c556040518163ffffffff1660e01b815260040161012060405180830381865afa15801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123529190612e75565b6080015161236090826130ad565b61236a9082612e46565b9050600064174876e800866001600160a01b03166379502c556040518163ffffffff1660e01b815260040161012060405180830381865afa1580156123b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d79190612e75565b60c00151604001516123e99084612ffd565b6123f39190613032565b9050600061240b6124048385612e46565b8690612903565b90508a8111156124525760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a59081bdd5d08185b5bdd5b9d60721b6044820152606401610326565b604051634decdde360e11b81526001600160a01b03871690639bd9bbc690612480908a908790600401612f99565b600060405180830381600087803b15801561249a57600080fd5b505af11580156124ae573d6000803e3d6000fd5b5050505060405180604001604052808d6001600160a01b0316815260200182815250609e600060a060008154809291906124e790612f48565b909155508152602080820192909252604001600020825181546001600160a01b0319166001600160a01b0390911617815591015160019091015561252b8584612903565b609c600082825461253c9190612e46565b9091555061254c90508982612e5d565b9c9b505050505050505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b609954600090600160a01b900460ff16156126015760405162461bcd60e51b815260206004820152601360248201527219195c1bdcda5d1cc8185c99481c185d5cd959606a1b6044820152606401610326565b609b5460408051633eaf3e1960e11b815290516000926001600160a01b031691637d5e7c329160048083019260209291908290030181865afa15801561264b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266f9190612a1c565b90506000816001600160a01b03166379502c556040518163ffffffff1660e01b815260040161012060405180830381865afa1580156126b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d69190612e75565b606001516126e490856130ad565b905060006126f28286612e46565b90506126fd81610b36565b156127ee57826001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561273d57600080fd5b505af1158015612751573d6000803e3d6000fd5b5050505050600061276182611238565b905080609c60008282546127759190612e5d565b9091555050604051600090339085908381818185875af1925050503d80600081146127bc576040519150601f19603f3d011682016040523d82523d6000602084013e6127c1565b606091505b50509050806127e25760405162461bcd60e51b81526004016103269061308e565b5093506127f592505050565b8493505050505b919050565b60008054610100900460ff1615612841578160ff16600114801561281d5750303b155b6128395760405162461bcd60e51b8152600401610326906130c1565b506000919050565b60005460ff8084169116106128685760405162461bcd60e51b8152600401610326906130c1565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166128a95760405162461bcd60e51b81526004016103269061310f565b6128b161294b565b6128b961297a565b609780546001600160a01b03199081163317909155609880546001600160a01b039586169083161790556099805493851693821693909317909255609a8054919093169116179055565b815160009081906129149084612ffd565b602085015190915080821080612928575080155b156129385760009250505061133f565b6129428183613032565b95945050505050565b600054610100900460ff166129725760405162461bcd60e51b81526004016103269061310f565b61121c6129a9565b600054610100900460ff166129a15760405162461bcd60e51b81526004016103269061310f565b61121c6129d9565b600054610100900460ff166129d05760405162461bcd60e51b81526004016103269061310f565b61121c3361255c565b600054610100900460ff16612a005760405162461bcd60e51b81526004016103269061310f565b6001606555565b6001600160a01b0381168114611ca957600080fd5b600060208284031215612a2e57600080fd5b8151611fb281612a07565b60008083601f840112612a4b57600080fd5b50813567ffffffffffffffff811115612a6357600080fd5b602083019150836020828501011115612a7b57600080fd5b9250929050565b60008060008060008060008060c0898b031215612a9e57600080fd5b8835612aa981612a07565b97506020890135612ab981612a07565b96506040890135612ac981612a07565b955060608901359450608089013567ffffffffffffffff80821115612aed57600080fd5b612af98c838d01612a39565b909650945060a08b0135915080821115612b1257600080fd5b50612b1f8b828c01612a39565b999c989b5096995094979396929594505050565b600060208284031215612b4557600080fd5b5035919050565b6001600160a01b0391909116815260200190565b60008060208385031215612b7357600080fd5b823567ffffffffffffffff80821115612b8b57600080fd5b818501915085601f830112612b9f57600080fd5b813581811115612bae57600080fd5b8660208260061b8501011115612bc357600080fd5b60209290920196919550909350505050565b600060208284031215612be757600080fd5b8135611fb281612a07565b60008060408385031215612c0557600080fd5b8235612c1081612a07565b946020939093013593505050565b60008060008060808587031215612c3457600080fd5b8435612c3f81612a07565b93506020850135612c4f81612a07565b92506040850135612c5f81612a07565b91506060850135612c6f81612a07565b939692955090935050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000612cbd606083018688612c7a565b8281036040840152612cd0818587612c7a565b98975050505050505050565b60405160e0810167ffffffffffffffff81118282101715612d0d57634e487b7160e01b600052604160045260246000fd5b60405290565b6040516060810167ffffffffffffffff81118282101715612d0d57634e487b7160e01b600052604160045260246000fd5b600060408284031215612d5657600080fd5b6040516040810181811067ffffffffffffffff82111715612d8757634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015612e5857612e58612e30565b500390565b60008219821115612e7057612e70612e30565b500190565b6000818303610120811215612e8957600080fd5b612e91612cdc565b8351612e9c81612a07565b808252506020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a0820152606060bf1983011215612ee457600080fd5b612eec612d13565b60c085810151825260e0860151602083015261010090950151604082015293810193909352509092915050565b600060208284031215612f2b57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612f5c57612f5c612e30565b5060010190565b8135612f6e81612a07565b81546001600160a01b0319166001600160a01b03919091161781556020919091013560019190910155565b6001600160a01b03929092168252602082015260606040820181905260009082015260800190565b600080600060608486031215612fd657600080fd5b83518015158114612fe657600080fd5b602085015160409095015190969495509392505050565b600081600019048311821515161561301757613017612e30565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826130415761304161301c565b500490565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b6020808252600e908201526d1a5b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b602080825260059082015264085cd95b9d60da1b604082015260600190565b6000826130bc576130bc61301c565b500690565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122040277131b027733ad0046500093c7fda8be2c87fc34c6038f32abaa95c084c1564736f6c634300080a0033";

type MockStkBnbStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStkBnbStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStkBnbStrategy__factory extends ContractFactory {
  constructor(...args: MockStkBnbStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockStkBnbStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockStkBnbStrategy__factory {
    return super.connect(runner) as MockStkBnbStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStkBnbStrategyInterface {
    return new Interface(_abi) as MockStkBnbStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockStkBnbStrategy {
    return new Contract(address, _abi, runner) as unknown as MockStkBnbStrategy;
  }
}
