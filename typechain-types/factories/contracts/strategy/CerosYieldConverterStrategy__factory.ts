/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CerosYieldConverterStrategy,
  CerosYieldConverterStrategyInterface,
} from "../../../contracts/strategy/CerosYieldConverterStrategy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "binancePool",
        type: "address",
      },
    ],
    name: "BinancePoolChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ceRouter",
        type: "address",
      },
    ],
    name: "CeRouterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DepositPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DepositUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rewards",
        type: "address",
      },
    ],
    name: "UpdatedRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "UpdatedStrategist",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "assessDepositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "binancePool",
        type: "address",
      },
    ],
    name: "changeBinancePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ceRouter",
        type: "address",
      },
    ],
    name: "changeCeRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destination",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "estimateInToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewards",
        type: "address",
      },
      {
        internalType: "address",
        name: "certToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "masterVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "binancePool",
        type: "address",
      },
      {
        internalType: "address",
        name: "ceVault",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRewardsAddr",
        type: "address",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IMasterVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawInToken",
    outputs: [
      {
        internalType: "uint256",
        name: "realAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506119e5806100206000396000f3fe60806040526004361061017a5760003560e01c80638da5cb5b116100cc578063cc2a9a5b1161007a578063cc2a9a5b14610456578063d0e30db014610476578063de5f62681461047e578063ec38a86214610493578063f2fde38b146104b3578063f3fef3a3146104d3578063fbfa77cf146104f357600080fd5b80638da5cb5b1461038e5780638e24d82e146103a35780639ec5a894146103c3578063b269681d146103e3578063be19b9c514610403578063c1a3d44c14610423578063c7b9d5301461043657600080fd5b80634700d305116101295780634700d305146102e55780636b0f1c81146102fa578063715018a61461030f578063722713f7146103245780637bb7c1561461033957806383a8687b146103595780638456cb591461037957600080fd5b80624bad43146101eb57806302befd241461021e578063115880861461024f5780631fe4a6861461026e57806339443b8e1461029b5780633f4ba83a146102bb5780634641257d146102d057600080fd5b366101e6576098546001600160a01b03163314806101a257506097546001600160a01b031633145b6101e45760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b2b73232b960911b60448201526064015b60405180910390fd5b005b600080fd5b3480156101f757600080fd5b5061020b610206366004611671565b610513565b6040519081526020015b60405180910390f35b34801561022a57600080fd5b5060995461023f90600160a01b900460ff1681565b6040519015158152602001610215565b34801561025b57600080fd5b506098546001600160a01b03163161020b565b34801561027a57600080fd5b5060975461028e906001600160a01b031681565b604051610215919061168a565b3480156102a757600080fd5b5061023f6102b6366004611671565b6105b3565b3480156102c757600080fd5b506101e46106bf565b3480156102dc57600080fd5b506101e461070e565b3480156102f157600080fd5b5061020b61073d565b34801561030657600080fd5b5061020b610817565b34801561031b57600080fd5b506101e4610983565b34801561033057600080fd5b5061020b6109be565b34801561034557600080fd5b5061020b610354366004611671565b6109dd565b34801561036557600080fd5b506101e46103743660046116b5565b610a5b565b34801561038557600080fd5b506101e4610af3565b34801561039a57600080fd5b5061028e610b48565b3480156103af57600080fd5b506101e46103be3660046116b5565b610b57565b3480156103cf57600080fd5b5060995461028e906001600160a01b031681565b3480156103ef57600080fd5b5060985461028e906001600160a01b031681565b34801561040f57600080fd5b5061020b61041e3660046116d0565b610bf4565b34801561042f57600080fd5b504761020b565b34801561044257600080fd5b506101e46104513660046116b5565b610cc9565b34801561046257600080fd5b506101e46104713660046116fa565b610d56565b61020b610e1e565b34801561048a57600080fd5b506101e4610e54565b34801561049f57600080fd5b506101e46104ae3660046116b5565b610e74565b3480156104bf57600080fd5b506101e46104ce3660046116b5565b610f01565b3480156104df57600080fd5b5061020b6104ee3660046116d0565b610f9e565b3480156104ff57600080fd5b50609a5461028e906001600160a01b031681565b600080609c60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d919061176e565b9050670de0b6b3a76400006105a2828561179d565b6105ac91906117bc565b9392505050565b600080609d60009054906101000a90046001600160a01b03166001600160a01b031663d9bbd2786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d919061176e565b90506000609d60009054906101000a90046001600160a01b03166001600160a01b031663c2117d826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a8919061176e565b90506106b481836117de565b909310159392505050565b6097546001600160a01b031633146106d657600080fd5b6099805460ff60a01b191690556040517f8c357fe0f696f2972294914e16a16c64a121f9a529a92b9d87fc7a79ec170f2c90600090a1565b6097546001600160a01b0316331461072557600080fd5b60995461073a906001600160a01b0316610ffc565b50565b6000600260655414156107625760405162461bcd60e51b81526004016101db906117f6565b60026065556097546001600160a01b0316331461077e57600080fd5b609a5460405163c4c2d9b960e01b81526000916001600160a01b03169063c4c2d9b9906107af90309060040161168a565b606060405180830381865afa1580156107cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f0919061182d565b609a5490935061080c92506001600160a01b0316905082611213565b915050600160655590565b609e5460405163223888c160e01b81526000916001600160a01b03169063223888c19061084890309060040161168a565b602060405180830381865afa158015610865573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610889919061176e565b609e54604051632113313560e11b81526001600160a01b0390911690634226626a906108b990309060040161168a565b602060405180830381865afa1580156108d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fa919061176e565b609e546040516217580b60ea1b81526001600160a01b0390911690635d602c009061092990309060040161168a565b602060405180830381865afa158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a919061176e565b6109749190611869565b61097e9190611869565b905090565b3361098c610b48565b6001600160a01b0316146109b25760405162461bcd60e51b81526004016101db90611880565b6109bc600061135a565b565b60006109d36098546001600160a01b03163190565b61097e90476117de565b609d5460408051636108bec160e11b815290516000926001600160a01b03169163c2117d829160048083019260209291908290030181865afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b919061176e565b610a559083611869565b92915050565b33610a64610b48565b6001600160a01b031614610a8a5760405162461bcd60e51b81526004016101db90611880565b6001600160a01b038116610a9d57600080fd5b609d80546001600160a01b0319166001600160a01b0383161790556040517f7e41e5f9f71975f631dd6e18d69b355c41bf7779f14b8d2c404127306164faa490610ae890839061168a565b60405180910390a150565b6097546001600160a01b03163314610b0a57600080fd5b6099805460ff60a01b1916600160a01b1790556040517f35edea304410d4256c657d14535db2c0a3e9c75dcc42c5c9781c4e8171dad7e090600090a1565b6033546001600160a01b031690565b33610b60610b48565b6001600160a01b031614610b865760405162461bcd60e51b81526004016101db90611880565b6001600160a01b038116610b9957600080fd5b609880546001600160a01b0383166001600160a01b03199182168117909255609b805490911690911790556040517f2ee12b52d6c5300e2ce18ef982edc70927e62efd6f08b73f649da334022bb1ec90610ae890839061168a565b600060026065541415610c195760405162461bcd60e51b81526004016101db906117f6565b6002606555609a546001600160a01b03163314610c485760405162461bcd60e51b81526004016101db906118b5565b609b546040516301aa86ab60e11b81526001600160a01b03909116906303550d5690610c7a90869086906004016118d5565b6020604051808303816000875af1158015610c99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbd919061176e565b60016065559392505050565b33610cd2610b48565b6001600160a01b031614610cf85760405162461bcd60e51b81526004016101db90611880565b6001600160a01b038116610d0b57600080fd5b609780546001600160a01b0319166001600160a01b0383161790556040517f352ececae6d7d1e6d26bcf2c549dfd55be1637e9b22dc0cf3b71ddb36097a6b490610ae890839061168a565b6000610d6260016113ac565b90508015610d7a576000805461ff0019166101001790555b610d85878786611439565b609b80546001600160a01b03808a166001600160a01b031992831617909255609c8054888416908316179055609d8054868416908316179055609e8054928516929091169190911790558015610e15576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b609a546000906001600160a01b03163314610e4b5760405162461bcd60e51b81526004016101db906118b5565b61097e346114ba565b6097546001600160a01b03163314610e6b57600080fd5b61073a476114ba565b33610e7d610b48565b6001600160a01b031614610ea35760405162461bcd60e51b81526004016101db90611880565b6001600160a01b038116610eb657600080fd5b609980546001600160a01b0319166001600160a01b0383161790556040517fafbb66abf8f3b719799940473a4052a3717cdd8e40fb6c8a3faadab316b1a06990610ae890839061168a565b33610f0a610b48565b6001600160a01b031614610f305760405162461bcd60e51b81526004016101db90611880565b6001600160a01b038116610f955760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101db565b61073a8161135a565b600060026065541415610fc35760405162461bcd60e51b81526004016101db906117f6565b6002606555609a546001600160a01b03163314610ff25760405162461bcd60e51b81526004016101db906118b5565b610cbd8383611213565b609b5460405163223888c160e01b81526000916001600160a01b03169063223888c19061102d90309060040161168a565b602060405180830381865afa15801561104a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106e919061176e565b905080156110ec57609b54604051630f41a04d60e11b81526001600160a01b0390911690631e83409a906110a690859060040161168a565b6020604051808303816000875af11580156110c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e9919061176e565b90505b609b54604051632b1e119f60e21b81526000916001600160a01b03169063ac78467c9061111d90309060040161168a565b602060405180830381865afa15801561113a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115e919061176e565b905080156111d45761117081836117de565b609b54604051636055a27b60e11b81529193506001600160a01b03169063c0ab44f6906111a190869060040161168a565b600060405180830381600087803b1580156111bb57600080fd5b505af11580156111cf573d6000803e3d6000fd5b505050505b7f121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf83836040516112059291906118d5565b60405180910390a150919050565b60008082116112345760405162461bcd60e51b81526004016101db906118ee565b47808310156112dc576000846001600160a01b03168460405160006040518083038185875af1925050503d806000811461128a576040519150601f19603f3d011682016040523d82523d6000602084013e61128f565b606091505b50509050806112d25760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016101db565b8392505050610a55565b609b5460405163f3fef3a360e01b81526001600160a01b039091169063f3fef3a39061130e90879087906004016118d5565b6020604051808303816000875af115801561132d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611351919061176e565b50919392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff16156113f3578160ff1660011480156113cf5750303b155b6113eb5760405162461bcd60e51b81526004016101db90611916565b506000919050565b60005460ff80841691161061141a5760405162461bcd60e51b81526004016101db90611916565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166114605760405162461bcd60e51b81526004016101db90611964565b6114686115b5565b6114706115e4565b609780546001600160a01b03199081163317909155609880546001600160a01b039586169083161790556099805493851693821693909317909255609a8054919093169116179055565b609954600090600160a01b900460ff161561150d5760405162461bcd60e51b815260206004820152601360248201527219195c1bdcda5d1cc8185c99481c185d5cd959606a1b60448201526064016101db565b6000821161152d5760405162461bcd60e51b81526004016101db906118ee565b611536826105b3565b1561143457609b60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b815260040160206040518083038185885af1158015611590573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a55919061176e565b600054610100900460ff166115dc5760405162461bcd60e51b81526004016101db90611964565b6109bc611613565b600054610100900460ff1661160b5760405162461bcd60e51b81526004016101db90611964565b6109bc611643565b600054610100900460ff1661163a5760405162461bcd60e51b81526004016101db90611964565b6109bc3361135a565b600054610100900460ff1661166a5760405162461bcd60e51b81526004016101db90611964565b6001606555565b60006020828403121561168357600080fd5b5035919050565b6001600160a01b0391909116815260200190565b80356001600160a01b038116811461143457600080fd5b6000602082840312156116c757600080fd5b6105ac8261169e565b600080604083850312156116e357600080fd5b6116ec8361169e565b946020939093013593505050565b60008060008060008060c0878903121561171357600080fd5b61171c8761169e565b955061172a6020880161169e565b94506117386040880161169e565b93506117466060880161169e565b92506117546080880161169e565b915061176260a0880161169e565b90509295509295509295565b60006020828403121561178057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156117b7576117b7611787565b500290565b6000826117d957634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156117f1576117f1611787565b500190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008060006060848603121561184257600080fd5b8351801515811461185257600080fd5b602085015160409095015190969495509392505050565b60008282101561187b5761187b611787565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b6001600160a01b03929092168252602082015260400190565b6020808252600e908201526d1a5b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212205fe7ed2da618f64d361dd3fa8d6193915745103fe4280103249c900388ae185064736f6c634300080a0033";

type CerosYieldConverterStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CerosYieldConverterStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CerosYieldConverterStrategy__factory extends ContractFactory {
  constructor(...args: CerosYieldConverterStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CerosYieldConverterStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CerosYieldConverterStrategy__factory {
    return super.connect(runner) as CerosYieldConverterStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CerosYieldConverterStrategyInterface {
    return new Interface(_abi) as CerosYieldConverterStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CerosYieldConverterStrategy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CerosYieldConverterStrategy;
  }
}
