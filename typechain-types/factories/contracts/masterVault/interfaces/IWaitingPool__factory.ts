/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IWaitingPool,
  IWaitingPoolInterface,
} from "../../../../contracts/masterVault/interfaces/IWaitingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addToQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_capLimit",
        type: "uint256",
      },
    ],
    name: "setCapLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tryRemove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IWaitingPool__factory {
  static readonly abi = _abi;
  static createInterface(): IWaitingPoolInterface {
    return new Interface(_abi) as IWaitingPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWaitingPool {
    return new Contract(address, _abi, runner) as unknown as IWaitingPool;
  }
}
