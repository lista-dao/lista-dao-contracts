/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  HelioTokenLike,
  HelioTokenLikeInterface,
} from "../../../contracts/lock.sol/HelioTokenLike";

const _abi = [
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class HelioTokenLike__factory {
  static readonly abi = _abi;
  static createInterface(): HelioTokenLikeInterface {
    return new Interface(_abi) as HelioTokenLikeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HelioTokenLike {
    return new Contract(address, _abi, runner) as unknown as HelioTokenLike;
  }
}
