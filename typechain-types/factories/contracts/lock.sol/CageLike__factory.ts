/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  CageLike,
  CageLikeInterface,
} from "../../../contracts/lock.sol/CageLike";

const _abi = [
  {
    inputs: [],
    name: "cage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uncage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class CageLike__factory {
  static readonly abi = _abi;
  static createInterface(): CageLikeInterface {
    return new Interface(_abi) as CageLikeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CageLike {
    return new Contract(address, _abi, runner) as unknown as CageLike;
  }
}
