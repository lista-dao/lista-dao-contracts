/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Hay, HayInterface } from "../../../contracts/hay.sol/Hay";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldCap",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCap",
        type: "uint256",
      },
    ],
    name: "SupplyCapSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "supplyCap_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "pull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "setSupplyCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
    ],
    name: "updateDomainSeparator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506118f2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101845760003560e01c80638f770ad0116100d9578063b4b33e7911610087578063b4b33e7914610383578063b6a3f59a14610396578063b753a98c146103a9578063bb35783b146103bc578063bf353dbb146103cf578063dd62ed3e146103ef578063f2d5d56b1461041a57600080fd5b80638f770ad0146103135780638fcbaf0c1461031c57806395d89b411461032f5780639c52a7f1146103375780639dc29fac1461034a578063a457c2d71461035d578063a9059cbb1461037057600080fd5b80633644e515116101365780633644e51514610271578063395093511461027a57806340c10f191461028d57806354fd4d50146102a057806365fae35e146102c057806370a08231146102d35780637ecebe00146102f357600080fd5b806306fdde0314610189578063095ea7b3146101ce578063146413af146101f157806318160ddd1461020657806323b872dd1461021d57806330adf81f14610230578063313ce56714610257575b600080fd5b6101b86040518060400160405280601081526020016f2430bc902232b9ba30b13632b1b7b4b760811b81525081565b6040516101c59190611435565b60405180910390f35b6101e16101dc3660046114a1565b61042d565b60405190151581526020016101c5565b6102046101ff3660046114e1565b610471565b005b61020f60035481565b6040519081526020016101c5565b6101e161022b3660046115a5565b6105d9565b61020f7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b61025f601281565b60405160ff90911681526020016101c5565b61020f60085481565b6101e16102883660046114a1565b610824565b61020461029b3660046114a1565b61086d565b6101b8604051806040016040528060018152602001603160f81b81525081565b6102046102ce3660046115e1565b6109b9565b61020f6102e13660046115e1565b60046020526000908152604090205481565b61020f6103013660046115e1565b60066020526000908152604090205481565b61020f60075481565b61020461032a3660046115fc565b610a06565b6101b8610ce8565b6102046103453660046115e1565b610d76565b6102046103583660046114a1565b610dc0565b6101e161036b3660046114a1565b610f7f565b6101e161037e3660046114a1565b611019565b610204610391366004611686565b61102d565b6102046103a4366004611686565b61112c565b6102046103b73660046114a1565b6111ee565b6102046103ca3660046115a5565b6111fe565b61020f6103dd3660046115e1565b60016020526000908152604090205481565b61020f6103fd36600461169f565b600560209081526000928352604080842090915290825290205481565b6102046104283660046114a1565b611209565b600061043a338484611214565b6040518281526001600160a01b03841690339060008051602061189d8339815191529060200160405180910390a350600192915050565b600061047d600161130f565b90508015610495576000805461ff0019166101001790555b3360009081526001602081815260409283902082905582518084018452601081526f2430bc902232b9ba30b13632b1b7b4b760811b9082015282518084018452918252603160f81b91810191909152905161055a917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f917f7bcb32e2246eb158e329afde4ad657845fbe6d2e1a115f71d4a13bebf86316e3917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69189913091016116d2565b60408051601f1981840301815291905280516020918201206008558351610587916002919086019061139c565b50600782905580156105d3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006001600160a01b0384166106365760405162461bcd60e51b815260206004820152601e60248201527f4861792f7472616e736665722d66726f6d2d7a65726f2d61646472657373000060448201526064015b60405180910390fd5b6001600160a01b03831661068c5760405162461bcd60e51b815260206004820152601c60248201527f4861792f7472616e736665722d746f2d7a65726f2d6164647265737300000000604482015260640161062d565b6001600160a01b0384166000908152600460205260409020548211156106c45760405162461bcd60e51b815260040161062d906116fe565b6001600160a01b038416331480159061070257506001600160a01b038416600090815260056020908152604080832033845290915290205460001914155b15610783576001600160a01b038416600090815260056020908152604080832033845290915290205482111561074a5760405162461bcd60e51b815260040161062d90611730565b6001600160a01b03841660009081526005602090815260408083203384529091528120805484929061077d90849061177d565b90915550505b6001600160a01b038416600090815260046020526040812080548492906107ab90849061177d565b90915550506001600160a01b038316600090815260046020526040812080548492906107d8908490611794565b92505081905550826001600160a01b0316846001600160a01b031660008051602061187d8339815191528460405161081291815260200190565b60405180910390a35060019392505050565b3360008181526005602090815260408083206001600160a01b0387168452909152812054909190610863908290869061085e908790611794565b611214565b5060019392505050565b336000908152600160208190526040909120541461089d5760405162461bcd60e51b815260040161062d906117ac565b6001600160a01b0382166108ee5760405162461bcd60e51b81526020600482015260186024820152774861792f6d696e742d746f2d7a65726f2d6164647265737360401b604482015260640161062d565b600754816003546108ff9190611794565b111561093f5760405162461bcd60e51b815260206004820152600f60248201526e12185e4bd8d85c0b5c995858da1959608a1b604482015260640161062d565b6001600160a01b03821660009081526004602052604081208054839290610967908490611794565b9250508190555080600360008282546109809190611794565b90915550506040518181526001600160a01b0383169060009060008051602061187d833981519152906020015b60405180910390a35050565b33600090815260016020819052604090912054146109e95760405162461bcd60e51b815260040161062d906117ac565b6001600160a01b0316600090815260016020819052604090912055565b600854604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60208201526001600160a01b03808c169282019290925290891660608201526080810188905260a0810187905285151560c08201526000919060e00160405160208183030381529060405280519060200120604051602001610aa792919061190160f01b81526002810192909252602282015260420190565b60408051601f19818403018152919052805160209091012090506001600160a01b038916610b0f5760405162461bcd60e51b815260206004820152601560248201527404861792f696e76616c69642d616464726573732d3605c1b604482015260640161062d565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610b62573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610bc15760405162461bcd60e51b815260206004820152601260248201527112185e4bda5b9d985b1a590b5c195c9b5a5d60721b604482015260640161062d565b851580610bce5750854211155b610c0f5760405162461bcd60e51b815260206004820152601260248201527112185e4bdc195c9b5a5d0b595e1c1a5c995960721b604482015260640161062d565b6001600160a01b0389166000908152600660205260408120805491610c33836117d8565b919050558714610c795760405162461bcd60e51b81526020600482015260116024820152704861792f696e76616c69642d6e6f6e636560781b604482015260640161062d565b600085610c87576000610c8b565b6000195b6001600160a01b038b81166000818152600560209081526040808320948f168084529482529182902085905590518481529394509192909160008051602061189d833981519152910160405180910390a350505050505050505050565b60028054610cf5906117f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d21906117f3565b8015610d6e5780601f10610d4357610100808354040283529160200191610d6e565b820191906000526020600020905b815481529060010190602001808311610d5157829003601f168201915b505050505081565b3360009081526001602081905260409091205414610da65760405162461bcd60e51b815260040161062d906117ac565b6001600160a01b0316600090815260016020526040812055565b6001600160a01b038216610e165760405162461bcd60e51b815260206004820152601a60248201527f4861792f6275726e2d66726f6d2d7a65726f2d61646472657373000000000000604482015260640161062d565b6001600160a01b038216600090815260046020526040902054811115610e4e5760405162461bcd60e51b815260040161062d906116fe565b6001600160a01b0382163314801590610e8c57506001600160a01b038216600090815260056020908152604080832033845290915290205460001914155b15610f0d576001600160a01b0382166000908152600560209081526040808320338452909152902054811115610ed45760405162461bcd60e51b815260040161062d90611730565b6001600160a01b038216600090815260056020908152604080832033845290915281208054839290610f0790849061177d565b90915550505b6001600160a01b03821660009081526004602052604081208054839290610f3590849061177d565b925050819055508060036000828254610f4e919061177d565b90915550506040518181526000906001600160a01b0384169060008051602061187d833981519152906020016109ad565b3360008181526005602090815260408083206001600160a01b0387168452909152812054909190838110156110015760405162461bcd60e51b815260206004820152602260248201527f4861792f6465637265617365642d616c6c6f77616e63652d62656c6f772d7a65604482015261726f60f01b606482015260840161062d565b61100e8286868403611214565b506001949350505050565b60006110263384846105d9565b9392505050565b336000908152600160208190526040909120541461105d5760405162461bcd60e51b815260040161062d906117ac565b604080518082018252601081526f2430bc902232b9ba30b13632b1b7b4b760811b6020918201528151808301835260018152603160f81b90820152905161110e917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f917f7bcb32e2246eb158e329afde4ad657845fbe6d2e1a115f71d4a13bebf86316e3917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69186913091016116d2565b60408051601f19818403018152919052805160209091012060085550565b336000908152600160208190526040909120541461115c5760405162461bcd60e51b815260040161062d906117ac565b6003548110156111a95760405162461bcd60e51b815260206004820152601860248201527704861792f6d6f72652d737570706c792d7468616e2d6361760441b604482015260640161062d565b600780549082905560408051828152602081018490527f6763409c7e3ad1a90337041a3f8ec72290e406af08a63cf3193b3e2b49c7bea6910160405180910390a15050565b6111f93383836105d9565b505050565b6105d38383836105d9565b6111f98233836105d9565b6001600160a01b03831661126a5760405162461bcd60e51b815260206004820152601d60248201527f4861792f617070726f76652d66726f6d2d7a65726f2d61646472657373000000604482015260640161062d565b6001600160a01b0382166112c05760405162461bcd60e51b815260206004820152601b60248201527f4861792f617070726f76652d746f2d7a65726f2d616464726573730000000000604482015260640161062d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020859055905184815260008051602061189d833981519152910160405180910390a3505050565b60008054610100900460ff1615611356578160ff1660011480156113325750303b155b61134e5760405162461bcd60e51b815260040161062d9061182e565b506000919050565b60005460ff80841691161061137d5760405162461bcd60e51b815260040161062d9061182e565b506000805460ff191660ff92909216919091179055600190565b919050565b8280546113a8906117f3565b90600052602060002090601f0160209004810192826113ca5760008555611410565b82601f106113e357805160ff1916838001178555611410565b82800160010185558215611410579182015b828111156114105782518255916020019190600101906113f5565b5061141c929150611420565b5090565b5b8082111561141c5760008155600101611421565b600060208083528351808285015260005b8181101561146257858101830151858201604001528201611446565b81811115611474576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461139757600080fd5b600080604083850312156114b457600080fd5b6114bd8361148a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156114f657600080fd5b83359250602084013567ffffffffffffffff8082111561151557600080fd5b818601915086601f83011261152957600080fd5b81358181111561153b5761153b6114cb565b604051601f8201601f19908116603f01168101908382118183101715611563576115636114cb565b8160405282815289602084870101111561157c57600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b6000806000606084860312156115ba57600080fd5b6115c38461148a565b92506115d16020850161148a565b9150604084013590509250925092565b6000602082840312156115f357600080fd5b6110268261148a565b600080600080600080600080610100898b03121561161957600080fd5b6116228961148a565b975061163060208a0161148a565b965060408901359550606089013594506080890135801515811461165357600080fd5b935060a089013560ff8116811461166957600080fd5b979a969950949793969295929450505060c08201359160e0013590565b60006020828403121561169857600080fd5b5035919050565b600080604083850312156116b257600080fd5b6116bb8361148a565b91506116c96020840161148a565b90509250929050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6020808252601890820152774861792f696e73756666696369656e742d62616c616e636560401b604082015260600190565b6020808252601a908201527f4861792f696e73756666696369656e742d616c6c6f77616e6365000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561178f5761178f611767565b500390565b600082198211156117a7576117a7611767565b500190565b60208082526012908201527112185e4bdb9bdd0b585d5d1a1bdc9a5e995960721b604082015260600190565b60006000198214156117ec576117ec611767565b5060010190565b600181811c9082168061180757607f821691505b6020821081141561182857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220769f85055c59df37ec9f31e689c647178b1ca53bfcb7c265c6b6561a346d661f64736f6c634300080a0033";

type HayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hay__factory extends ContractFactory {
  constructor(...args: HayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Hay & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Hay__factory {
    return super.connect(runner) as Hay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HayInterface {
    return new Interface(_abi) as HayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Hay {
    return new Contract(address, _abi, runner) as unknown as Hay;
  }
}
