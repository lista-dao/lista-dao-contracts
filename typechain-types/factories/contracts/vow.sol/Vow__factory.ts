/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Vow, VowInterface } from "../../../contracts/vow.sol/Vow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "Ash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Sin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dump",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "feed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "file",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    name: "file",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hay",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hayJoin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rad",
        type: "uint256",
      },
    ],
    name: "heal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hump",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vat_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hayJoin",
        type: "address",
      },
      {
        internalType: "address",
        name: "multisig_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "live",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multisig",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sump",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uncage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vat",
    outputs: [
      {
        internalType: "contract VatLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wait",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114b2806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80639c52a7f1116100c3578063d0adc35f1161007c578063d0adc35f14610289578063d4e8be8314610292578063d63b23b2146102a5578063e4330545146102ad578063f37ac61c146102b6578063f59dfdfb146102c957600080fd5b80639c52a7f114610207578063b02d1e9e1461021a578063bf353dbb1461022d578063c0c53b8b1461024d578063c349d36214610260578063cb5cc1091461026957600080fd5b80634783c35b116101155780634783c35b146101b45780634d608102146101c757806364bd7013146101da57806365fae35e146101e357806369245009146101f6578063957aa58c146101fe57600080fd5b80630e01198b146101525780631b8e8cfa1461015c57806329ae8114146101785780632a1d2b3c1461018b57806336569e7714610194575b600080fd5b61015a6102dc565b005b610165600b5481565b6040519081526020015b60405180910390f35b61015a6101863660046111aa565b610575565b61016560065481565b6002546101a7906001600160a01b031681565b60405161016f91906111cc565b6003546101a7906001600160a01b031681565b600a546101a7906001600160a01b031681565b61016560075481565b61015a6101f13660046111f7565b610602565b61015a610690565b610165600c5481565b61015a6102153660046111f7565b610814565b600d546101a7906001600160a01b031681565b61016561023b3660046111f7565b60016020526000908152604090205481565b61015a61025b366004611212565b61085e565b61016560095481565b610165610277366004611255565b60046020526000908152604090205481565b61016560055481565b61015a6102a036600461126e565b610977565b61015a610af5565b61016560085481565b61015a6102c4366004611255565b610b2c565b61015a6102d7366004611255565b610cd6565b600b5460025460405163782c909560e11b81526001600160a01b039091169063f059212a9061030f9030906004016111cc565b602060405180830381865afa15801561032c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610350919061129a565b61035a91906112c9565b6002546040516385fd5cd760e01b81526001600160a01b03909116906385fd5cd79061038a9030906004016111cc565b602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb919061129a565b10156103f25760405162461bcd60e51b81526004016103e9906112e1565b60405180910390fd5b600b5460025460405163782c909560e11b8152600092916001600160a01b03169063f059212a906104279030906004016111cc565b602060405180830381865afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610468919061129a565b61047291906112c9565b6002546040516385fd5cd760e01b81526001600160a01b03909116906385fd5cd7906104a29030906004016111cc565b602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e3919061129a565b6104ed9190611313565b905060006105076b033b2e3c9fd0803ce80000008361132a565b600a5460035460405163ef693bed60e01b81529293506001600160a01b039182169263ef693bed9261053f921690859060040161134c565b600060405180830381600087803b15801561055957600080fd5b505af115801561056d573d6000803e3d6000fd5b505050505050565b33600090815260016020819052604090912054146105a55760405162461bcd60e51b81526004016103e990611365565b8163068756d760e41b14156105ba57600b5550565b60405162461bcd60e51b815260206004820152601b60248201527f566f772f66696c652d756e7265636f676e697a65642d706172616d000000000060448201526064016103e9565b33600090815260016020819052604090912054146106325760405162461bcd60e51b81526004016103e990611365565b600c546001146106735760405162461bcd60e51b815260206004820152600c60248201526b566f772f6e6f742d6c69766560a01b60448201526064016103e9565b6001600160a01b0316600090815260016020819052604090912055565b33600090815260016020819052604090912054146106c05760405162461bcd60e51b81526004016103e990611365565b6000600c81905560058190556006556002546040516385fd5cd760e01b81526001600160a01b039091169063f37ac61c906107c29083906385fd5cd79061070b9030906004016111cc565b602060405180830381865afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c919061129a565b60025460405163782c909560e11b81526001600160a01b039091169063f059212a9061077c9030906004016111cc565b602060405180830381865afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd919061129a565b610d3d565b6040518263ffffffff1660e01b81526004016107e091815260200190565b600060405180830381600087803b1580156107fa57600080fd5b505af115801561080e573d6000803e3d6000fd5b50505050565b33600090815260016020819052604090912054146108445760405162461bcd60e51b81526004016103e990611365565b6001600160a01b0316600090815260016020526040812055565b600061086a6001610d56565b90508015610882576000805461ff0019166101001790555b3360009081526001602081905260409182902055600280546001600160a01b03199081166001600160a01b03888116918217909355600a80548316888516908117909155600380549093169387169390931790915591516328ec8bf160e21b815263a3b22fc4916108f5916004016111cc565b600060405180830381600087803b15801561090f57600080fd5b505af1158015610923573d6000803e3d6000fd5b50506001600c555050801561080e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b33600090815260016020819052604090912054146109a75760405162461bcd60e51b81526004016103e990611365565b81676d756c746973696760c01b14156109db57600380546001600160a01b0383166001600160a01b03199091161790555050565b81663430bcb537b4b760c91b1415610a9757600254600a54604051636e26907d60e11b81526001600160a01b039283169263dc4d20fa92610a21929116906004016111cc565b600060405180830381600087803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b5050600a80546001600160a01b0319166001600160a01b038581169182179092556002546040516328ec8bf160e21b81529216935063a3b22fc4925061053f916004016111cc565b816268617960e81b1415610ac657600d80546001600160a01b0383166001600160a01b03199091161790555050565b81621d985d60ea1b14156105ba57600280546001600160a01b0383166001600160a01b03199091161790555050565b3360009081526001602081905260409091205414610b255760405162461bcd60e51b81526004016103e990611365565b6001600c55565b6002546040516385fd5cd760e01b81526001600160a01b03909116906385fd5cd790610b5c9030906004016111cc565b602060405180830381865afa158015610b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9d919061129a565b811115610bbc5760405162461bcd60e51b81526004016103e9906112e1565b60025460405163782c909560e11b81526001600160a01b039091169063f059212a90610bec9030906004016111cc565b602060405180830381865afa158015610c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d919061129a565b811115610c745760405162461bcd60e51b8152602060048201526015602482015274159bddcbda5b9cdd59999a58da595b9d0b5919589d605a1b60448201526064016103e9565b600254604051633cdeb18760e21b8152600481018390526001600160a01b039091169063f37ac61c906024015b600060405180830381600087803b158015610cbb57600080fd5b505af1158015610ccf573d6000803e3d6000fd5b5050505050565b600d54610cee906001600160a01b0316333084610de3565b600a54600d54610d0b916001600160a01b03918216911683610e4e565b600a54604051633b4da69f60e01b81526001600160a01b0390911690633b4da69f90610ca1903090859060040161134c565b600081831115610d4d5781610d4f565b825b9392505050565b60008054610100900460ff1615610d9d578160ff166001148015610d795750303b155b610d955760405162461bcd60e51b81526004016103e990611391565b506000919050565b60005460ff808416911610610dc45760405162461bcd60e51b81526004016103e990611391565b506000805460ff191660ff92909216919091179055600190565b919050565b6040516001600160a01b038085166024830152831660448201526064810182905261080e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f57565b801580610ec85750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec6919061129a565b155b610f335760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016103e9565b610f528363095ea7b360e01b8484604051602401610e1792919061134c565b505050565b6000610fac826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110299092919063ffffffff16565b805190915015610f525780806020019051810190610fca91906113df565b610f525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103e9565b60606110388484600085611040565b949350505050565b6060824710156110a15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103e9565b6001600160a01b0385163b6110f85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e9565b600080866001600160a01b03168587604051611114919061142d565b60006040518083038185875af1925050503d8060008114611151576040519150601f19603f3d011682016040523d82523d6000602084013e611156565b606091505b5091509150611166828286611171565b979650505050505050565b60608315611180575081610d4f565b8251156111905782518084602001fd5b8160405162461bcd60e51b81526004016103e99190611449565b600080604083850312156111bd57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b80356001600160a01b0381168114610dde57600080fd5b60006020828403121561120957600080fd5b610d4f826111e0565b60008060006060848603121561122757600080fd5b611230846111e0565b925061123e602085016111e0565b915061124c604085016111e0565b90509250925092565b60006020828403121561126757600080fd5b5035919050565b6000806040838503121561128157600080fd5b82359150611291602084016111e0565b90509250929050565b6000602082840312156112ac57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156112dc576112dc6112b3565b500190565b602080825260189082015277566f772f696e73756666696369656e742d737572706c757360401b604082015260600190565b600082821015611325576113256112b3565b500390565b60008261134757634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03929092168252602082015260400190565b602080825260129082015271159bddcbdb9bdd0b585d5d1a1bdc9a5e995960721b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000602082840312156113f157600080fd5b81518015158114610d4f57600080fd5b60005b8381101561141c578181015183820152602001611404565b8381111561080e5750506000910152565b6000825161143f818460208701611401565b9190910192915050565b6020815260008251806020840152611468816040850160208701611401565b601f01601f1916919091016040019291505056fea26469706673582212207dfebd8ded2de7a95308d0ccf53c269f8c0b93bd1739ef54543f47e4dc22e68b64736f6c634300080a0033";

type VowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vow__factory extends ContractFactory {
  constructor(...args: VowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Vow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vow__factory {
    return super.connect(runner) as Vow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VowInterface {
    return new Interface(_abi) as VowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vow {
    return new Contract(address, _abi, runner) as unknown as Vow;
  }
}
