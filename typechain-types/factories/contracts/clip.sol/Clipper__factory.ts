/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Clipper,
  ClipperInterface,
} from "../../../contracts/clip.sol/Clipper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Deny",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "File",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    name: "File",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "top",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "kpr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coin",
        type: "uint256",
      },
    ],
    name: "Kick",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "top",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "kpr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coin",
        type: "uint256",
      },
    ],
    name: "Redo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Rely",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "owe",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Take",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Yank",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "active",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calc",
    outputs: [
      {
        internalType: "contract AbacusLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chip",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cusp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dog",
    outputs: [
      {
        internalType: "contract DogLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "file",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    name: "file",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        internalType: "bool",
        name: "needsRedo",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ilk",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vat_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spotter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "dog_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ilk_",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "address",
        name: "kpr",
        type: "address",
      },
    ],
    name: "kick",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "kpr",
        type: "address",
      },
    ],
    name: "redo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "sales",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pos",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tab",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lot",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "usr",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "tic",
            type: "uint96",
          },
          {
            internalType: "uint256",
            name: "top",
            type: "uint256",
          },
        ],
        internalType: "struct Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spotter",
    outputs: [
      {
        internalType: "contract SpotterLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stopped",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tail",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "take",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tip",
    outputs: [
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upchost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vat",
    outputs: [
      {
        internalType: "contract VatLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "yank",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612454806100206000396000f3fe608060405234801561001057600080fd5b506004361061019a5760003560e01c806375f12b21116100e4578063b61500e411610092578063b61500e4146103c8578063ba2cdc75146103f3578063bf353dbb146103fc578063c3b3ad7f1461041c578063c5ce281e1461042f578063cfdd330214610438578063d4e8be8314610441578063d843416d1461045457600080fd5b806375f12b21146102f45780638033d581146102fd57806381a794cb14610310578063898eb2671461032357806396f1b6be146103365780639c52a7f114610349578063b5f522f71461035c57600080fd5b806329ae81141161014c57806329ae81141461022c5780632e77468d1461023f57806336569e771461026a57806349ed59311461027d5780635c622a0e14610286578063626cb3c5146102bb57806363acc14d146102ce57806365fae35e146102e157600080fd5b806306661abd1461019f5780630cbb5862146101b65780630f560cd7146101c057806313d8c840146101d557806315232515146101de57806326e027f1146101e75780632755cd2d146101fa575b600080fd5b600e545b6040519081526020015b60405180910390f35b6101be610467565b005b6101c8610561565b6040516101ad9190611eae565b6101a360095481565b6101a360085481565b6101be6101f5366004611ef2565b6105b9565b600b5461021490600160401b90046001600160c01b031681565b6040516001600160c01b0390911681526020016101ad565b6101be61023a366004611f0b565b610788565b600654610252906001600160a01b031681565b6040516001600160a01b0390911681526020016101ad565b600354610252906001600160a01b031681565b6101a3600a5481565b610299610294366004611ef2565b610931565b60408051941515855260208501939093529183015260608201526080016101ad565b600554610252906001600160a01b031681565b6101be6102dc366004611f45565b6109bd565b6101be6102ef366004611f96565b610ac0565b6101a360115481565b6101a361030b366004611ef2565b610b37565b6101be61031e366004611fb3565b610b58565b6101a3610331366004612053565b6110fa565b600754610252906001600160a01b031681565b6101be610357366004611f96565b611485565b61036f61036a366004611ef2565b6114f9565b6040516101ad91908151815260208083015190820152604080830151908201526060808301516001600160a01b0316908201526080808301516001600160601b03169082015260a0918201519181019190915260c00190565b600b546103db906001600160401b031681565b6040516001600160401b0390911681526020016101ad565b6101a3600c5481565b6101a361040a366004611f96565b60016020526000908152604090205481565b600454610252906001600160a01b031681565b6101a360025481565b6101a3600d5481565b6101be61044f36600461209d565b6115b2565b6101be61046236600461209d565b6116fb565b600354600254604051636cb1c69b60e11b815260048101919091526000916001600160a01b03169063d9638d369060240160a060405180830381865afa1580156104b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d991906120cd565b60048054600254604051631af24ca760e31b81529283015291965061055b95508694506001600160a01b03909116925063d792653891506024016020604051808303816000875af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610556919061210d565b611a02565b600c5550565b6060600e8054806020026020016040519081016040528092919081815260200182805480156105af57602002820191906000526020600020905b81548152602001906001019080831161059b575b5050505050905090565b33600090815260016020819052604090912054146105f25760405162461bcd60e51b81526004016105e990612126565b60405180910390fd5b601054156106125760405162461bcd60e51b81526004016105e990612156565b60016010556000818152600f60205260409020600301546001600160a01b031661064e5760405162461bcd60e51b81526004016105e990612185565b600480546002546000848152600f60205260409081902060010154905163321c64fd60e21b81529384019190915260248301526001600160a01b03169063c87193f490604401600060405180830381600087803b1580156106ae57600080fd5b505af11580156106c2573d6000803e3d6000fd5b5050600354600280546000868152600f602052604090819020909201549151633088df1760e11b81526001600160a01b039093169450636111be2e935061071292909130913391906004016121bc565b600060405180830381600087803b15801561072c57600080fd5b505af1158015610740573d6000803e3d6000fd5b5050505061074d81611a2c565b6040518181527f2c5d2826eb5903b8fc201cf48094b858f42f61c7eaac9aaf43ebed490138144e9060200160405180910390a1506000601055565b33600090815260016020819052604090912054146107b85760405162461bcd60e51b81526004016105e990612126565b601054156107d85760405162461bcd60e51b81526004016105e990612156565b600160105562313ab360e91b8214156107f55760088190556108ee565b81631d185a5b60e21b141561080e5760098190556108ee565b81630637573760e41b141561082757600a8190556108ee565b81630636869760e41b141561085757600b805467ffffffffffffffff19166001600160401b0383161790556108ee565b816207469760ec1b141561088a57600b80546001600160401b0316600160401b6001600160c01b038416021790556108ee565b81661cdd1bdc1c195960ca1b14156108a65760118190556108ee565b60405162461bcd60e51b815260206004820152601f60248201527f436c69707065722f66696c652d756e7265636f676e697a65642d706172616d0060448201526064016105e9565b817fe986e40cc8c151830d4f61050f4fb2e4add8567caad2d5f5496f9158e91fe4c78260405161092091815260200190565b60405180910390a250506000601055565b6000818152600f6020526040812060038101546004909101548291829182916001600160a01b03811691600160a01b9091046001600160601b031690839061097a908390611b00565b965090506001600160a01b038316158015906109935750805b6000988952600f602052604090982060028101546001909101549899969890975095945050505050565b60006109c96001611bc6565b905080156109e1576000805461ff0019166101001790555b600380546001600160a01b038088166001600160a01b03199283161790925560068054878416908316179055600480549286169290911691909117905560028290556b033b2e3c9fd0803ce8000000600855336000818152600160208190526040808320919091556011829055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a28015610ab9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b3360009081526001602081905260409091205414610af05760405162461bcd60e51b81526004016105e990612126565b6001600160a01b038116600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b600e8181548110610b4757600080fd5b600091825260209091200154905081565b3360009081526001602081905260409091205414610b885760405162461bcd60e51b81526004016105e990612126565b60105415610ba85760405162461bcd60e51b81526004016105e990612156565b60016010556011546003908111610bd15760405162461bcd60e51b81526004016105e9906121e1565b6000878152600f60205260409020600301546001600160a01b03811690600160a01b90046001600160601b031681610c1b5760405162461bcd60e51b81526004016105e990612185565b6000898152600f60205260408120600401548190610c3a908490611b00565b925090508015610c825760405162461bcd60e51b815260206004820152601360248201527210db1a5c1c195c8bdb9959591ccb5c995cd95d606a1b60448201526064016105e9565b5080881015610ccb5760405162461bcd60e51b8152602060048201526015602482015274436c69707065722f746f6f2d657870656e7369766560581b60448201526064016105e9565b60008a8152600f602052604081206002810154600190910154909180610cf1848e611c4e565b9050610cfd8186611c67565b915082821115610d1b57829150610d148583612240565b9050610dac565b8282108015610d2957508381105b15610dac57600c5480610d3c8486612262565b1015610daa57808411610d915760405162461bcd60e51b815260206004820152601b60248201527f436c69707065722f6e6f2d7061727469616c2d7075726368617365000000000060448201526064016105e9565b610d9b8185612262565b9250610da78684612240565b91505b505b610db68284612262565b9250610dc28185612262565b9350600360009054906101000a90046001600160a01b03166001600160a01b0316636111be2e600254308e856040518563ffffffff1660e01b8152600401610e0d94939291906121bc565b600060405180830381600087803b158015610e2757600080fd5b505af1158015610e3b573d6000803e3d6000fd5b50506004546001600160a01b03169150508915801590610e6957506003546001600160a01b038d8116911614155b8015610e875750806001600160a01b03168c6001600160a01b031614155b15610ef3578b6001600160a01b0316638452c10e3385858f8f6040518663ffffffff1660e01b8152600401610ec0959493929190612279565b600060405180830381600087803b158015610eda57600080fd5b505af1158015610eee573d6000803e3d6000fd5b505050505b60035460055460405163bb35783b60e01b81526001600160a01b039283169263bb35783b92610f2c9233929091169088906004016122c5565b600060405180830381600087803b158015610f4657600080fd5b505af1158015610f5a573d6000803e3d6000fd5b50505050806001600160a01b031663c87193f460025487600014610f7e5785610f88565b610f8886886122e9565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610fc657600080fd5b505af1158015610fda573d6000803e3d6000fd5b5050505050508260001415610ff757610ff28d611a2c565b61108a565b8161106e57600354600254604051633088df1760e11b81526001600160a01b0390921691636111be2e916110339130908b9089906004016121bc565b600060405180830381600087803b15801561104d57600080fd5b505af1158015611061573d6000803e3d6000fd5b50505050610ff28d611a2c565b60008d8152600f60205260409020600181018390556002018390555b604080518c81526020810186905290810182905260608101839052608081018490526001600160a01b038716908e907f05e309fd6ce72f2ab888a20056bb4210df08daed86f21f95053deb19964d86b19060a00160405180910390a3505060006010555050505050505050505050565b336000908152600160208190526040822054146111295760405162461bcd60e51b81526004016105e990612126565b601054156111495760405162461bcd60e51b81526004016105e990612156565b6001601081905560115481116111715760405162461bcd60e51b81526004016105e9906121e1565b600086116111b45760405162461bcd60e51b815260206004820152601060248201526f21b634b83832b917bd32b93796ba30b160811b60448201526064016105e9565b600085116111f75760405162461bcd60e51b815260206004820152601060248201526f10db1a5c1c195c8bde995c9bcb5b1bdd60821b60448201526064016105e9565b6001600160a01b0384166112405760405162461bcd60e51b815260206004820152601060248201526f21b634b83832b917bd32b93796bab9b960811b60448201526064016105e9565b600d6000815461124f90612301565b91829055509150816112965760405162461bcd60e51b815260206004820152601060248201526f436c69707065722f6f766572666c6f7760801b60448201526064016105e9565b600e80546001818101835560008390527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd90910184905590546112d99190612262565b6000838152600f6020526040812091825560018201889055600282018790556001600160601b034216600160a01b026001600160a01b0387161760039092019190915561132f611327611c97565b600854611e5c565b9050600081116113515760405162461bcd60e51b81526004016105e99061231c565b6000838152600f60205260408120600401829055600b546001600160c01b03600160401b820416916001600160401b0390911690821515806113935750600082115b15611418576113ab836113a68c85611a02565b611e75565b60035460055460405163f24e23eb60e01b81529293506001600160a01b039182169263f24e23eb926113e59216908b9086906004016122c5565b600060405180830381600087803b1580156113ff57600080fd5b505af1158015611413573d6000803e3d6000fd5b505050505b60408051858152602081018c90529081018a9052606081018290526001600160a01b0380891691908a169088907f7c5bfdc0a5e8192f6cd4972f382cec69116862fb62e6abff8003874c58e064b89060800160405180910390a45050600060105550919695505050505050565b33600090815260016020819052604090912054146114b55760405162461bcd60e51b81526004016105e990612126565b6001600160a01b038116600081815260016020526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b6115446040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160601b03168152602001600081525090565b506000908152600f6020908152604091829020825160c0810184528154815260018201549281019290925260028101549282019290925260038201546001600160a01b0381166060830152600160a01b90046001600160601b0316608082015260049091015460a082015290565b33600090815260016020819052604090912054146115e25760405162461bcd60e51b81526004016105e990612126565b601054156116025760405162461bcd60e51b81526004016105e990612156565b60016010556639b837ba3a32b960c91b82141561163957600680546001600160a01b0319166001600160a01b0383161790556116c0565b8162646f6760e81b141561166757600480546001600160a01b0319166001600160a01b0383161790556116c0565b8162766f7760e81b141561169557600580546001600160a01b0319166001600160a01b0383161790556116c0565b816363616c6360e01b14156108a657600780546001600160a01b0319166001600160a01b0383161790555b6040516001600160a01b038216815282907f8fef588b5fc1afbf5b2f06c1a435d513f208da2e6704c3d8f0e0ec91167066ba90602001610920565b336000908152600160208190526040909120541461172b5760405162461bcd60e51b81526004016105e990612126565b6010541561174b5760405162461bcd60e51b81526004016105e990612156565b600160105560115460029081116117745760405162461bcd60e51b81526004016105e9906121e1565b6000838152600f6020526040902060038101546004909101546001600160a01b03821691600160a01b90046001600160601b031690826117c65760405162461bcd60e51b81526004016105e990612185565b60006117d28383611b00565b509050806118195760405162461bcd60e51b815260206004820152601460248201527310db1a5c1c195c8bd8d85b9b9bdd0b5c995cd95d60621b60448201526064016105e9565b6000878152600f6020526040812060018101546002820154600390920180546001600160a01b0316600160a01b426001600160601b0316021790559161185d611c97565b905061186b81600854611e5c565b94506000851161188d5760405162461bcd60e51b81526004016105e99061231c565b60008a8152600f60205260408120600401869055600b546001600160c01b03600160401b820416916001600160401b0390911690821515806118cf5750600082115b1561199457600c548087108015906118f05750806118ed8787611c67565b10155b1561199257611903846113a68986611a02565b9150600360009054906101000a90046001600160a01b03166001600160a01b031663f24e23eb600560009054906101000a90046001600160a01b03168f856040518463ffffffff1660e01b815260040161195f939291906122c5565b600060405180830381600087803b15801561197957600080fd5b505af115801561198d573d6000803e3d6000fd5b505050505b505b6040805189815260208101889052908101869052606081018290526001600160a01b03808e1691908c16908f907f275de7ecdd375b5e8049319f8b350686131c219dd4dc450a08e9cf83b03c865f9060800160405180910390a4505060006010555050505050505050505050565b6000670de0b6b3a7640000611a178484611c67565b81611a2457611a24612214565b049392505050565b600e805460009190611a4090600190612262565b81548110611a5057611a5061234c565b90600052602060002001549050808214611aa9576000828152600f6020526040902054600e805483919083908110611a8a57611a8a61234c565b6000918252602080832090910192909255838152600f90915260409020555b600e805480611aba57611aba612362565b600082815260208082208301600019908101839055909201909255928152600f909252506040812081815560018101829055600281018290556003810182905560040155565b60075460009081906001600160a01b031663487a239584611b2a426001600160601b038916611e85565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015611b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8f919061210d565b9050600954611ba742866001600160601b0316611e85565b1180611bbd5750600a54611bbb8285611e95565b105b91509250929050565b60008054610100900460ff1615611c0d578160ff166001148015611be95750303b155b611c055760405162461bcd60e51b81526004016105e990612378565b506000919050565b60005460ff808416911610611c345760405162461bcd60e51b81526004016105e990612378565b506000805460ff191660ff92909216919091179055600190565b600081831115611c5e5781611c60565b825b9392505050565b6000811580611c8857505080820282828281611c8557611c85612214565b04145b611c9157600080fd5b92915050565b600654600254604051636cb1c69b60e11b815260009283926001600160a01b039091169163d9638d3691611cd19160040190815260200190565b60408051808303816000875af1158015611cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1391906123c6565b509050600080826001600160a01b03166359e02dd76040518163ffffffff1660e01b815260040160408051808303816000875af1158015611d58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7c91906123f4565b9150915080611dc55760405162461bcd60e51b8152602060048201526015602482015274436c69707065722f696e76616c69642d707269636560581b60448201526064016105e9565b611e54611dd683633b9aca00611c67565b600660009054906101000a90046001600160a01b03166001600160a01b031663495d32cb6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4f919061210d565b611e95565b935050505090565b60006b033b2e3c9fd0803ce8000000611a178484611c67565b80820182811015611c9157600080fd5b80820382811115611c9157600080fd5b600081611a17846b033b2e3c9fd0803ce8000000611c67565b6020808252825182820181905260009190848201906040850190845b81811015611ee657835183529284019291840191600101611eca565b50909695505050505050565b600060208284031215611f0457600080fd5b5035919050565b60008060408385031215611f1e57600080fd5b50508035926020909101359150565b6001600160a01b0381168114611f4257600080fd5b50565b60008060008060808587031215611f5b57600080fd5b8435611f6681611f2d565b93506020850135611f7681611f2d565b92506040850135611f8681611f2d565b9396929550929360600135925050565b600060208284031215611fa857600080fd5b8135611c6081611f2d565b60008060008060008060a08789031215611fcc57600080fd5b8635955060208701359450604087013593506060870135611fec81611f2d565b925060808701356001600160401b038082111561200857600080fd5b818901915089601f83011261201c57600080fd5b81358181111561202b57600080fd5b8a602082850101111561203d57600080fd5b6020830194508093505050509295509295509295565b6000806000806080858703121561206957600080fd5b8435935060208501359250604085013561208281611f2d565b9150606085013561209281611f2d565b939692955090935050565b600080604083850312156120b057600080fd5b8235915060208301356120c281611f2d565b809150509250929050565b600080600080600060a086880312156120e557600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60006020828403121561211f57600080fd5b5051919050565b60208082526016908201527510db1a5c1c195c8bdb9bdd0b585d5d1a1bdc9a5e995960521b604082015260600190565b60208082526015908201527410db1a5c1c195c8bdcde5cdd195b4b5b1bd8dad959605a1b604082015260600190565b6020808252601b908201527f436c69707065722f6e6f742d72756e6e696e672d61756374696f6e0000000000604082015260600190565b9384526001600160a01b03928316602085015291166040830152606082015260800190565b60208082526019908201527810db1a5c1c195c8bdcdd1bdc1c19590b5a5b98dbdc9c9958dd603a1b604082015260600190565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261225d57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156122745761227461222a565b500390565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600082198211156122fc576122fc61222a565b500190565b60006000198214156123155761231561222a565b5060010190565b602080825260169082015275436c69707065722f7a65726f2d746f702d707269636560501b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600080604083850312156123d957600080fd5b82516123e481611f2d565b6020939093015192949293505050565b6000806040838503121561240757600080fd5b82519150602083015180151581146120c257600080fdfea2646970667358221220bed74787b62f3c8abb476858bbcac9ca4650d003bf0a85fd169510ee398dc76d64736f6c634300080a0033";

type ClipperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClipperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Clipper__factory extends ContractFactory {
  constructor(...args: ClipperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Clipper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Clipper__factory {
    return super.connect(runner) as Clipper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClipperInterface {
    return new Interface(_abi) as ClipperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Clipper {
    return new Contract(address, _abi, runner) as unknown as Clipper;
  }
}
