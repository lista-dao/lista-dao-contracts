/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { ABNBb, ABNBbInterface } from "../../../contracts/mock/ABNBb";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "binancePool",
        type: "address",
      },
    ],
    name: "BinancePoolChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "certToken",
        type: "address",
      },
    ],
    name: "CertTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "crossChainBridge",
        type: "address",
      },
    ],
    name: "CrossChainBridgeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRatio",
        type: "uint256",
      },
    ],
    name: "RatioUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unlocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bondsToShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnAndSetPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnAndSetPendingFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnBonds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aBNBcAddress",
        type: "address",
      },
    ],
    name: "changeABNBcToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "binancePool",
        type: "address",
      },
    ],
    name: "changeBinancePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crossChainBridge",
        type: "address",
      },
    ],
    name: "changeCrossChainBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapFeeOperator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "swapFeeRatio",
        type: "uint256",
      },
    ],
    name: "changeSwapFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRebasing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "lockShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "lockSharesFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "lockedSharesOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedSupply",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintBonds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "pendingBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ratio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRatio",
        type: "uint256",
      },
    ],
    name: "repairRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sharesToBonds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSharesSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalUnbondedBonds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "transferAndLockShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "unlockShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bonds",
        type: "uint256",
      },
    ],
    name: "unlockSharesFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "updatePendingBurning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalRewards",
        type: "uint256",
      },
    ],
    name: "updateRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506125ad806100206000396000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c806371ca337d11610151578063b70cbc53116100c3578063dc647e2911610087578063dc647e2914610513578063dd62ed3e14610526578063e3ec72be14610539578063e5683ad91461054c578063ee0313731461055f578063f2fde38b1461057257600080fd5b8063b70cbc53146104ca578063be1746f5146104dd578063c4d66de8146104f0578063ca5c7b9114610503578063d50619cc1461050b57600080fd5b80638da5cb5b116101155780638da5cb5b1461045657806395d89b41146104765780639bbb02da1461047e578063a457c2d714610491578063a85374e1146104a4578063a9059cbb146104b757600080fd5b806371ca337d1461041857806378342b7214610420578063817b1cd21461043357806383a8687b1461043b57806387130f031461044e57600080fd5b806340c10f19116101ea5780635dfba115116101ae5780635dfba115146103bd5780636482a22f146103c4578063686b149c146103d75780636c58d43d146103ea57806370a08231146103fd578063715018a61461041057600080fd5b806340c10f19146103485780634950fbcd1461035b578063536163731461036e57806355c965ca14610381578063583585f41461039457600080fd5b806323b872dd1161023157806323b872dd146102ed5780632c01d07314610300578063313ce5671461031357806339509351146103225780633b0f47551461033557600080fd5b806306394c9b1461026e57806306fdde0314610283578063095ea7b3146102a157806318160ddd146102c45780631c52cfae146102da575b600080fd5b61028161027c36600461215d565b610585565b005b61028b610607565b6040516102989190612178565b60405180910390f35b6102b46102af3660046121cd565b610699565b6040519015158152602001610298565b6102cc6106ff565b604051908152602001610298565b6102816102e83660046121cd565b61071b565b6102b46102fb3660046121f7565b61082b565b61028161030e36600461215d565b61088b565b60405160128152602001610298565b6102b46103303660046121cd565b610904565b6102816103433660046121cd565b61097e565b6102816103563660046121cd565b610a12565b6102816103693660046121cd565b610a67565b6102cc61037c366004612233565b610b09565b61028161038f3660046121cd565b610b20565b6102cc6103a236600461215d565b6001600160a01b03166000908152609e602052604090205490565b60016102b4565b6102816103d2366004612233565b610b7b565b6102816103e53660046121cd565b610cd0565b6102cc6103f8366004612233565b610e01565b6102cc61040b36600461215d565b610e18565b610281610e36565b609a546102cc565b61028161042e3660046121f7565b610e71565b609b546102cc565b61028161044936600461215d565b610f81565b609c546102cc565b61045e610ffa565b6040516001600160a01b039091168152602001610298565b61028b611009565b6102cc61048c36600461215d565b611018565b6102b461049f3660046121cd565b611023565b6102816104b23660046121cd565b61103b565b6102b46104c53660046121cd565b6110fa565b6102816104d83660046121f7565b61113e565b6102816104eb3660046121cd565b611256565b6102816104fe36600461215d565b61132b565b609d546102cc565b6102cc611424565b610281610521366004612233565b611434565b6102cc61053436600461224c565b61152e565b61028161054736600461215d565b61155f565b61028161055a366004612233565b6115d8565b61028161056d366004612233565b611642565b61028161058036600461215d565b6117c6565b3361058e610ffa565b6001600160a01b0316146105bd5760405162461bcd60e51b81526004016105b49061227f565b60405180910390fd5b609780546001600160a01b0319166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b606060688054610616906122b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610642906122b4565b801561068f5780601f106106645761010080835404028352916020019161068f565b820191906000526020600020905b81548152906001019060200180831161067257829003601f168201915b5050505050905090565b6000806106a583611866565b90506106b1848261187d565b506040518381526001600160a01b0385169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a360019150505b92915050565b60008061070a611424565b905061071581610e01565b91505090565b6001600160a01b0382166000908152609e602052604081208054839290610743908490612305565b9250508190555080609f600082825461075c9190612305565b9250508190555080609c60008282546107759190612305565b909155506000905061078682610b09565b90506107928382611895565b60a154604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906107c4903090859060040161231d565b600060405180830381600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b5050604051848152600092506001600160a01b0386169150600080516020612538833981519152906020015b60405180910390a3505050565b60008061083783611866565b90506108448585836119ad565b50836001600160a01b0316856001600160a01b03166000805160206125388339815191528560405161087891815260200190565b60405180910390a3506001949350505050565b33610894610ffa565b6001600160a01b0316146108ba5760405162461bcd60e51b81526004016105b49061227f565b60a180546001600160a01b0319166001600160a01b0383169081179091556040517f70cb2cf1a11068f4f5a8a9ea62551e8fc3d714119b389d2fb7a9a45b3ac278fa90600090a250565b60008061091083610b09565b905061091c84826119d1565b503360008181526066602090815260408083206001600160a01b0389168085529252909120549091907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061097090610e01565b6040519081526020016106eb565b6001600160a01b0382166000908152609e6020526040902054818110156109d95760405162461bcd60e51b815260206004820152600f60248201526e616d6f756e742069732077726f6e6760881b60448201526064016105b4565b6109e38282612336565b6001600160a01b0384166000908152609e6020526040902055609f54610a0a908390612336565b609f55505050565b80609d6000828254610a24919061234d565b90915550610a3490508282611a10565b6040518181526001600160a01b038316906000906000805160206125388339815191529060200160405180910390a35050565b33610a70610ffa565b6001600160a01b031614610a965760405162461bcd60e51b81526004016105b49061227f565b662386f26fc10000811115610ae35760405162461bcd60e51b81526020600482015260136024820152726e6f742067726561746572207468616e20312560681b60448201526064016105b4565b60a280546001600160a01b0319166001600160a01b03939093169290921790915560a355565b60006106f982609a54670de0b6b3a7640000611ab0565b6000610b2b82610b09565b905080609d6000828254610b3f919061238c565b90915550610b4f90508382611895565b6040518281526000906001600160a01b038516906000805160206125388339815191529060200161081e565b60a1546040516323b872dd60e01b815233916001600160a01b0316906323b872dd90610baf908490309087906004016123cd565b6020604051808303816000875af1158015610bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf291906123f1565b506000670de0b6b3a764000060a35484610c0c9190612413565b610c169190612448565b60a2549091506001600160a01b0316331415610c30575060005b6000610c3c8285612336565b60a2546001600160a01b0316600090815260656020526040812080549293508492909190610c6b908490612305565b90915550506001600160a01b03831660009081526065602052604081208054839290610c98908490612305565b90915550506040518481526001600160a01b03841690600080516020612558833981519152906020015b60405180910390a250505050565b6000610cdb82610b09565b6001600160a01b038416600090815260656020526040902054909150811115610d165760405162461bcd60e51b81526004016105b49061245c565b6001600160a01b03831660009081526065602052604081208054839290610d3e908490612336565b909155505060a15460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610d75908690859060040161231d565b6020604051808303816000875af1158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db891906123f1565b50826001600160a01b03167f0f0bc5b519ddefdd8e5f9e6423433aa2b869738de2ae34d58ebc796fc749fa0d82604051610df491815260200190565b60405180910390a2505050565b60006106f982670de0b6b3a7640000609a54611ab0565b600080610e2483611af5565b9050610e2f81610e01565b9392505050565b33610e3f610ffa565b6001600160a01b031614610e655760405162461bcd60e51b81526004016105b49061227f565b610e6f6000611b10565b565b6001600160a01b0382166000908152609e602052604081208054839290610e99908490612305565b9250508190555080609f6000828254610eb29190612305565b9250508190555080609c6000828254610ecb9190612305565b9091555060009050610edc82610b09565b9050610ee88482611895565b60a154604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90610f1a903090859060040161231d565b600060405180830381600087803b158015610f3457600080fd5b505af1158015610f48573d6000803e3d6000fd5b5050604051848152600092506001600160a01b03861691506000805160206125388339815191529060200160405180910390a350505050565b33610f8a610ffa565b6001600160a01b031614610fb05760405162461bcd60e51b81526004016105b49061227f565b609980546001600160a01b0319166001600160a01b0383169081179091556040517f7e41e5f9f71975f631dd6e18d69b355c41bf7779f14b8d2c404127306164faa490600090a250565b6033546001600160a01b031690565b606060698054610616906122b4565b60006106f982611af5565b60008061102f83610b09565b905061091c8482611b62565b80609b600082825461104d9190612305565b909155506000905061105e82610b09565b905061106a8382611a10565b60a1546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061109c903090859060040161231d565b600060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b50506040518481526001600160a01b0386169250600091506000805160206125388339815191529060200161081e565b60008061110683611866565b90506111128482611bf4565b506040518381526001600160a01b038516903390600080516020612538833981519152906020016106eb565b6001600160a01b03831633146111885760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b21039b832b73232b960891b60448201526064016105b4565b60a1546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906111bc908690309086906004016123cd565b6020604051808303816000875af11580156111db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ff91906123f1565b506001600160a01b03821660009081526065602052604081208054839290611228908490612305565b90915550506040518181526001600160a01b0383169060008051602061255883398151915290602001610df4565b60a1546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061128a908590309086906004016123cd565b6020604051808303816000875af11580156112a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cd91906123f1565b506001600160a01b038216600090815260656020526040812080548392906112f6908490612305565b90915550506040518181526001600160a01b038316906000805160206125588339815191529060200160405180910390a25050565b60006113376001611c02565b9050801561134f576000805461ff0019166101001790555b611357611c8f565b6113b36040518060400160405280601c81526020017f416e6b7220424e4220526577617264204561726e696e6720426f6e64000000008152506040518060400160405280600581526020016430a127213160d91b815250611cbe565b609780546001600160a01b0319166001600160a01b038416179055670de0b6b3a7640000609a558015611420576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600061142f60675490565b905090565b61143c610ffa565b6001600160a01b0316336001600160a01b0316148061146557506097546001600160a01b031633145b6114a95760405162461bcd60e51b815260206004820152601560248201527413dc195c985d1bdc8e881b9bdd08185b1b1bddd959605a1b60448201526064016105b4565b60006114b3611424565b90506000609c5483609b546114c89190612305565b6114d29190612336565b9050806114e783670de0b6b3a7640000612413565b6114f19190612448565b609a8190556040519081527f8bfafad5cbd7165952ec3370b6dcf547a709f2dad989ecb117d6d361038dd8c59060200160405180910390a1505050565b6001600160a01b038083166000908152606660209081526040808320938516835292905290812054610e2f90610e01565b33611568610ffa565b6001600160a01b03161461158e5760405162461bcd60e51b81526004016105b49061227f565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fcd8f1e1a877b0dbb52eb916e9a60f6419d32c613f3ea20d7b89df60d7e525f4790600090a250565b336115e1610ffa565b6001600160a01b0316146116075760405162461bcd60e51b81526004016105b49061227f565b609a8190556040518181527f8bfafad5cbd7165952ec3370b6dcf547a709f2dad989ecb117d6d361038dd8c59060200160405180910390a150565b338161164d82611af5565b101561166b5760405162461bcd60e51b81526004016105b49061245c565b6000670de0b6b3a764000060a354846116849190612413565b61168e9190612448565b60a2549091506001600160a01b03163314156116a8575060005b60006116b48285612336565b60a2546001600160a01b03166000908152606560205260408120805492935084929091906116e3908490612305565b90915550506001600160a01b03831660009081526065602052604081208054869290611710908490612336565b909155505060a15460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611747908690859060040161231d565b6020604051808303816000875af1158015611766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178a91906123f1565b50826001600160a01b03167f0f0bc5b519ddefdd8e5f9e6423433aa2b869738de2ae34d58ebc796fc749fa0d85604051610cc291815260200190565b336117cf610ffa565b6001600160a01b0316146117f55760405162461bcd60e51b81526004016105b49061227f565b6001600160a01b03811661185a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b4565b61186381611b10565b50565b60006106f982609a54670de0b6b3a7640000611d0c565b60003361188b818585611d49565b5060019392505050565b6001600160a01b0382166118f55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105b4565b6001600160a01b038216600090815260656020526040902054818110156119695760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105b4565b6001600160a01b0383166000908152606560205260408120838303905560678054849290611998908490612336565b909155506119a890508360008483565b505050565b6000336119bb858285611e38565b6119c6858585611eb2565b506001949350505050565b3360008181526066602090815260408083206001600160a01b038716845290915281205490919061188b9082908690611a0b908790612305565b611d49565b6001600160a01b038216611a665760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105b4565b8060676000828254611a789190612305565b90915550506001600160a01b03821660009081526065602052604081208054839290611aa5908490612305565b909155506114209050565b6000611aed611ac8611ac28487612448565b85612032565b8385611ad4828961248a565b611ade9190612413565b611ae89190612448565b612065565b949350505050565b6001600160a01b031660009081526065602052604090205490565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b3360008181526066602090815260408083206001600160a01b038716845290915281205490919083811015611be75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105b4565b6119c68286868403611d49565b60003361188b818585611eb2565b60008054610100900460ff1615611c49578160ff166001148015611c255750303b155b611c415760405162461bcd60e51b81526004016105b49061249e565b506000919050565b60005460ff808416911610611c705760405162461bcd60e51b81526004016105b49061249e565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16611cb65760405162461bcd60e51b81526004016105b4906124ec565b610e6f61207d565b600054610100900460ff16611ce55760405162461bcd60e51b81526004016105b4906124ec565b8151611cf89060689060208501906120ad565b5080516119a89060699060208401906120ad565b6000611aed611d1e611ac28487612448565b83611d2a600182612336565b86611d35878a61248a565b611d3f9190612413565b611ade9190612305565b6001600160a01b038316611dab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105b4565b6001600160a01b038216611e0c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105b4565b6001600160a01b0392831660009081526066602090815260408083209490951682529290925291902055565b6000611e44848461152e565b90506000198114611eac5781811015611e9f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105b4565b611eac8484848403611d49565b50505050565b6001600160a01b038316611f165760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105b4565b6001600160a01b038216611f785760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105b4565b6001600160a01b03831660009081526065602052604090205481811015611ff05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105b4565b6001600160a01b03808516600090815260656020526040808220858503905591851681529081208054849290612027908490612305565b90915550611eac9050565b600082612041575060006106f9565b8282028284828161205457612054612432565b0414610e2f576000199150506106f9565b600082820183811015610e2f576000199150506106f9565b600054610100900460ff166120a45760405162461bcd60e51b81526004016105b4906124ec565b610e6f33611b10565b8280546120b9906122b4565b90600052602060002090601f0160209004810192826120db5760008555612121565b82601f106120f457805160ff1916838001178555612121565b82800160010185558215612121579182015b82811115612121578251825591602001919060010190612106565b5061212d929150612131565b5090565b5b8082111561212d5760008155600101612132565b80356001600160a01b0381168114611c8a57600080fd5b60006020828403121561216f57600080fd5b610e2f82612146565b600060208083528351808285015260005b818110156121a557858101830151858201604001528201612189565b818111156121b7576000604083870101525b50601f01601f1916929092016040019392505050565b600080604083850312156121e057600080fd5b6121e983612146565b946020939093013593505050565b60008060006060848603121561220c57600080fd5b61221584612146565b925061222360208501612146565b9150604084013590509250925092565b60006020828403121561224557600080fd5b5035919050565b6000806040838503121561225f57600080fd5b61226883612146565b915061227660208401612146565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806122c857607f821691505b602082108114156122e957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612318576123186122ef565b500190565b6001600160a01b03929092168252602082015260400190565b600082821015612348576123486122ef565b500390565b60008083128015600160ff1b85018412161561236b5761236b6122ef565b6001600160ff1b0384018313811615612386576123866122ef565b50500390565b600080821280156001600160ff1b03849003851316156123ae576123ae6122ef565b600160ff1b83900384128116156123c7576123c76122ef565b50500190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561240357600080fd5b81518015158114610e2f57600080fd5b600081600019048311821515161561242d5761242d6122ef565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261245757612457612432565b500490565b602080825260149082015273696e73756666696369656e742062616c616e636560601b604082015260600190565b60008261249957612499612432565b500690565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd60008a264697066735822122035df4bc0394a971942a5742336676963f9bd75535ad87fd5777c51fbb20eef0464736f6c634300080a0033";

type ABNBbConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABNBbConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABNBb__factory extends ContractFactory {
  constructor(...args: ABNBbConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ABNBb & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ABNBb__factory {
    return super.connect(runner) as ABNBb__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABNBbInterface {
    return new Interface(_abi) as ABNBbInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ABNBb {
    return new Contract(address, _abi, runner) as unknown as ABNBb;
  }
}
