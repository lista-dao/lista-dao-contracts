/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PancakeMigrator,
  PancakeMigratorInterface,
} from "../../../../contracts/mock/dex/PancakeMigrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryV1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516109a43803806109a483398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516108dd6100c76000396000818161029e0152818161030b015261038d01526000607201526108dd6000f3fe6080604052600436106100225760003560e01c8063b7df1d251461002e57600080fd5b3661002957005b600080fd5b34801561003a57600080fd5b5061004e610049366004610744565b610050565b005b6040516303795fb160e11b81526001600160a01b0386811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906306f2bf6290602401602060405180830381865afa1580156100bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100df9190610796565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014d91906107ba565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091506001600160a01b038316906323b872dd906064016020604051808303816000875af11580156101a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c791906107d3565b61020f5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064015b60405180910390fd5b604051637c45f8ad60e11b8152600481018290526001602482018190526044820152600019606482015260009081906001600160a01b0385169063f88bf15a9060840160408051808303816000875af1158015610270573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029491906107f5565b915091506102c3897f0000000000000000000000000000000000000000000000000000000000000000836103f4565b60405163f305d71960e01b81526001600160a01b038a8116600483015260248201839052604482018a905260648201899052878116608483015260a4820187905260009182917f0000000000000000000000000000000000000000000000000000000000000000169063f305d71990869060c40160606040518083038185885af1158015610355573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061037a9190610819565b5091509150818311156103cc576103b38b7f000000000000000000000000000000000000000000000000000000000000000060006103f4565b6103c78b336103c28587610847565b610523565b6103e7565b808411156103e7576103e7336103e28387610847565b61064d565b5050505050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691610450919061086c565b6000604051808303816000865af19150503d806000811461048d576040519150601f19603f3d011682016040523d82523d6000602084013e610492565b606091505b50915091508180156104bc5750805115806104bc5750808060200190518101906104bc91906107d3565b61051c5760405162461bcd60e51b815260206004820152602b60248201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060448201526a1c9bdd994819985a5b195960aa1b6064820152608401610206565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161057f919061086c565b6000604051808303816000865af19150503d80600081146105bc576040519150601f19603f3d011682016040523d82523d6000602084013e6105c1565b606091505b50915091508180156105eb5750805115806105eb5750808060200190518101906105eb91906107d3565b61051c5760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b6064820152608401610206565b604080516000808252602082019092526001600160a01b038416908390604051610677919061086c565b60006040518083038185875af1925050503d80600081146106b4576040519150601f19603f3d011682016040523d82523d6000602084013e6106b9565b606091505b50509050806107275760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b6064820152608401610206565b505050565b6001600160a01b038116811461074157600080fd5b50565b600080600080600060a0868803121561075c57600080fd5b85356107678161072c565b9450602086013593506040860135925060608601356107858161072c565b949793965091946080013592915050565b6000602082840312156107a857600080fd5b81516107b38161072c565b9392505050565b6000602082840312156107cc57600080fd5b5051919050565b6000602082840312156107e557600080fd5b815180151581146107b357600080fd5b6000806040838503121561080857600080fd5b505080516020909101519092909150565b60008060006060848603121561082e57600080fd5b8351925060208401519150604084015190509250925092565b60008282101561086757634e487b7160e01b600052601160045260246000fd5b500390565b6000825160005b8181101561088d5760208186018101518583015201610873565b8181111561089c576000828501525b50919091019291505056fea2646970667358221220460479ff458172e5c3d1c791b62dc787fc17d204b7013d172dc01da58a58ba7264736f6c634300080a0033";

type PancakeMigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PancakeMigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PancakeMigrator__factory extends ContractFactory {
  constructor(...args: PancakeMigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factoryV1: AddressLike,
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factoryV1, _router, overrides || {});
  }
  override deploy(
    _factoryV1: AddressLike,
    _router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factoryV1, _router, overrides || {}) as Promise<
      PancakeMigrator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PancakeMigrator__factory {
    return super.connect(runner) as PancakeMigrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PancakeMigratorInterface {
    return new Interface(_abi) as PancakeMigratorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PancakeMigrator {
    return new Contract(address, _abi, runner) as unknown as PancakeMigrator;
  }
}
