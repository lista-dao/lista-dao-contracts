/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { ABNBc, ABNBcInterface } from "../../../contracts/mock/ABNBc";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "binancePool",
        type: "address",
      },
      {
        internalType: "address",
        name: "bondToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "binancePool",
        type: "address",
      },
    ],
    name: "BinancePoolChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bondToken",
        type: "address",
      },
    ],
    name: "BondTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceWithRewardsOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bondsToShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "binancePool",
        type: "address",
      },
    ],
    name: "changeBinancePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bondToken",
        type: "address",
      },
    ],
    name: "changeBondToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRebasing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintApprovedTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ratio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sharesToBonds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200133638038062001336833981016040819052620000349162000312565b60405180606001604052806023815260200162001313602391396040518060400160405280600581526020016461424e426360d81b8152508160039080519060200190620000849291906200024f565b5080516200009a9060049060208401906200024f565b5050600580546001600160a01b038086166001600160a01b031992831617909255600680549285169290911682179055604080516318160ddd60e01b81529051600093506318160ddd916004808201926020929091908290030181865afa1580156200010a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013091906200034a565b90506200015e600660009054906101000a90046001600160a01b0316826200016760201b620006811760201c565b505050620003c8565b6001600160a01b038216620001c25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001d6919062000364565b90915550506001600160a01b038216600090815260208190526040812080548392906200020590849062000364565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200025d906200038b565b90600052602060002090601f016020900481019282620002815760008555620002cc565b82601f106200029c57805160ff1916838001178555620002cc565b82800160010185558215620002cc579182015b82811115620002cc578251825591602001919060010190620002af565b50620002da929150620002de565b5090565b5b80821115620002da5760008155600101620002df565b80516001600160a01b03811681146200030d57600080fd5b919050565b600080604083850312156200032657600080fd5b6200033183620002f5565b91506200034160208401620002f5565b90509250929050565b6000602082840312156200035d57600080fd5b5051919050565b600082198211156200038657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003a057607f821691505b60208210811415620003c257634e487b7160e01b600052602260045260246000fd5b50919050565b610f3b80620003d86000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635dfba115116100b857806383a8687b1161007c57806383a8687b1461027057806395d89b41146102835780639dc29fac1461028b578063a457c2d71461029e578063a9059cbb146102b1578063dd62ed3e146102c457600080fd5b80635dfba115146102125780636c58d43d146102195780636d20d3d01461022c57806370a082311461023f57806371ca337d1461026857600080fd5b8063313ce567116100ff578063313ce567146101b757806339509351146101c657806340c10f19146101d957806353616373146101ec5780635d0a81c1146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f57806327de9869146101a2575b600080fd5b6101446102d7565b6040516101519190610cb1565b60405180910390f35b61016d610168366004610d22565b610369565b6040519015158152602001610151565b6002545b604051908152602001610151565b61016d61019d366004610d4c565b610383565b6101b56101b0366004610d4c565b6103a7565b005b60405160128152602001610151565b61016d6101d4366004610d22565b6103c1565b6101b56101e7366004610d22565b6103e3565b6101816101fa366004610d88565b6103f1565b61018161020d366004610da1565b61040d565b600061016d565b610181610227366004610d88565b61048c565b6101b561023a366004610da1565b6104a8565b61018161024d366004610da1565b6001600160a01b031660009081526020819052604090205490565b6101816104f2565b6101b561027e366004610da1565b610565565b6101446105af565b6101b5610299366004610d22565b6105be565b61016d6102ac366004610d22565b6105c8565b61016d6102bf366004610d22565b610648565b6101816102d2366004610dbc565b610656565b6060600380546102e690610def565b80601f016020809104026020016040519081016040528092919081815260200182805461031290610def565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050505050905090565b60003361037781858561074e565b60019150505b92915050565b600033610391858285610872565b61039c8585856108ec565b506001949350505050565b6103b18382610681565b6103bc83838361074e565b505050565b6000336103778185856103d48383610656565b6103de9190610e40565b61074e565b6103ed8282610681565b5050565b600061037d826103ff6104f2565b670de0b6b3a7640000610aa8565b6040516370a0823160e01b81526001600160a01b0382166004820152600090819030906370a0823190602401602060405180830381865afa158015610456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047a9190610e58565b90506104858161048c565b9392505050565b600061037d82670de0b6b3a76400006104a36104f2565b610aed565b600680546001600160a01b0319166001600160a01b0383169081179091556040517fc34611d161f81ae41fb88616b3c13376c8b12329186e2cf1e2a8e73a98dbcccf90600090a250565b600654604080516371ca337d60e01b815290516000926001600160a01b0316916371ca337d9160048083019260209291908290030181865afa15801561053c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105609190610e58565b905090565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f7e41e5f9f71975f631dd6e18d69b355c41bf7779f14b8d2c404127306164faa490600090a250565b6060600480546102e690610def565b6103ed8282610b2a565b600033816105d68286610656565b90508381101561063b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61039c828686840361074e565b6000336103778185856108ec565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0382166106d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610632565b80600260008282546106e99190610e40565b90915550506001600160a01b03821660009081526020819052604081208054839290610716908490610e40565b90915550506040518181526001600160a01b03831690600090600080516020610ee68339815191529060200160405180910390a35050565b6001600160a01b0383166107b05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610632565b6001600160a01b0382166108115760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610632565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061087e8484610656565b905060001981146108e657818110156108d95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610632565b6108e6848484840361074e565b50505050565b6001600160a01b0383166109505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610632565b6001600160a01b0382166109b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610632565b6001600160a01b03831660009081526020819052604090205481811015610a2a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610632565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a61908490610e40565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610ee683398151915284604051610a9b91815260200190565b60405180910390a36108e6565b6000610ae5610ac0610aba8487610e87565b85610c66565b8385610acc8289610e9b565b610ad69190610eaf565b610ae09190610e87565b610c99565b949350505050565b6000610ae5610aff610aba8487610e87565b83610b0b600182610ece565b86610b16878a610e9b565b610b209190610eaf565b610ad69190610e40565b6001600160a01b038216610b8a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610632565b6001600160a01b03821660009081526020819052604090205481811015610bfe5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610632565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c2d908490610ece565b90915550506040518281526000906001600160a01b03851690600080516020610ee68339815191529060200160405180910390a3505050565b600082610c755750600061037d565b82820282848281610c8857610c88610e71565b04146104855760001991505061037d565b6000828201838110156104855760001991505061037d565b600060208083528351808285015260005b81811015610cde57858101830151858201604001528201610cc2565b81811115610cf0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610d1d57600080fd5b919050565b60008060408385031215610d3557600080fd5b610d3e83610d06565b946020939093013593505050565b600080600060608486031215610d6157600080fd5b610d6a84610d06565b9250610d7860208501610d06565b9150604084013590509250925092565b600060208284031215610d9a57600080fd5b5035919050565b600060208284031215610db357600080fd5b61048582610d06565b60008060408385031215610dcf57600080fd5b610dd883610d06565b9150610de660208401610d06565b90509250929050565b600181811c90821680610e0357607f821691505b60208210811415610e2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610e5357610e53610e2a565b500190565b600060208284031215610e6a57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082610e9657610e96610e71565b500490565b600082610eaa57610eaa610e71565b500690565b6000816000190483118215151615610ec957610ec9610e2a565b500290565b600082821015610ee057610ee0610e2a565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122045adec5594e1bd931ca27de9ec06c1a6de5d8a02e2c54cda746b0cfad0ef5a7c64736f6c634300080a0033416e6b7220424e42205265776172642042656172696e67204365727469666963617465";

type ABNBcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABNBcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABNBc__factory extends ContractFactory {
  constructor(...args: ABNBcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    binancePool: AddressLike,
    bondToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(binancePool, bondToken, overrides || {});
  }
  override deploy(
    binancePool: AddressLike,
    bondToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(binancePool, bondToken, overrides || {}) as Promise<
      ABNBc & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ABNBc__factory {
    return super.connect(runner) as ABNBc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABNBcInterface {
    return new Interface(_abi) as ABNBcInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ABNBc {
    return new Contract(address, _abi, runner) as unknown as ABNBc;
  }
}
