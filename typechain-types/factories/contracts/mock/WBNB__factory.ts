/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { WBNB, WBNBInterface } from "../../../contracts/mock/WBNB";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061114b806100206000396000f3fe6080604052600436106101045760003560e01c8063715018a6116100a0578063a457c2d711610064578063a457c2d7146102de578063a9059cbb146102fe578063d0e30db01461031e578063dd62ed3e14610326578063f2fde38b1461034657600080fd5b8063715018a6146102575780638129fc1c1461026c5780638da5cb5b1461028157806395d89b41146102a95780639dc29fac146102be57600080fd5b806306fdde0314610109578063095ea7b31461013457806318160ddd1461016457806323b872dd146101835780632e1a7d4d146101a3578063313ce567146101c557806339509351146101e157806340c10f191461020157806370a0823114610221575b600080fd5b34801561011557600080fd5b5061011e610366565b60405161012b9190610e64565b60405180910390f35b34801561014057600080fd5b5061015461014f366004610ed0565b6103f8565b604051901515815260200161012b565b34801561017057600080fd5b506067545b60405190815260200161012b565b34801561018f57600080fd5b5061015461019e366004610efa565b610410565b3480156101af57600080fd5b506101c36101be366004610f36565b610434565b005b3480156101d157600080fd5b506040516012815260200161012b565b3480156101ed57600080fd5b506101546101fc366004610ed0565b6104ca565b34801561020d57600080fd5b506101c361021c366004610ed0565b610509565b34801561022d57600080fd5b5061017561023c366004610f4f565b6001600160a01b031660009081526065602052604090205490565b34801561026357600080fd5b506101c3610517565b34801561027857600080fd5b506101c361054d565b34801561028d57600080fd5b506033546040516001600160a01b03909116815260200161012b565b3480156102b557600080fd5b5061011e610601565b3480156102ca57600080fd5b506101c36102d9366004610ed0565b610610565b3480156102ea57600080fd5b506101546102f9366004610ed0565b61061a565b34801561030a57600080fd5b50610154610319366004610ed0565b6106ac565b6101c36106ba565b34801561033257600080fd5b50610175610341366004610f71565b6106e0565b34801561035257600080fd5b506101c3610361366004610f4f565b61070b565b60606068805461037590610fa4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a190610fa4565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b5050505050905090565b6000336104068185856107a3565b5060019392505050565b60003361041e858285610892565b61042985858561090c565b506001949350505050565b336000908152606560205260409020548111156104725760405162461bcd60e51b815260206004820152600060248201526044015b60405180910390fd5b3360009081526065602052604081208054839290610491908490610ff5565b90915550506040513390819083156108fc029084906000818181858888f193505050501580156104c5573d6000803e3d6000fd5b505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909190610406908290869061050490879061100c565b6107a3565b6105138282610a8c565b5050565b6033546001600160a01b031633146105415760405162461bcd60e51b815260040161046990611024565b61054b6000610b2c565b565b60006105596001610b7e565b90508015610571576000805461ff0019166101001790555b610579610c0b565b6105b86040518060600160405280602381526020016110f3602391396040518060400160405280600581526020016461424e426360d81b815250610c3a565b80156105fe576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60606069805461037590610fa4565b6105138282610c88565b3360008181526066602090815260408083206001600160a01b03871684529091528120549091908381101561069f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610469565b61042982868684036107a3565b60003361040681858561090c565b33600090815260656020526040812080543492906106d990849061100c565b9091555050565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6033546001600160a01b031633146107355760405162461bcd60e51b815260040161046990611024565b6001600160a01b03811661079a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610469565b6105fe81610b2c565b6001600160a01b0383166108055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610469565b6001600160a01b0382166108665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610469565b6001600160a01b0392831660009081526066602090815260408083209490951682529290925291902055565b600061089e84846106e0565b9050600019811461090657818110156108f95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610469565b61090684848484036107a3565b50505050565b6001600160a01b0383166109705760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610469565b6001600160a01b0382166109d25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610469565b6001600160a01b03831660009081526065602052604090205481811015610a4a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610469565b6001600160a01b03808516600090815260656020526040808220858503905591851681529081208054849290610a8190849061100c565b909155506109069050565b6001600160a01b038216610ae25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610469565b8060676000828254610af4919061100c565b90915550506001600160a01b03821660009081526065602052604081208054839290610b2190849061100c565b909155506105139050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610bc5578160ff166001148015610ba15750303b155b610bbd5760405162461bcd60e51b815260040161046990611059565b506000919050565b60005460ff808416911610610bec5760405162461bcd60e51b815260040161046990611059565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610c325760405162461bcd60e51b8152600401610469906110a7565b61054b610d9b565b600054610100900460ff16610c615760405162461bcd60e51b8152600401610469906110a7565b8151610c74906068906020850190610dcb565b5080516104c5906069906020840190610dcb565b6001600160a01b038216610ce85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610469565b6001600160a01b03821660009081526065602052604090205481811015610d5c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610469565b6001600160a01b0383166000908152606560205260408120838303905560678054849290610d8b908490610ff5565b909155506104c590508360008483565b600054610100900460ff16610dc25760405162461bcd60e51b8152600401610469906110a7565b61054b33610b2c565b828054610dd790610fa4565b90600052602060002090601f016020900481019282610df95760008555610e3f565b82601f10610e1257805160ff1916838001178555610e3f565b82800160010185558215610e3f579182015b82811115610e3f578251825591602001919060010190610e24565b50610e4b929150610e4f565b5090565b5b80821115610e4b5760008155600101610e50565b600060208083528351808285015260005b81811015610e9157858101830151858201604001528201610e75565b81811115610ea3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c0657600080fd5b60008060408385031215610ee357600080fd5b610eec83610eb9565b946020939093013593505050565b600080600060608486031215610f0f57600080fd5b610f1884610eb9565b9250610f2660208501610eb9565b9150604084013590509250925092565b600060208284031215610f4857600080fd5b5035919050565b600060208284031215610f6157600080fd5b610f6a82610eb9565b9392505050565b60008060408385031215610f8457600080fd5b610f8d83610eb9565b9150610f9b60208401610eb9565b90509250929050565b600181811c90821680610fb857607f821691505b60208210811415610fd957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561100757611007610fdf565b500390565b6000821982111561101f5761101f610fdf565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe416e6b7220424e42205265776172642042656172696e67204365727469666963617465a2646970667358221220e49f0ab338707f500eeec4a492413632ad0608825a4ef8ab489f1ec45da7d6fe64736f6c634300080a0033";

type WBNBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WBNBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WBNB__factory extends ContractFactory {
  constructor(...args: WBNBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WBNB & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WBNB__factory {
    return super.connect(runner) as WBNB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WBNBInterface {
    return new Interface(_abi) as WBNBInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WBNB {
    return new Contract(address, _abi, runner) as unknown as WBNB;
  }
}
