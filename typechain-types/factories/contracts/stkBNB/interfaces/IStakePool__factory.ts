/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IStakePool,
  IStakePoolInterface,
} from "../../../../contracts/stkBNB/interfaces/IStakePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bcStakingWallet",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minCrossChainTransfer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "transferOutTimeout",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBNBDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTokenWithdrawal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cooldownPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deposit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "withdraw",
                type: "uint256",
              },
            ],
            internalType: "struct IStakePool.FeeDistribution",
            name: "fee",
            type: "tuple",
          },
        ],
        internalType: "struct IStakePool.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRate",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalWei",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poolTokenSupply",
            type: "uint256",
          },
        ],
        internalType: "struct ExchangeRate.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IStakePool__factory {
  static readonly abi = _abi;
  static createInterface(): IStakePoolInterface {
    return new Interface(_abi) as IStakePoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IStakePool {
    return new Contract(address, _abi, runner) as unknown as IStakePool;
  }
}
