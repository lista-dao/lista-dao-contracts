/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  HayJoin,
  HayJoinInterface,
} from "../../../contracts/join.sol/HayJoin";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "Cage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Deny",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Exit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Join",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Rely",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Uncage",
    type: "event",
  },
  {
    inputs: [],
    name: "cage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hay",
    outputs: [
      {
        internalType: "contract DSTokenLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vat_",
        type: "address",
      },
      {
        internalType: "address",
        name: "hay_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "live",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uncage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vat",
    outputs: [
      {
        internalType: "contract VatLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610928806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063957aa58c11610071578063957aa58c146101215780639c52a7f114610138578063b02d1e9e1461014b578063bf353dbb1461015e578063d63b23b21461017e578063ef693bed1461018657600080fd5b806336569e77146100ae5780633b4da69f146100de578063485cc955146100f357806365fae35e146101065780636924500914610119575b600080fd5b6002546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec3660046107bb565b610199565b005b6100f16101013660046107e5565b6102f6565b6100f1610114366004610818565b6103ad565b6100f1610424565b61012a60045481565b6040519081526020016100d5565b6100f1610146366004610818565b610484565b6003546100c1906001600160a01b031681565b61012a61016c366004610818565b60016020526000908152604090205481565b6100f16104f8565b6100f16101943660046107bb565b610558565b33600090815260016020819052604090912054146101d25760405162461bcd60e51b81526004016101c99061083a565b60405180910390fd5b6002546001600160a01b031663bb35783b30846101fb6b033b2e3c9fd0803ce8000000866106e7565b6040518463ffffffff1660e01b81526004016102199392919061086a565b600060405180830381600087803b15801561023357600080fd5b505af1158015610247573d6000803e3d6000fd5b5050600354604051632770a7eb60e21b8152336004820152602481018590526001600160a01b039091169250639dc29fac9150604401600060405180830381600087803b15801561029757600080fd5b505af11580156102ab573d6000803e3d6000fd5b50505050816001600160a01b03167fb4e09949657f21548b58afe74e7b86cd2295da5ff1598ae1e5faecb1cf19ca95826040516102ea91815260200190565b60405180910390a25050565b60006103026001610717565b9050801561031a576000805461ff0019166101001790555b336000908152600160208190526040909120819055600455600280546001600160a01b038581166001600160a01b031992831617909255600380549285169290911691909117905580156103a8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b33600090815260016020819052604090912054146103dd5760405162461bcd60e51b81526004016101c99061083a565b6001600160a01b038116600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b33600090815260016020819052604090912054146104545760405162461bcd60e51b81526004016101c99061083a565b600060048190556040517f2308ed18a14e800c39b86eb6ea43270105955ca385b603b64eca89f98ae8fbda9190a1565b33600090815260016020819052604090912054146104b45760405162461bcd60e51b81526004016101c99061083a565b6001600160a01b038116600081815260016020526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b33600090815260016020819052604090912054146105285760405162461bcd60e51b81526004016101c99061083a565b60016004556040517fcc904c6e788e832f10e2ddd1485bb848d81cafc645849712b96f6f06ed54402790600090a1565b33600090815260016020819052604090912054146105885760405162461bcd60e51b81526004016101c99061083a565b6004546001146105cd5760405162461bcd60e51b815260206004820152601060248201526f4861794a6f696e2f6e6f742d6c69766560801b60448201526064016101c9565b6002546001600160a01b031663bb35783b33306105f66b033b2e3c9fd0803ce8000000866106e7565b6040518463ffffffff1660e01b81526004016106149392919061086a565b600060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b50506003546040516340c10f1960e01b81526001600160a01b0386811660048301526024820186905290911692506340c10f199150604401600060405180830381600087803b15801561069457600080fd5b505af11580156106a8573d6000803e3d6000fd5b50505050816001600160a01b03167f22d324652c93739755cf4581508b60875ebdd78c20c0cff5cf8e23452b299631826040516102ea91815260200190565b6000811580610708575050808202828282816107055761070561088e565b04145b61071157600080fd5b92915050565b60008054610100900460ff161561075e578160ff16600114801561073a5750303b155b6107565760405162461bcd60e51b81526004016101c9906108a4565b506000919050565b60005460ff8084169116106107855760405162461bcd60e51b81526004016101c9906108a4565b506000805460ff191660ff92909216919091179055600190565b919050565b80356001600160a01b038116811461079f57600080fd5b600080604083850312156107ce57600080fd5b6107d7836107a4565b946020939093013593505050565b600080604083850312156107f857600080fd5b610801836107a4565b915061080f602084016107a4565b90509250929050565b60006020828403121561082a57600080fd5b610833826107a4565b9392505050565b60208082526016908201527512185e529bda5b8bdb9bdd0b585d5d1a1bdc9a5e995960521b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601260045260246000fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220d7c2b2c2cdbf939a63056050369de69076197ae8cde988589ba206751ad76cca64736f6c634300080a0033";

type HayJoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HayJoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HayJoin__factory extends ContractFactory {
  constructor(...args: HayJoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HayJoin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HayJoin__factory {
    return super.connect(runner) as HayJoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HayJoinInterface {
    return new Interface(_abi) as HayJoinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HayJoin {
    return new Contract(address, _abi, runner) as unknown as HayJoin;
  }
}
