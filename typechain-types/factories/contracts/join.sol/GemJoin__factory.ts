/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  GemJoin,
  GemJoinInterface,
} from "../../../contracts/join.sol/GemJoin";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "Cage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Deny",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Exit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Join",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Rely",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Uncage",
    type: "event",
  },
  {
    inputs: [],
    name: "cage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gem",
    outputs: [
      {
        internalType: "contract GemLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ilk",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vat_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ilk_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "gem_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "live",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uncage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vat",
    outputs: [
      {
        internalType: "contract VatLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610af2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c80639c52a7f11161007c5780639c52a7f11461014e578063b3bcfa8214610161578063bf353dbb1461016a578063c5ce281e1461018a578063d26b3e6e14610193578063d63b23b2146101a6578063ef693bed146101ae57600080fd5b806336569e77146100c45780633b4da69f146100f457806365fae35e14610109578063692450091461011c5780637bd2bea714610124578063957aa58c14610137575b600080fd5b6002546100d7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101076101023660046108d6565b6101c1565b005b610107610117366004610900565b6103a6565b61010761041d565b6004546100d7906001600160a01b031681565b61014060065481565b6040519081526020016100eb565b61010761015c366004610900565b61047d565b61014060055481565b610140610178366004610900565b60016020526000908152604090205481565b61014060035481565b6101076101a1366004610922565b6104f1565b610107610639565b6101076101bc3660046108d6565b610699565b33600090815260016020819052604090912054146101fa5760405162461bcd60e51b81526004016101f19061095e565b60405180910390fd5b60065460011461023f5760405162461bcd60e51b815260206004820152601060248201526f47656d4a6f696e2f6e6f742d6c69766560801b60448201526064016101f1565b60008112156102605760405162461bcd60e51b81526004016101f19061098e565b600254600354604051633e6e9fef60e11b81526001600160a01b0390921691637cdd3fde9161029591869086906004016109b8565b600060405180830381600087803b1580156102af57600080fd5b505af11580156102c3573d6000803e3d6000fd5b5050600480546040516323b872dd60e01b81523392810192909252306024830152604482018590526001600160a01b031692506323b872dd91506064016020604051808303816000875af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034391906109d7565b61035f5760405162461bcd60e51b81526004016101f1906109f9565b816001600160a01b03167fb4e09949657f21548b58afe74e7b86cd2295da5ff1598ae1e5faecb1cf19ca958260405161039a91815260200190565b60405180910390a25050565b33600090815260016020819052604090912054146103d65760405162461bcd60e51b81526004016101f19061095e565b6001600160a01b038116600081815260016020819052604080832091909155517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b336000908152600160208190526040909120541461044d5760405162461bcd60e51b81526004016101f19061095e565b600060068190556040517f2308ed18a14e800c39b86eb6ea43270105955ca385b603b64eca89f98ae8fbda9190a1565b33600090815260016020819052604090912054146104ad5760405162461bcd60e51b81526004016101f19061095e565b6001600160a01b038116600081815260016020526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b60006104fd6001610832565b90508015610515576000805461ff0019166101001790555b33600090815260016020818152604092839020829055600691909155600280546001600160a01b038881166001600160a01b0319928316179092556003879055600480549287169290911682178155835163313ce56760e01b81529351919363313ce5679381830193909290918290030181865afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf9190610a2a565b60055560405133907fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6090600090a28015610633576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b33600090815260016020819052604090912054146106695760405162461bcd60e51b81526004016101f19061095e565b60016006556040517fcc904c6e788e832f10e2ddd1485bb848d81cafc645849712b96f6f06ed54402790600090a1565b33600090815260016020819052604090912054146106c95760405162461bcd60e51b81526004016101f19061095e565b6001600160ff1b038111156106f05760405162461bcd60e51b81526004016101f19061098e565b6002546003546001600160a01b0390911690637cdd3fde903361071285610a43565b6040518463ffffffff1660e01b8152600401610730939291906109b8565b600060405180830381600087803b15801561074a57600080fd5b505af115801561075e573d6000803e3d6000fd5b50506004805460405163a9059cbb60e01b81526001600160a01b0387811693820193909352602481018690529116925063a9059cbb91506044016020604051808303816000875af11580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db91906109d7565b6107f75760405162461bcd60e51b81526004016101f1906109f9565b816001600160a01b03167f22d324652c93739755cf4581508b60875ebdd78c20c0cff5cf8e23452b2996318260405161039a91815260200190565b60008054610100900460ff1615610879578160ff1660011480156108555750303b155b6108715760405162461bcd60e51b81526004016101f190610a6e565b506000919050565b60005460ff8084169116106108a05760405162461bcd60e51b81526004016101f190610a6e565b506000805460ff191660ff92909216919091179055600190565b919050565b80356001600160a01b03811681146108ba57600080fd5b600080604083850312156108e957600080fd5b6108f2836108bf565b946020939093013593505050565b60006020828403121561091257600080fd5b61091b826108bf565b9392505050565b60008060006060848603121561093757600080fd5b610940846108bf565b925060208401359150610955604085016108bf565b90509250925092565b60208082526016908201527511d95b529bda5b8bdb9bdd0b585d5d1a1bdc9a5e995960521b604082015260600190565b60208082526010908201526f47656d4a6f696e2f6f766572666c6f7760801b604082015260600190565b9283526001600160a01b03919091166020830152604082015260600190565b6000602082840312156109e957600080fd5b8151801515811461091b57600080fd5b60208082526017908201527623b2b6a537b4b717b330b4b632b216ba3930b739b332b960491b604082015260600190565b600060208284031215610a3c57600080fd5b5051919050565b6000600160ff1b821415610a6757634e487b7160e01b600052601160045260246000fd5b5060000390565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea26469706673582212209a2c914c5c47c674d469e698e05d9778693af3ce5acc477d52d6053c0f10ff1464736f6c634300080a0033";

type GemJoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GemJoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GemJoin__factory extends ContractFactory {
  constructor(...args: GemJoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GemJoin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GemJoin__factory {
    return super.connect(runner) as GemJoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GemJoinInterface {
    return new Interface(_abi) as GemJoinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GemJoin {
    return new Contract(address, _abi, runner) as unknown as GemJoin;
  }
}
