/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { LisUSD, LisUSDInterface } from "../../contracts/LisUSD";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldCap",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCap",
        type: "uint256",
      },
    ],
    name: "SupplyCapSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "supplyCap_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "pull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "setSupplyCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
    ],
    name: "updateDomainSeparator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611abf806100206000396000f3fe608060405234801561001057600080fd5b506004361061018f5760003560e01c80637ecebe00116100e4578063a9059cbb11610092578063a9059cbb1461037c578063b4b33e791461038f578063b6a3f59a146103a2578063b753a98c146103b5578063bb35783b146103c8578063bf353dbb146103db578063dd62ed3e146103fb578063f2d5d56b1461042657600080fd5b80637ecebe00146102ff5780638f770ad01461031f5780638fcbaf0c1461032857806395d89b411461033b5780639c52a7f1146103435780639dc29fac14610356578063a457c2d71461036957600080fd5b8063313ce56711610141578063313ce567146102635780633644e5151461027d578063395093511461028657806340c10f191461029957806354fd4d50146102ac57806365fae35e146102cc57806370a08231146102df57600080fd5b806306fdde031461019457806307b6f159146101d2578063095ea7b3146101dc578063146413af146101ff57806318160ddd1461021257806323b872dd1461022957806330adf81f1461023c575b600080fd5b6101bc60405180604001604052806009815260200168131a5cdd18481554d160ba1b81525081565b6040516101c9919061155e565b60405180910390f35b6101da610439565b005b6101ef6101ea3660046115ca565b610543565b60405190151581526020016101c9565b6101da61020d36600461160a565b610587565b61021b60035481565b6040519081526020016101c9565b6101ef6102373660046116ce565b6106e8565b61021b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b61026b601281565b60405160ff90911681526020016101c9565b61021b60085481565b6101ef6102943660046115ca565b610938565b6101da6102a73660046115ca565b610981565b6101bc604051806040016040528060018152602001603160f81b81525081565b6101da6102da36600461170a565b610ad5565b61021b6102ed36600461170a565b60046020526000908152604090205481565b61021b61030d36600461170a565b60066020526000908152604090205481565b61021b60075481565b6101da610336366004611725565b610b22565b6101bc610e10565b6101da61035136600461170a565b610e9e565b6101da6103643660046115ca565b610ee8565b6101ef6103773660046115ca565b6110a7565b6101ef61038a3660046115ca565b611144565b6101da61039d3660046117af565b611158565b6101da6103b03660046117af565b611250565b6101da6103c33660046115ca565b611317565b6101da6103d63660046116ce565b611327565b61021b6103e936600461170a565b60016020526000908152604090205481565b61021b6104093660046117c8565b600560209081526000928352604080842090915290825290205481565b6101da6104343660046115ca565b611332565b33600090815260016020819052604090912054146104725760405162461bcd60e51b8152600401610469906117fb565b60405180910390fd5b604051651b1a5cd554d160d21b60208201526026016040516020818303038152906040528051906020012060026040516020016104af9190611865565b6040516020818303038152906040528051906020012014156105135760405162461bcd60e51b815260206004820152601b60248201527f4c69735553442f73796d626f6c2d616c72656164792d726573657400000000006044820152606401610469565b604080518082019091526006808252651b1a5cd554d160d21b6020909201918252610540916002916114c5565b50565b600061055033848461133d565b6040518281526001600160a01b038416903390600080516020611a6a8339815191529060200160405180910390a350600192915050565b60006105936001611438565b905080156105ab576000805461ff0019166101001790555b33600090815260016020818152604092839020829055825180840184526009815268131a5cdd18481554d160ba1b9082015282518084018452918252603160f81b918101919091529051610669917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f917f4a1ae3fb3d0e4c136842c53cc6c08b15284baa1fdfa845c75a28c505a28b0a4b917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918991309101611901565b60408051601f198184030181529190528051602091820120600855835161069691600291908601906114c5565b50600782905580156106e2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006001600160a01b03841661074a5760405162461bcd60e51b815260206004820152602160248201527f4c69735553442f7472616e736665722d66726f6d2d7a65726f2d6164647265736044820152607360f81b6064820152608401610469565b6001600160a01b0383166107a05760405162461bcd60e51b815260206004820152601f60248201527f4c69735553442f7472616e736665722d746f2d7a65726f2d61646472657373006044820152606401610469565b6001600160a01b0384166000908152600460205260409020548211156107d85760405162461bcd60e51b81526004016104699061192d565b6001600160a01b038416331480159061081657506001600160a01b038416600090815260056020908152604080832033845290915290205460001914155b15610897576001600160a01b038416600090815260056020908152604080832033845290915290205482111561085e5760405162461bcd60e51b815260040161046990611964565b6001600160a01b0384166000908152600560209081526040808320338452909152812080548492906108919084906119b1565b90915550505b6001600160a01b038416600090815260046020526040812080548492906108bf9084906119b1565b90915550506001600160a01b038316600090815260046020526040812080548492906108ec9084906119c8565b92505081905550826001600160a01b0316846001600160a01b0316600080516020611a4a8339815191528460405161092691815260200190565b60405180910390a35060019392505050565b3360008181526005602090815260408083206001600160a01b038716845290915281205490919061097790829086906109729087906119c8565b61133d565b5060019392505050565b33600090815260016020819052604090912054146109b15760405162461bcd60e51b8152600401610469906117fb565b6001600160a01b038216610a075760405162461bcd60e51b815260206004820152601b60248201527f4c69735553442f6d696e742d746f2d7a65726f2d6164647265737300000000006044820152606401610469565b60075481600354610a1891906119c8565b1115610a5b5760405162461bcd60e51b8152602060048201526012602482015271131a5cd554d10bd8d85c0b5c995858da195960721b6044820152606401610469565b6001600160a01b03821660009081526004602052604081208054839290610a839084906119c8565b925050819055508060036000828254610a9c91906119c8565b90915550506040518181526001600160a01b03831690600090600080516020611a4a833981519152906020015b60405180910390a35050565b3360009081526001602081905260409091205414610b055760405162461bcd60e51b8152600401610469906117fb565b6001600160a01b0316600090815260016020819052604090912055565b600854604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60208201526001600160a01b03808c169282019290925290891660608201526080810188905260a0810187905285151560c08201526000919060e00160405160208183030381529060405280519060200120604051602001610bc392919061190160f01b81526002810192909252602282015260420190565b60408051601f19818403018152919052805160209091012090506001600160a01b038916610c2e5760405162461bcd60e51b815260206004820152601860248201527704c69735553442f696e76616c69642d616464726573732d360441b6044820152606401610469565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610c81573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610ce35760405162461bcd60e51b8152602060048201526015602482015274131a5cd554d10bda5b9d985b1a590b5c195c9b5a5d605a1b6044820152606401610469565b851580610cf05750854211155b610d345760405162461bcd60e51b8152602060048201526015602482015274131a5cd554d10bdc195c9b5a5d0b595e1c1a5c9959605a1b6044820152606401610469565b6001600160a01b0389166000908152600660205260408120805491610d58836119e0565b919050558714610da15760405162461bcd60e51b81526020600482015260146024820152734c69735553442f696e76616c69642d6e6f6e636560601b6044820152606401610469565b600085610daf576000610db3565b6000195b6001600160a01b038b81166000818152600560209081526040808320948f1680845294825291829020859055905184815293945091929091600080516020611a6a833981519152910160405180910390a350505050505050505050565b60028054610e1d9061182a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e499061182a565b8015610e965780601f10610e6b57610100808354040283529160200191610e96565b820191906000526020600020905b815481529060010190602001808311610e7957829003601f168201915b505050505081565b3360009081526001602081905260409091205414610ece5760405162461bcd60e51b8152600401610469906117fb565b6001600160a01b0316600090815260016020526040812055565b6001600160a01b038216610f3e5760405162461bcd60e51b815260206004820152601d60248201527f4c69735553442f6275726e2d66726f6d2d7a65726f2d616464726573730000006044820152606401610469565b6001600160a01b038216600090815260046020526040902054811115610f765760405162461bcd60e51b81526004016104699061192d565b6001600160a01b0382163314801590610fb457506001600160a01b038216600090815260056020908152604080832033845290915290205460001914155b15611035576001600160a01b0382166000908152600560209081526040808320338452909152902054811115610ffc5760405162461bcd60e51b815260040161046990611964565b6001600160a01b03821660009081526005602090815260408083203384529091528120805483929061102f9084906119b1565b90915550505b6001600160a01b0382166000908152600460205260408120805483929061105d9084906119b1565b92505081905550806003600082825461107691906119b1565b90915550506040518181526000906001600160a01b03841690600080516020611a4a83398151915290602001610ac9565b3360008181526005602090815260408083206001600160a01b03871684529091528120549091908381101561112c5760405162461bcd60e51b815260206004820152602560248201527f4c69735553442f6465637265617365642d616c6c6f77616e63652d62656c6f776044820152642d7a65726f60d81b6064820152608401610469565b611139828686840361133d565b506001949350505050565b60006111513384846106e8565b9392505050565b33600090815260016020819052604090912054146111885760405162461bcd60e51b8152600401610469906117fb565b6040805180820182526009815268131a5cdd18481554d160ba1b6020918201528151808301835260018152603160f81b908201529051611232917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f917f4a1ae3fb3d0e4c136842c53cc6c08b15284baa1fdfa845c75a28c505a28b0a4b917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918691309101611901565b60408051601f19818403018152919052805160209091012060085550565b33600090815260016020819052604090912054146112805760405162461bcd60e51b8152600401610469906117fb565b6003548110156112d25760405162461bcd60e51b815260206004820152601b60248201527f4c69735553442f6d6f72652d737570706c792d7468616e2d63617000000000006044820152606401610469565b600780549082905560408051828152602081018490527f6763409c7e3ad1a90337041a3f8ec72290e406af08a63cf3193b3e2b49c7bea6910160405180910390a15050565b6113223383836106e8565b505050565b6106e28383836106e8565b6113228233836106e8565b6001600160a01b0383166113935760405162461bcd60e51b815260206004820181905260248201527f4c69735553442f617070726f76652d66726f6d2d7a65726f2d616464726573736044820152606401610469565b6001600160a01b0382166113e95760405162461bcd60e51b815260206004820152601e60248201527f4c69735553442f617070726f76652d746f2d7a65726f2d6164647265737300006044820152606401610469565b6001600160a01b038381166000818152600560209081526040808320948716808452948252918290208590559051848152600080516020611a6a833981519152910160405180910390a3505050565b60008054610100900460ff161561147f578160ff16600114801561145b5750303b155b6114775760405162461bcd60e51b8152600401610469906119fb565b506000919050565b60005460ff8084169116106114a65760405162461bcd60e51b8152600401610469906119fb565b506000805460ff191660ff92909216919091179055600190565b919050565b8280546114d19061182a565b90600052602060002090601f0160209004810192826114f35760008555611539565b82601f1061150c57805160ff1916838001178555611539565b82800160010185558215611539579182015b8281111561153957825182559160200191906001019061151e565b50611545929150611549565b5090565b5b80821115611545576000815560010161154a565b600060208083528351808285015260005b8181101561158b5785810183015185820160400152820161156f565b8181111561159d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114c057600080fd5b600080604083850312156115dd57600080fd5b6115e6836115b3565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561161f57600080fd5b83359250602084013567ffffffffffffffff8082111561163e57600080fd5b818601915086601f83011261165257600080fd5b813581811115611664576116646115f4565b604051601f8201601f19908116603f0116810190838211818310171561168c5761168c6115f4565b816040528281528960208487010111156116a557600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b6000806000606084860312156116e357600080fd5b6116ec846115b3565b92506116fa602085016115b3565b9150604084013590509250925092565b60006020828403121561171c57600080fd5b611151826115b3565b600080600080600080600080610100898b03121561174257600080fd5b61174b896115b3565b975061175960208a016115b3565b965060408901359550606089013594506080890135801515811461177c57600080fd5b935060a089013560ff8116811461179257600080fd5b979a969950949793969295929450505060c08201359160e0013590565b6000602082840312156117c157600080fd5b5035919050565b600080604083850312156117db57600080fd5b6117e4836115b3565b91506117f2602084016115b3565b90509250929050565b602080825260159082015274131a5cd554d10bdb9bdd0b585d5d1a1bdc9a5e9959605a1b604082015260600190565b600181811c9082168061183e57607f821691505b6020821081141561185f57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c91508083168061188157607f831692505b60208084108214156118a157634e487b7160e01b86526022600452602486fd5b8180156118b557600181146118c6576118f3565b60ff198616895284890196506118f3565b60008a81526020902060005b868110156118eb5781548b8201529085019083016118d2565b505084890196505b509498975050505050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6020808252601b908201527f4c69735553442f696e73756666696369656e742d62616c616e63650000000000604082015260600190565b6020808252601d908201527f4c69735553442f696e73756666696369656e742d616c6c6f77616e6365000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156119c3576119c361199b565b500390565b600082198211156119db576119db61199b565b500190565b60006000198214156119f4576119f461199b565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a26469706673582212201bf3ca006537c0bab5351c4700354b4756868edbea1f6917e29cd16b79b85bcc64736f6c634300080a0033";

type LisUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LisUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LisUSD__factory extends ContractFactory {
  constructor(...args: LisUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LisUSD & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LisUSD__factory {
    return super.connect(runner) as LisUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LisUSDInterface {
    return new Interface(_abi) as LisUSDInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LisUSD {
    return new Contract(address, _abi, runner) as unknown as LisUSD;
  }
}
